<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>MessageView</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>It is used to display a summarized list of different types of messages (error, warning, success, and information messages).

&lt;h3&gt;Overview&lt;/h3&gt;
It is meant to be embedded into container controls (such as {@link sap.m.Popover}, {@link sap.m.ResponsivePopover}, {@link sap.m.Dialog}).
It provides a handy and systematized way to navigate and explore details for every message.
If the &lt;code&gt;MessageView&lt;/code&gt; contains only one item, which has either description, markupDescription or longTextUrl, its details page will be displayed initially.
It also exposes the {@link sap.m.MessageView#event:activeTitlePress} event, which can be used for navigation from a message to its source.
&lt;h3&gt;Notes:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If your application changes its model between two interactions with the &lt;code&gt;MessageView&lt;/code&gt;, this could lead to outdated messages being shown.
To avoid this, you need to call &lt;code&gt;navigateBack&lt;/code&gt; on the &lt;code&gt;MessageView&lt;/code&gt; BEFORE opening its container.&lt;/li&gt;
&lt;li&gt; Messages can have descriptions preformatted with HTML markup. In this case, the &lt;code&gt;markupDescription&lt;/code&gt; has to be set to &lt;code&gt;true&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt; If the message cannot be fully displayed, or includes a long description, the &lt;code&gt;MessageView&lt;/code&gt; provides navigation to the detailed description. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Structure&lt;/h3&gt;
The &lt;code&gt;MessageView&lt;/code&gt; stores all messages in an association of type {@link sap.m.MessageItem}, named &lt;code&gt;items&lt;/code&gt;.
&lt;br&gt;
A set of properties determines how the items are rendered:
&lt;ul&gt;
&lt;li&gt; counter - An integer that is used to indicate the number of errors for each type. &lt;/li&gt;
&lt;li&gt; type - The type of message. &lt;/li&gt;
&lt;li&gt; title/subtitle - The title and subtitle of the message.&lt;/li&gt;
&lt;li&gt; description - The long text description of the message.&lt;/li&gt;
&lt;li&gt; activeTitle - Determines whether the title of the item is interactive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;h4&gt;When to use:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When you want a way to centrally manage messages and show them to the user without additional work for the developer.
If needed the navigation between the message item and the source of the error can be created by the application.
This can be done by setting the &lt;code&gt;activeTitle&lt;/code&gt; property to true and providing a handler for the &lt;code&gt;activeTitlePress&lt;/code&gt; event.&lt;/li&gt;
&lt;/ul&gt;</documentation>
    <since>1.46</since>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property name="asyncDescriptionHandler" type="sap.ui.core/any" group="Behavior">
            <documentation>Callback function for resolving a promise after description has been asynchronously loaded inside this function.</documentation>
        </property>
        <property name="asyncURLHandler" type="sap.ui.core/any" group="Behavior">
            <documentation>Callback function for resolving a promise after a link has been asynchronously validated inside this function.</documentation>
        </property>
        <property name="groupItems" type="sap.ui.core/boolean" defaultValue="false" group="Behavior">
            <documentation>Defines whether the MessageItems are grouped or not.</documentation>
        </property>
        <property name="showDetailsPageHeader" type="sap.ui.core/boolean" defaultValue="true" group="Behavior">
            <documentation>Defines whether the header of details page will be shown.</documentation>
        </property>
    </properties>
    <events>
        <event name="afterOpen" allowPreventDefault="false">
            <documentation>Event fired after the popover is opened.</documentation>
            <deprecation since="1.72">Use the appropriate event from the wrapper control, instead.</deprecation>
            <parameters>
                <parameter name="openBy" type="sap.ui.core/Control">
                    <documentation>This refers to the control which opens the popover.</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="itemSelect" allowPreventDefault="false">
            <documentation>Event fired when description is shown.</documentation>
            <parameters>
                <parameter name="item" type="sap.m/MessageItem">
                    <documentation>Refers to the message item that is being presented.</documentation>
                </parameter>
                <parameter name="messageTypeFilter" type="sap.ui.core/MessageType">
                    <documentation>Refers to the type of messages being shown.
See sap.ui.core.MessageType values for types.</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="listSelect" allowPreventDefault="false">
            <documentation>Event fired when one of the lists is shown when (not) filtered  by type.</documentation>
            <parameters>
                <parameter name="messageTypeFilter" type="sap.ui.core/MessageType">
                    <documentation>This parameter refers to the type of messages being shown.</documentation>
                </parameter>
            </parameters>
        </event>
        <event name="longtextLoaded" allowPreventDefault="false">
            <documentation>Event fired when the long text description data from a remote URL is loaded.</documentation>
        </event>
        <event name="urlValidated" allowPreventDefault="false">
            <documentation>Event fired when a validation of a URL from long text description is ready.</documentation>
        </event>
        <event name="activeTitlePress" since="1.58" allowPreventDefault="false">
            <documentation>Event fired when an activeTitle of a MessageItem is pressed.</documentation>
            <parameters>
                <parameter name="item" type="sap.m/MessageItem">
                    <documentation>Refers to the message item that contains the activeTitle.</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <aggregations default="items">
        <aggregation name="items" type="sap.m/MessageItem" cardinality="0..n">
            <documentation>A list with message items.
If only one item is provided, the initial page will be the details page for the item.</documentation>
        </aggregation>
        <aggregation name="headerButton" type="sap.m/Button" cardinality="0..1">
            <documentation>Sets a custom header button.</documentation>
        </aggregation>
        <aggregation name="_navContainer" type="sap.m/NavContainer" cardinality="0..1" visibility="hidden">
            <documentation>A navContainer that contains both details and list pages.</documentation>
        </aggregation>
    </aggregations>
</control>
