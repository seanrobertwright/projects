{"!name":"sap.f","!version":"1.20.0","!define":{"sap.f.cards.NumericSideIndicator":{"!description":"Holds a set of side indicator attributes used in the {@link sap.f.cards.NumericHeader} control.","getMetadata":{"!description":"Returns a metadata object for class sap.f.cards.NumericSideIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","setTitle":{"!description":"Sets the title.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericSideIndicator","parameters":{"sValue":"type: string, description: The text of the title"}},"!category":"class","setNumber":{"!description":"Sets the numeric value.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericSideIndicator","parameters":{"sValue":"type: string, description: The text of the title"}},"extend":{"!description":"Creates a new subclass of class sap.f.cards.NumericSideIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNumber":{"!description":"Gets current value of property {@link #getNumber number}.\n\nThe numeric value","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>NumericSideIndicator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the indicator","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/f/cards/NumericSideIndicator","!helpDescription":"Holds a set of side indicator attributes used in the {@link sap.f.cards.NumericHeader} control.","setUnit":{"!description":"Sets the unit of measurement.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericSideIndicator","parameters":{"sValue":"type: string, description: The text of the title"}},"getUnit":{"!description":"Gets current value of property {@link #getUnit unit}.\n\nDefines the unit of measurement (scaling prefix) for the numeric value","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.f.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oRoutes?: [Object | Object], oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.f.routing.Router"},"sap.f.semantic.PositiveAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PositiveAction"},"sap.f.AvatarGroupItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nDetermines the path to the desired image or icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.f.AvatarGroupItem","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.AvatarGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAvatarColor":{"!description":"Returns the color of the avatar.","!static":false,"!category":"function","!type":"fn() -> String"},"getInitials":{"!description":"Gets current value of property {@link #getInitials initials}.\n\nDefines the displayed initials.","!static":false,"!category":"function","!type":"fn() -> String"},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nDetermines the path to the desired image or icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!proto":"sap.ui.core.Control","!category":"class","setInitials":{"!description":"Sets a new value for property {@link #getInitials initials}.\n\nDefines the displayed initials.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitials: String) -> sap.f.AvatarGroupItem","parameters":{"sInitials":"type: string, description: New value for property <code>initials<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.AvatarGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>AvatarGroupItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getInitials initials} : string<\/li>\n<li>{@link #getFallbackIcon fallbackIcon} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getFallbackIcon":{"!description":"Gets current value of property {@link #getFallbackIcon fallbackIcon}.\n\nDefines the fallback icon displayed in case of wrong image src and no initials set.\n\n<b>Notes:<\/b> <ul> <li>If not set, a default fallback icon is displayed.<\/li> <li>Accepted values are only icons from the SAP icon font.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/f/AvatarGroupItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setFallbackIcon":{"!description":"Sets a new value for property {@link #getFallbackIcon fallbackIcon}.\n\nDefines the fallback icon displayed in case of wrong image src and no initials set.\n\n<b>Notes:<\/b> <ul> <li>If not set, a default fallback icon is displayed.<\/li> <li>Accepted values are only icons from the SAP icon font.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFallbackIcon: String) -> sap.f.AvatarGroupItem","parameters":{"sFallbackIcon":"type: string, description: New value for property <code>fallbackIcon<\/code>"}}},"sap.f.GridContainerSettings":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setColumns":{"!description":"Sets a new value for property {@link #getColumns columns}.\n\nHow many columns to have on a row.\n\nIf not defined, <code>sap.f.GridContainer<\/code> will position as many columns as they can fit in the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.f.GridContainerSettings","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.GridContainerSettings.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.base.ManagedObject","getGap":{"!description":"Gets current value of property {@link #getGap gap}.\n\nThe size of the gap between columns and rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.\n\nDefault value is <code>16px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!category":"class","getColumnSize":{"!description":"Gets current value of property {@link #getColumnSize columnSize}.\n\nThe width of the columns.\n\n<b>Note:<\/b> Values different than single size in 'px' or 'rem' are not supported for the polyfill for IE.\n\nDefault value is <code>80px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setMaxColumnSize":{"!description":"Sets a new value for property {@link #getMaxColumnSize maxColumnSize}.\n\nSets the maximum width of the columns. Setting this together with <code>minColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxColumnSize: sap.ui.core.CSSSize) -> sap.f.GridContainerSettings","parameters":{"sMaxColumnSize":"type: sap.ui.core.CSSSize, description: New value for property <code>maxColumnSize<\/code>"}},"getMinColumnSize":{"!description":"Gets current value of property {@link #getMinColumnSize minColumnSize}.\n\nSets the minimum width of the columns. Setting this together with <code>maxColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getColumns":{"!description":"Gets current value of property {@link #getColumns columns}.\n\nHow many columns to have on a row.\n\nIf not defined, <code>sap.f.GridContainer<\/code> will position as many columns as they can fit in the container.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.f.GridContainerSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>sap.f.GridContainerSettings<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumns columns} : int<\/li>\n<li>{@link #getColumnSize columnSize} : sap.ui.core.CSSSize (default: 80px)<\/li>\n<li>{@link #getMinColumnSize minColumnSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxColumnSize maxColumnSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRowSize rowSize} : sap.ui.core.CSSSize (default: 80px)<\/li>\n<li>{@link #getGap gap} : sap.ui.core.CSSSize (default: 16px)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/f/GridContainerSettings","getRowSize":{"!description":"Gets current value of property {@link #getRowSize rowSize}.\n\nThe height of the rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.\n\nDefault value is <code>80px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setMinColumnSize":{"!description":"Sets a new value for property {@link #getMinColumnSize minColumnSize}.\n\nSets the minimum width of the columns. Setting this together with <code>maxColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinColumnSize: sap.ui.core.CSSSize) -> sap.f.GridContainerSettings","parameters":{"sMinColumnSize":"type: sap.ui.core.CSSSize, description: New value for property <code>minColumnSize<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setGap":{"!description":"Sets a new value for property {@link #getGap gap}.\n\nThe size of the gap between columns and rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>16px<\/code>.","!static":false,"!category":"function","!type":"fn(sGap: sap.ui.core.CSSSize) -> sap.f.GridContainerSettings","parameters":{"sGap":"type: sap.ui.core.CSSSize, description: New value for property <code>gap<\/code>"}},"getMaxColumnSize":{"!description":"Gets current value of property {@link #getMaxColumnSize maxColumnSize}.\n\nSets the maximum width of the columns. Setting this together with <code>minColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setRowSize":{"!description":"Sets a new value for property {@link #getRowSize rowSize}.\n\nThe height of the rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>80px<\/code>.","!static":false,"!category":"function","!type":"fn(sRowSize: sap.ui.core.CSSSize) -> sap.f.GridContainerSettings","parameters":{"sRowSize":"type: sap.ui.core.CSSSize, description: New value for property <code>rowSize<\/code>"}},"setColumnSize":{"!description":"Sets a new value for property {@link #getColumnSize columnSize}.\n\nThe width of the columns.\n\n<b>Note:<\/b> Values different than single size in 'px' or 'rem' are not supported for the polyfill for IE.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>80px<\/code>.","!static":false,"!category":"function","!type":"fn(sColumnSize: sap.ui.core.CSSSize) -> sap.f.GridContainerSettings","parameters":{"sColumnSize":"type: sap.ui.core.CSSSize, description: New value for property <code>columnSize<\/code>"}}},"sap.f.semantic.DiscussInJamAction":{"!description":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DiscussInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DiscussInJamAction<\/code>.","!module":"sap/f/semantic/DiscussInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SendEmailAction":{"!description":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendEmailAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendEmailAction<\/code>.","!module":"sap/f/semantic/SendEmailAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.ShellBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.ShellBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.ShellBar"},"sap.f.AvatarGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.AvatarGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.AvatarGroup"},"sap.f.FlexibleColumnLayout":{"setDefaultTransitionNameBeginColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameBeginColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameBeginColumn":"type: string, description: New value for property <code>defaultTransitionNameBeginColumn<\/code>"}},"backToPage":{"!description":"Navigates back to a page in the <code>FlexibleColumnLayout<\/code>. Columns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.\n\nCalling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer, then the beforeHide pseudo event on the source page, beforeFirstShow (if applicable), and beforeShow on the target page. Later, after the transition has completed, the afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left. The given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data property. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(sPageId: String, oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","sPageId":"type: string, description: The screen to which is being navigated to. The ID or the control itself can be given.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).\n\nIn scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"getDefaultTransitionNameEndColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"_getLayoutHistory":{"!description":"Returns the layout history object","!static":false,"!category":"function","!type":"fn() -> LayoutHistory"},"setInitialEndColumnPage":{"!description":"Sets the associated {@link #getInitialEndColumnPage initialEndColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialEndColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialEndColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialEndColumnPage association; alternatively, an element instance may be given"}},"setLayout":{"!description":"Sets a new value for property {@link #getLayout layout}.\n\nDetermines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn(sLayout: sap.f.LayoutType) -> sap.f.FlexibleColumnLayout","parameters":{"sLayout":"type: sap.f.LayoutType, description: New value for property <code>layout<\/code>"}},"backToTopBeginColumn":{"!description":"Navigates back to the initial/top level of Begin column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"detachEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:endColumnNavigate endColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllBeginColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getBeginColumnPages beginColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireAfterEndColumnNavigate":{"!description":"Fires event {@link #event:afterEndColumnNavigate afterEndColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireEndColumnNavigate":{"!description":"Fires event {@link #event:endColumnNavigate endColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxColumnsCount":{"!description":"Returns the maximum number of columns that can be displayed at once based on the control width","!static":false,"!category":"function","!type":"fn() -> Number"},"setInitialBeginColumnPage":{"!description":"Sets the associated {@link #getInitialBeginColumnPage initialBeginColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialBeginColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialBeginColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialBeginColumnPage association; alternatively, an element instance may be given"}},"removeAllMidColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getMidColumnPages midColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling three columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two (<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li> <li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","getMetadata":{"!description":"Returns a metadata object for class sap.f.FlexibleColumnLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAutoFocus":{"!description":"Gets current value of property {@link #getAutoFocus autoFocus}.\n\nDetermines whether the initial focus of the <code>NavContainer<\/code> instances is set automatically on first rendering and after navigating to a new page.\n\nFor more information, see {@link sap.m.NavContainer#autoFocus}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChange stateChange} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachAfterMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterMidColumnNavigate afterMidColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChange stateChange} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFired when there is a change in the <code>layout<\/code> property or in the maximum number of columns that can be displayed at once. <br/><\/br> <ul>The interactions that may lead to a state change are: <li>the property <code>layout<\/code> was changed indirectly by the user clicking a layout arrow<\/li> <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.<\/li><\/ul> <br/><br/> <b>Note: <\/b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultTransitionNameBeginColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllEndColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getEndColumnPages endColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfBeginColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBeginColumnPages beginColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> Number","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage whose index is looked for"}},"indexOfEndColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getEndColumnPages endColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> Number","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getDefaultTransitionNameMidColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"toMidColumnPage":{"!description":"Navigates to a given Mid column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"removeBeginColumnPage":{"!description":"Removes a beginColumnPage from the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(vBeginColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vBeginColumnPage":"type: int|string|sap.ui.core.Control, description: The beginColumnPage to remove or its index or id"}},"!module":"sap/f/FlexibleColumnLayout","fireMidColumnNavigate":{"!description":"Fires event {@link #event:midColumnNavigate midColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling three columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two (<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li> <li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","insertMidColumnPage":{"!description":"Inserts a midColumnPage into the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the midColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the midColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the midColumnPage is inserted at the last position"}},"destroyMidColumnPages":{"!description":"Destroys all the midColumnPages in the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getEndColumnPages":{"!description":"Gets content of aggregation {@link #getEndColumnPages endColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>End<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#event:beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getBeginColumnPages":{"!description":"Gets content of aggregation {@link #getBeginColumnPages beginColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Begin<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#event:beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beginColumnNavigate beginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Begin<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireStateChange":{"!description":"Fires event {@link #event:stateChange stateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:midColumnNavigate midColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setAutoFocus":{"!description":"Sets a new value for property {@link #getAutoFocus autoFocus}.\n\nDetermines whether the initial focus of the <code>NavContainer<\/code> instances is set automatically on first rendering and after navigating to a new page.\n\nFor more information, see {@link sap.m.NavContainer#autoFocus}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoFocus: Boolean) -> sap.f.FlexibleColumnLayout","parameters":{"bAutoFocus":"type: boolean, description: New value for property <code>autoFocus<\/code>"}},"addMidColumnPage":{"!description":"Adds some midColumnPage to the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage to add; if empty, nothing is inserted"}},"getCurrentEndColumnPage":{"!description":"Returns the currently displayed End column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","fireAfterMidColumnNavigate":{"!description":"Fires event {@link #event:afterMidColumnNavigate afterMidColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.f.FlexibleColumnLayout","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"backToTopMidColumn":{"!description":"Navigates back to the initial/top level of Mid column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"!category":"class","insertBeginColumnPage":{"!description":"Inserts a beginColumnPage into the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the beginColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the beginColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the beginColumnPage is inserted at the last position"}},"getInitialBeginColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialBeginColumnPage initialBeginColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"destroyEndColumnPages":{"!description":"Destroys all the endColumnPages in the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getLayout":{"!description":"Gets current value of property {@link #getLayout layout}.\n\nDetermines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.\n\nDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.LayoutType"},"!constructorDescription":"Constructor for a new <code>sap.f.FlexibleColumnLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAutoFocus autoFocus} : boolean (default: true)<\/li>\n<li>{@link #getLayout layout} : sap.f.LayoutType (default: OneColumn)<\/li>\n<li>{@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn} : string (default: slide)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBeginColumnPages beginColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getMidColumnPages midColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getEndColumnPages endColumnPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialBeginColumnPage initialBeginColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMidColumnPage initialMidColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialEndColumnPage initialEndColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beginColumnNavigate beginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:midColumnNavigate midColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMidColumnNavigate afterMidColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:endColumnNavigate endColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterEndColumnNavigate afterEndColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:columnResize columnResize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachAfterMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterMidColumnNavigate afterMidColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Mid<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getInitialEndColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialEndColumnPage initialEndColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"attachAfterBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Begin<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:endColumnNavigate endColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>End<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeMidColumnPage":{"!description":"Removes a midColumnPage from the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(vMidColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMidColumnPage":"type: int|string|sap.ui.core.Control, description: The midColumnPage to remove or its index or id"}},"getInitialMidColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialMidColumnPage initialMidColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"backToTopEndColumn":{"!description":"Navigates back to the initial/top level of End column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"indexOfMidColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getMidColumnPages midColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> Number","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage whose index is looked for"}},"setDefaultTransitionNameMidColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameMidColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameMidColumn":"type: string, description: New value for property <code>defaultTransitionNameMidColumn<\/code>"}},"destroyBeginColumnPages":{"!description":"Destroys all the beginColumnPages in the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"toBeginColumnPage":{"!description":"Navigates to a given Begin column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"_getColumnWidthDistributionForLayout":{"!description":"Returns a string, representing the relative percentage sizes of the columns for the given layout in the format \"begin/mid/end\" (f.e. \"33/67/0\")","!static":false,"!category":"function","!type":"fn(sLayout: String, bAsArray: Boolean) -> String | Array","parameters":{"sLayout":"type: string, description: the layout","bAsArray":"type: boolean, description: return an array in the format [33, 67, 0] instead of a string \"33/67/0\""}},"toEndColumnPage":{"!description":"Navigates to a given End column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"getMidColumnPages":{"!description":"Gets content of aggregation {@link #getMidColumnPages midColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Mid<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#event:beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachColumnResize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:columnResize columnResize} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFired when resize of each column has completed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertEndColumnPage":{"!description":"Inserts a endColumnPage into the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the endColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the endColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the endColumnPage is inserted at the last position"}},"removeEndColumnPage":{"!description":"Removes a endColumnPage from the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(vEndColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vEndColumnPage":"type: int|string|sap.ui.core.Control, description: The endColumnPage to remove or its index or id"}},"fireAfterBeginColumnNavigate":{"!description":"Fires event {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setDefaultTransitionNameEndColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameEndColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameEndColumn":"type: string, description: New value for property <code>defaultTransitionNameEndColumn<\/code>"}},"getCurrentMidColumnPage":{"!description":"Returns the currently displayed Mid column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachAfterEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterEndColumnNavigate afterEndColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setInitialMidColumnPage":{"!description":"Sets the associated {@link #getInitialMidColumnPage initialMidColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialMidColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialMidColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialMidColumnPage association; alternatively, an element instance may be given"}},"attachAfterEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterEndColumnNavigate afterEndColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>End<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:midColumnNavigate midColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Mid<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireBeginColumnNavigate":{"!description":"Fires event {@link #event:beginColumnNavigate beginColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCurrentBeginColumnPage":{"!description":"Returns the currently displayed Begin column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"addBeginColumnPage":{"!description":"Adds some beginColumnPage to the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage to add; if empty, nothing is inserted"}},"addEndColumnPage":{"!description":"Adds some endColumnPage to the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage to add; if empty, nothing is inserted"}},"detachColumnResize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:columnResize columnResize} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"to":{"!description":"Navigates to the given page inside the FlexibleColumnLayout. Columns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which we are navigating to. The ID or the control itself can be given."}},"detachBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beginColumnNavigate beginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireColumnResize":{"!description":"Fires event {@link #event:columnResize columnResize} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.f.semantic.NegativeAction":{"!description":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.NegativeAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>NegativeAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/NegativeAction","!helpDescription":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>NegativeAction<\/code> text. <b>Note:<\/b> the default text is \"Reject\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>NegativeAction<\/code> text. <b>Note:<\/b> the default text is \"Reject\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.NegativeAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.Avatar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.Avatar} instead.<br>An image-like control that has different display options for representing images, initials, and icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes depending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.","extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Avatar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.Avatar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Avatar<\/code>.","!module":"sap/f/Avatar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.Avatar} instead.<br>An image-like control that has different display options for representing images, initials, and icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes depending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.","!proto":"sap.m.Avatar","!category":"class"},"sap.f.cards":{"unitOfMeasurement":{"!description":"General unit of measurement for the header. Displayed as side information to the subtitle.","!category":"enum","!type":"String"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"trend":{"!description":"The direction of the trend arrow. Shows deviation for the value of the main number indicator.","!category":"enum","!type":"sap.m.DeviationIndicator"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"iconSrc":{"!description":"Defines the icon source.","!category":"enum","!type":"sap.ui.core.URI"},"scale":{"!description":"Defines the unit of measurement (scaling prefix) for the main indicator. Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used. If the unit contains more than three characters, only the first three characters are displayed.","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"The title of the indicator","!category":"enum","!type":"String"},"iconDisplayShape":{"!description":"Defines the shape of the icon.","!category":"enum","!type":"sap.m.AvatarShape"},"number":{"!description":"The numeric value","!category":"enum","!type":"String"},"unit":{"!description":"Defines the unit of measurement (scaling prefix) for the numeric value","!category":"enum","!type":"String"},"Header":"sap.f.cards.Header_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"IHeader":"sap.f.cards.IHeader","NumericHeader":"sap.f.cards.NumericHeader_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"subtitle":{"!description":"The subtitle of the card","!category":"enum","!type":"String"},"statusText":{"!description":"Defines the status text.","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"iconInitials":{"!description":"Defines the initials of the icon.","!category":"enum","!type":"String"},"NumericSideIndicator":"sap.f.cards.NumericSideIndicator_obj","details":{"!description":"Additional text which adds more details to what is shown in the numeric header.","!category":"enum","!type":"String"},"state":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"sap.m.ValueColor"}},"sap.f.GridListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.GridListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.GridListItem"},"sap.f.semantic.CopyAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CopyAction"},"sap.f.DynamicPageTitleShrinkRatio":{"!description":"A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle<\/code>.","!module":"sap/f/library","!helpDescription":"A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle<\/code>.","!category":"namespace"},"sap.f.IShellBar":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/f/library","!category":"static class"},"sap.f.ProductSwitchItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nDefines the icon to be displayed as graphical element within the <code>ProductSwitchItem<\/code>. It can be an image or an icon from the SAP icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.f.ProductSwitchItem","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.ProductSwitchItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSubTitle":{"!description":"Sets a new value for property {@link #getSubTitle subTitle}.\n\nDetermines the subtitle of the <code>ProductSwitchItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubTitle: String) -> sap.f.ProductSwitchItem","parameters":{"sSubTitle":"type: string, description: New value for property <code>subTitle<\/code>"}},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nDefines the icon to be displayed as graphical element within the <code>ProductSwitchItem<\/code>. It can be an image or an icon from the SAP icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!proto":"sap.ui.core.Control","getSubTitle":{"!description":"Gets current value of property {@link #getSubTitle subTitle}.\n\nDetermines the subtitle of the <code>ProductSwitchItem<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDetermines the title of the <code>ProductSwitchItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.f.ProductSwitchItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","getTargetSrc":{"!description":"Gets current value of property {@link #getTargetSrc targetSrc}.\n\nDefines the <code>ProductSwitchItem<\/code> target URI. Supports standard hyperlink behavior.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.f.ProductSwitchItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nSpecifies a target where the <code>targetSrc<\/code> content must be open.\n\nOptions are the standard values for window.open() supported by browsers: <code>_self<\/code>, <code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively, a frame name can be entered.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>ProductSwitchItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubTitle subTitle} : string<\/li>\n<li>{@link #getTargetSrc targetSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDetermines the title of the <code>ProductSwitchItem<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/f/ProductSwitchItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setTargetSrc":{"!description":"Sets a new value for property {@link #getTargetSrc targetSrc}.\n\nDefines the <code>ProductSwitchItem<\/code> target URI. Supports standard hyperlink behavior.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTargetSrc: sap.ui.core.URI) -> sap.f.ProductSwitchItem","parameters":{"sTargetSrc":"type: sap.ui.core.URI, description: New value for property <code>targetSrc<\/code>"}},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nSpecifies a target where the <code>targetSrc<\/code> content must be open.\n\nOptions are the standard values for window.open() supported by browsers: <code>_self<\/code>, <code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively, a frame name can be entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget: String) -> sap.f.ProductSwitchItem","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}}},"sap.f.semantic.PrintAction":{"!description":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PrintAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PrintAction<\/code>.","!module":"sap/f/semantic/PrintAction","!helpDescription":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.ICard":{"!description":"Interface that should be implemented by all card controls.","!module":"sap/f/library","!category":"static class"},"sap.f.ProductSwitch_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.ProductSwitch with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.ProductSwitch"},"sap.f.IDynamicPageStickyContent":{"!description":"Interface for controls suitable for the <code>stickySubheaderProvider<\/code> association of <code>{@link sap.f.DynamicPage}<\/code>.\n\nControls that implemenet this interface should have the following methods: <ul> <li><code>_getStickyContent<\/code> - returns the content (control) used in the subheader<\/li> <li><code>_returnStickyContent<\/code> - ensures that the content (control) returned by <code>_getStickyContent<\/code>, is placed back in its place in the provider<\/li> <li><code>_getStickySubHeaderSticked<\/code> - returns boolean value that shows where the sticky content is placed (in its provider or in the <code>DynamicPage<\/code>)<\/li> <li><code>_setStickySubHeaderSticked<\/code> - accepts a boolean argument to notify the provider where its sticky content is placed<\/li> <\/ul>","!module":"sap/f/library","!category":"static class"},"sap.f.DynamicPage":{"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"setLandmarkInfo":{"!description":"Sets the aggregated {@link #getLandmarkInfo landmarkInfo}.","!static":false,"!category":"function","!type":"fn(oLandmarkInfo: sap.f.DynamicPageAccessibleLandmarkInfo) -> sap.f.DynamicPage","parameters":{"oLandmarkInfo":"type: sap.f.DynamicPageAccessibleLandmarkInfo, description: The landmarkInfo to set"}},"getStickySubheaderProvider":{"!description":"ID of the element which is the current target of the association {@link #getStickySubheaderProvider stickySubheaderProvider}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\n<code>DynamicPage<\/code> content.\n\n<b>Note: <\/b> You can change the default paddings by adding the following CSS classes: <ul> <li><code>sapUiContentPadding<\/code><\/li> <li><code>sapUiNoContentPadding<\/code><\/li> <li><code>sapUiResponsiveContentPadding<\/code><\/li> <\/ul> For more information, see {@link topic:c71f6df62dae47ca8284310a6f5fc80a Using Container Content Padding CSS Classes}.\n\n<b>Note:<\/b> The SAP Fiori Design guidelines require that the <code>DynamicPageHeader<\/code>'s content and the <code>DynamicPage<\/code>'s content are aligned vertically. When using {@link sap.ui.layout.form.Form}, {@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} in the content area of <code>DynamicPage<\/code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFDynamicPageAlignContent<\/code> CSS class to them and set their <code>width<\/code> property to <code>auto<\/code> (if not set by default).\n\nExample:\n\n<pre>\n<code> &lt;Panel class=\u201csapFDynamicPageAlignContent\u201d width=\u201cauto\u201d&gt;&lt;/Panel&gt; <\/code>\n<\/pre>\n\nPlease keep in mind that the alignment is not possible in the following cases: <ul> <li> When the controls are placed in an {@link sap.ui.layout.Grid} or other layout controls that use <code>overflow:hidden<\/code> CSS property<\/li> <li> In case any of the following CSS classes is applied to <code>DynamicPage<\/code>: <code>sapUiContentPadding<\/code>, <code>sapUiNoContentPadding<\/code> or <code>sapUiResponsiveContentPadding<\/code><\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<b>Note: <\/b> This property is taken into account only if a non-empty <code>header<\/code> aggregation is provided.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of <code>DynamicPage<\/code>.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PageBackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of <code>DynamicPage<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.PageBackgroundDesign) -> sap.f.DynamicPage","parameters":{"sBackgroundDesign":"type: sap.m.PageBackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","destroyLandmarkInfo":{"!description":"Destroys the landmarkInfo in the aggregation {@link #getLandmarkInfo landmarkInfo}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"destroyFooter":{"!description":"Destroys the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"setHeader":{"!description":"Sets the aggregated {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.f.DynamicPageHeader) -> sap.f.DynamicPage","parameters":{"oHeader":"type: sap.f.DynamicPageHeader, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\n<code>DynamicPage<\/code> header.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"},"setHeaderExpanded":{"!description":"Sets a new value for property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.DynamicPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"!constructorDescription":"Constructor for a new <code>DynamicPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.PageBackgroundDesign (default: Standard)<\/li>\n<li>{@link #getFitContent fitContent} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitle title} : sap.f.DynamicPageTitle<\/li>\n<li>{@link #getHeader header} : sap.f.DynamicPageHeader<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.f.DynamicPageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getStickySubheaderProvider stickySubheaderProvider} : (sap.ui.core.ID | sap.f.IDynamicPageStickyContent)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getFitContent":{"!description":"Gets current value of property {@link #getFitContent fitContent}.\n\nOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets content of aggregation {@link #getTitle title}.\n\n<code>DynamicPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getShowFooter":{"!description":"Gets current value of property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFitContent":{"!description":"Sets a new value for property {@link #getFitContent fitContent}.\n\nOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFitContent: Boolean) -> sap.f.DynamicPage","parameters":{"bFitContent":"type: boolean, description: New value for property <code>fitContent<\/code>"}},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<b>Note: <\/b> This property is taken into account only if a non-empty <code>header<\/code> aggregation is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.DynamicPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"getHeaderExpanded":{"!description":"Gets current value of property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setStickySubheaderProvider":{"!description":"Sets the associated {@link #getStickySubheaderProvider stickySubheaderProvider}.","!static":false,"!category":"function","!type":"fn(oStickySubheaderProvider: sap.ui.core.ID | sap.f.IDynamicPageStickyContent) -> sap.f.DynamicPage","parameters":{"oStickySubheaderProvider":"type: sap.ui.core.ID|sap.f.IDynamicPageStickyContent, description: ID of an element which becomes the new target of this stickySubheaderProvider association; alternatively, an element instance may be given"}},"!description":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the {@link sap.f.DynamicPageHeader DynamicPageHeader}.<\/li> <li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.<\/li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.<\/li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any {@link sap.m.IBar} control.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the {@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b> <li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to <code>false<\/code>.<\/li> <li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code> on smaller screen sizes, such as mobile.<\/li> <li>Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case: When the <code>DynamicPage<\/code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.<\/li> <li>When using {@link sap.ui.layout.form.Form}, {@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} controls in the content of <code>DynamicPage<\/code>, you need to adjust their left text offset if you want to achieve vertical alignment between the <code>sap.f.DynamicPageHeader<\/code>`s content and <code>DynamicPage<\/code>`s content. For more information, see the documentation for the <code>content<\/code> aggregation.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of the content that is displayed. To adjust the <code>DynamicPage<\/code> content padding, the <code>sapUiContentPadding<\/code>, <code>sapUiNoContentPadding<\/code>, and <code>sapUiResponsiveContentPadding<\/code> CSS classes can be used.","setShowFooter":{"!description":"Sets a new value for property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.DynamicPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\n<code>DynamicPage<\/code> floating footer.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"setTitle":{"!description":"Sets the aggregated {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn(oTitle: sap.f.DynamicPageTitle) -> sap.f.DynamicPage","parameters":{"oTitle":"type: sap.f.DynamicPageTitle, description: The title to set"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.DynamicPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/f/DynamicPage","!helpDescription":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the {@link sap.f.DynamicPageHeader DynamicPageHeader}.<\/li> <li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.<\/li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.<\/li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any {@link sap.m.IBar} control.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the {@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b> <li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to <code>false<\/code>.<\/li> <li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code> on smaller screen sizes, such as mobile.<\/li> <li>Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case: When the <code>DynamicPage<\/code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.<\/li> <li>When using {@link sap.ui.layout.form.Form}, {@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} controls in the content of <code>DynamicPage<\/code>, you need to adjust their left text offset if you want to achieve vertical alignment between the <code>sap.f.DynamicPageHeader<\/code>`s content and <code>DynamicPage<\/code>`s content. For more information, see the documentation for the <code>content<\/code> aggregation.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of the content that is displayed. To adjust the <code>DynamicPage<\/code> content padding, the <code>sapUiContentPadding<\/code>, <code>sapUiNoContentPadding<\/code>, and <code>sapUiResponsiveContentPadding<\/code> CSS classes can be used.","setFooter":{"!description":"Sets the aggregated {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.m.IBar) -> sap.f.DynamicPage","parameters":{"oFooter":"type: sap.m.IBar, description: The footer to set"}},"destroyHeader":{"!description":"Destroys the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"destroyTitle":{"!description":"Destroys the title in the aggregation {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"getLandmarkInfo":{"!description":"Gets content of aggregation {@link #getLandmarkInfo landmarkInfo}.\n\nAccessible landmark settings to be applied on the containers of the <code>sap.f.DynamicPage<\/code> control.\n\nIf not set, no landmarks will be written.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageAccessibleLandmarkInfo"}},"sap.f.dnd.GridDropInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.dnd.GridDropInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DropInfo.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.dnd.GridDropInfo"},"sap.f.GridContainerItemLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.GridContainerItemLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.GridContainerItemLayoutData"},"sap.f.semantic.ExitFullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ExitFullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ExitFullScreenAction<\/code>.","!module":"sap/f/semantic/ExitFullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.EditAction":{"!description":"A semantic-specific button, eligible for the <code>editAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.EditAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.EditAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>EditAction<\/code>.","!module":"sap/f/semantic/EditAction","!helpDescription":"A semantic-specific button, eligible for the <code>editAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SemanticToggleButton":{"!description":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/SemanticToggleButton","!helpDescription":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","setPressed":{"!description":"Sets a new value for property {@link #getPressed pressed}.\n\nDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.f.semantic.SemanticToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"sap.f.semantic.SemanticButton","getPressed":{"!description":"Gets current value of property {@link #getPressed pressed}.\n\nDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.f.semantic.FlagAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FlagAction"},"sap.f.GridList":{"!description":"A list-based control with grid layout capabilities.\n\n<h3>Overview<\/h3>\n\nThe control is based on {@link sap.m.ListBase} and adds the flexibility to configure different grid layouts. The layout used is based on the CSS display grid and the control has a default configuration.\n\nWith <code>customLayout<\/code> aggregation it is possible to use: <ul> <li>Predefined simple grid layouts such as {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout}<\/li> <li>Flexible grid layouts, such as {@link sap.ui.layout.cssgrid.GridBasicLayout GridBasicLayout} or {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout} which reveal the native-browser CSS display grid APIs. For more information, see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout MDN web docs: CSS Grid Layout}<\/li> <\/ul>\n\nEvery item can override its size by specifying the number of columns and/or rows it will take in the grid. This is done using {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}.\n\nFor best visualization, items of type {@link sap.f.GridListItem sap.f.GridListItem} should be used inside the <code>items<\/code> aggregation.\n\n<h3>Usage<\/h3>\n\nFor general cases, use the default grid configuration of the <code>GridList<\/code>. For Box case (equal sized items), use <code>customLayout<\/code> aggregation with {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout} For Grids which need different configurations based on available width, use <code>customLayout<\/code> aggregation with {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout} To set a specific position to an item or define its dimensions in the grid, pass <code>layoutData<\/code> of type {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}\n\n<i>When to use<\/i> <ul> <li>If {@link sap.m.ListBase} features are required and the items must be positioned in a grid layout<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>If a list layout is required, use {@link sap.m.List} instead. <li>If only the layout is required, use {@link sap.ui.layout.cssgrid.CSSGrid} instead. <\/ul>\n\n<h3>Drag and drop:<\/h3> Drag and drop is enabled for the <code>GridList<\/code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code>{@link sap.f.dnd.GridDropInfo}<\/code>.\n\nSimilar to the <code>{@link sap.ui.core.dnd.DropInfo}<\/code>, <code>{@link sap.f.dnd.GridDropInfo}<\/code> has to be added to the <code>dragDropConfig<\/code> aggregation, by using <code>{@link sap.ui.core.Element#addDragDropConfig}<\/code>.\n\nBoth <code>{@link sap.ui.core.dnd.DropInfo}<\/code> and <code>{@link sap.f.dnd.GridDropInfo}<\/code> can be used to configure drag and drop. The difference is that the <code>{@link sap.f.dnd.GridDropInfo}<\/code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.\n\n<h3>Current Limitations<\/h3> <ul> <li>For Microsoft Internet Explorer some layouts are not supported, due to browser specifics.<\/li> <li>For Microsoft Edge 15 and older versions some layouts are not supported, due to browser specifics.<\/li> <\/ul>","extend":{"!description":"Creates a new subclass of class sap.f.GridList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setCustomLayout":{"!description":"Sets the aggregated {@link #getCustomLayout customLayout}.","!static":false,"!category":"function","!type":"fn(oCustomLayout: sap.ui.layout.cssgrid.GridLayoutBase) -> sap.f.GridList","parameters":{"oCustomLayout":"type: sap.ui.layout.cssgrid.GridLayoutBase, description: The customLayout to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.GridList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new GridList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomLayout customLayout} : sap.ui.layout.cssgrid.GridLayoutBase<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well.","!module":"sap/f/GridList","!helpDescription":"A list-based control with grid layout capabilities.\n\n<h3>Overview<\/h3>\n\nThe control is based on {@link sap.m.ListBase} and adds the flexibility to configure different grid layouts. The layout used is based on the CSS display grid and the control has a default configuration.\n\nWith <code>customLayout<\/code> aggregation it is possible to use: <ul> <li>Predefined simple grid layouts such as {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout}<\/li> <li>Flexible grid layouts, such as {@link sap.ui.layout.cssgrid.GridBasicLayout GridBasicLayout} or {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout} which reveal the native-browser CSS display grid APIs. For more information, see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout MDN web docs: CSS Grid Layout}<\/li> <\/ul>\n\nEvery item can override its size by specifying the number of columns and/or rows it will take in the grid. This is done using {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}.\n\nFor best visualization, items of type {@link sap.f.GridListItem sap.f.GridListItem} should be used inside the <code>items<\/code> aggregation.\n\n<h3>Usage<\/h3>\n\nFor general cases, use the default grid configuration of the <code>GridList<\/code>. For Box case (equal sized items), use <code>customLayout<\/code> aggregation with {@link sap.ui.layout.cssgrid.GridBoxLayout GridBoxLayout} For Grids which need different configurations based on available width, use <code>customLayout<\/code> aggregation with {@link sap.ui.layout.cssgrid.GridResponsiveLayout GridResponsiveLayout} To set a specific position to an item or define its dimensions in the grid, pass <code>layoutData<\/code> of type {@link sap.ui.layout.cssgrid.GridItemLayoutData GridItemLayoutData}\n\n<i>When to use<\/i> <ul> <li>If {@link sap.m.ListBase} features are required and the items must be positioned in a grid layout<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>If a list layout is required, use {@link sap.m.List} instead. <li>If only the layout is required, use {@link sap.ui.layout.cssgrid.CSSGrid} instead. <\/ul>\n\n<h3>Drag and drop:<\/h3> Drag and drop is enabled for the <code>GridList<\/code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code>{@link sap.f.dnd.GridDropInfo}<\/code>.\n\nSimilar to the <code>{@link sap.ui.core.dnd.DropInfo}<\/code>, <code>{@link sap.f.dnd.GridDropInfo}<\/code> has to be added to the <code>dragDropConfig<\/code> aggregation, by using <code>{@link sap.ui.core.Element#addDragDropConfig}<\/code>.\n\nBoth <code>{@link sap.ui.core.dnd.DropInfo}<\/code> and <code>{@link sap.f.dnd.GridDropInfo}<\/code> can be used to configure drag and drop. The difference is that the <code>{@link sap.f.dnd.GridDropInfo}<\/code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.\n\n<h3>Current Limitations<\/h3> <ul> <li>For Microsoft Internet Explorer some layouts are not supported, due to browser specifics.<\/li> <li>For Microsoft Edge 15 and older versions some layouts are not supported, due to browser specifics.<\/li> <\/ul>","getCustomLayout":{"!description":"Gets content of aggregation {@link #getCustomLayout customLayout}.\n\nDefines a custom grid layout","!static":false,"!category":"function","!type":"fn() -> sap.ui.layout.cssgrid.GridLayoutBase"},"!proto":"sap.m.ListBase","getGridDomRefs":{"!description":"Implements IGridConfigurable interface.","!static":false,"!category":"function","!type":"fn() -> [HTMLElement]"},"!category":"class","destroyCustomLayout":{"!description":"Destroys the customLayout in the aggregation {@link #getCustomLayout customLayout}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridList"}},"sap.f.semantic.FullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FullScreenAction<\/code>.","!module":"sap/f/semantic/FullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.NegativeAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.NegativeAction"},"sap.f.SearchManager":{"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.","!static":false,"!category":"function","!type":"fn() -> String"},"insertSuggestionItem":{"!description":"Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem, iIndex: Number) -> sap.f.SearchManager","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: The suggestionItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position"}},"!proto":"sap.ui.core.Element","setEnableSuggestions":{"!description":"Sets a new value for property {@link #getEnableSuggestions enableSuggestions}.\n\nIf true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableSuggestions: Boolean) -> sap.f.SearchManager","parameters":{"bEnableSuggestions":"type: boolean, description: New value for property <code>enableSuggestions<\/code>"}},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.f.SearchManager<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.f.SearchManager<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager<\/code> itself.\n\nFired when the value of the search field is changed by the user, for example at each key press.\n\n<b>Note:<\/b> Do not invalidate or re-render a focused search field, especially during the <code>liveChange<\/code> event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggest suggest} event of this <code>sap.f.SearchManager<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager<\/code> itself.\n\nFired when the search field is initially focused or its value is changed by the user. This event means that suggestion data should be updated, in case if suggestions are used. Use the value parameter to create new suggestions for it.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new <code>SearchManager<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEnableSuggestions enableSuggestions} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.SuggestionItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.f.SearchManager","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDetermines whether the control is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSuggest":{"!description":"Fires event {@link #event:suggest suggest} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.SearchManager","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroySuggestionItems":{"!description":"Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn() -> sap.f.SearchManager"},"!description":"Defines specific properties of the search that are applied to <code>sap.f.ShellBar<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.f.SearchManager.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggest suggest} event of this <code>sap.f.SearchManager<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfSuggestionItem":{"!description":"Checks for the provided <code>sap.m.SuggestionItem<\/code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem) -> Number","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: The suggestionItem whose index is looked for"}},"addSuggestionItem":{"!description":"Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem) -> sap.f.SearchManager","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: The suggestionItem to add; if empty, nothing is inserted"}},"unbindValue":{"!description":"Unbinds property {@link #getValue value} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.f.SearchManager"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.f.SearchManager<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.f.SearchManager<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.SearchManager<\/code> itself.\n\nFired when the user triggers a search.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.SearchManager","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.SearchManager<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.f.SearchManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.SearchManager","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the input value.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDetermines whether the control is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.f.SearchManager","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/f/SearchManager","!helpDescription":"Defines specific properties of the search that are applied to <code>sap.f.ShellBar<\/code>.","getMaxLength":{"!description":"Gets current value of property {@link #getMaxLength maxLength}.\n\nDetermines the maximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeSuggestionItem":{"!description":"Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(vSuggestionItem: Number | String | sap.m.SuggestionItem) -> sap.m.SuggestionItem","parameters":{"vSuggestionItem":"type: int|string|sap.m.SuggestionItem, description: The suggestionItem to remove or its index or id"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the input value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.SearchManager","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getEnableSuggestions":{"!description":"Gets current value of property {@link #getEnableSuggestions enableSuggestions}.\n\nIf true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSuggestionItems":{"!description":"Gets content of aggregation {@link #getSuggestionItems suggestionItems}.\n\n<code>SuggestionItems<\/code> are the items which are displayed in the suggestions list. The following properties can be used: <ul> <li><code>key<\/code> - it is not displayed and may be used as internal technical field<\/li> <li><code>text<\/code> - it is displayed as normal suggestion text<\/li> <li><code>icon<\/code><\/li> <li><code>description<\/code> - additional text that may be used to visually display search item type or category<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.m.SuggestionItem]"},"bindValue":{"!description":"Binds property {@link #getValue value} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.f.SearchManager","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setMaxLength":{"!description":"Sets a new value for property {@link #getMaxLength maxLength}.\n\nDetermines the maximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.f.SearchManager","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.SearchManager","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllSuggestionItems":{"!description":"Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.SuggestionItem]"}},"sap.f.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oOptions: Object)","prototype":"sap.f.routing.Targets"},"sap.f.ShellBar":{"attachCopilotPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:copilotPressed copilotPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the SAP CoPilot icon is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireHomeIconPressed":{"!description":"Fires event {@link #event:homeIconPressed homeIconPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireSearchButtonPressed":{"!description":"Fires event {@link #event:searchButtonPressed searchButtonPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachProductSwitcherPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:productSwitcherPressed productSwitcherPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowProductSwitcher":{"!description":"Sets a new value for property {@link #getShowProductSwitcher showProductSwitcher}.\n\nDetermines whether the product switcher button is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowProductSwitcher: Boolean) -> sap.f.ShellBar","parameters":{"bShowProductSwitcher":"type: boolean, description: New value for property <code>showProductSwitcher<\/code>"}},"getSecondTitle":{"!description":"Gets current value of property {@link #getSecondTitle secondTitle}.\n\nDefines the secondary title of the control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSearchManager":{"!description":"Gets content of aggregation {@link #getSearchManager searchManager}.\n\nConfigurable search.\n\n<b>Note:<\/b> If <code>showSearch<\/code> is set to <code>true<\/code>, two search buttons appear.","!static":false,"!category":"function","!type":"fn() -> sap.f.SearchManager"},"_applyTag":{"!description":"Sets the HTML tag according to the context of the page. Possible contexts are header, footer, and subheader.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"isContextSensitive":{"!description":"Returns if the bar is sensitive to the container context. Implementation of the IBar interface","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSearchButtonPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:searchButtonPressed searchButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDefines the main title of the control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getAdditionalContent":{"!description":"Gets content of aggregation {@link #getAdditionalContent additionalContent}.\n\nAdditional content to be displayed in the control.\n\n<b>Note:<\/b> Only controls implementing the <code>{@link sap.f.IShellBar}<\/code> interface are allowed.","!static":false,"!category":"function","!type":"fn() -> [sap.f.IShellBar]"},"destroyProfile":{"!description":"Destroys the profile in the aggregation {@link #getProfile profile}.","!static":false,"!category":"function","!type":"fn() -> sap.f.ShellBar"},"applyTagAndContextClassFor":{"!description":"Sets classes and HTML tag according to the context of the page. Possible contexts are header, footer, and subheader","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"setHomeIconTooltip":{"!description":"Sets a new value for property {@link #getHomeIconTooltip homeIconTooltip}.\n\nDefines a custom tooltip for the home icon. If not set, a default tooltip is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHomeIconTooltip: String) -> sap.f.ShellBar","parameters":{"sHomeIconTooltip":"type: string, description: New value for property <code>homeIconTooltip<\/code>"}},"getShowCopilot":{"!description":"Gets current value of property {@link #getShowCopilot showCopilot}.\n\nDetermines whether the SAP CoPilot icon is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A horizontal bar control holding multiple child controls used as application shell header.\n\n<h3>Overview<\/h3>\n\nThe <code>ShellBar<\/code> is used as the uppermost section (shell) of the app. It is fully responsive and adaptive, and corresponds to the SAP Fiori Design Guidelines.\n\n<h3>Usage<\/h3>\n\nContent specified in the <code>ShellBar<\/code> properties and aggregations is automatically positioned in dedicated places of the control.","attachAvatarPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:avatarPressed avatarPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the profile avatar is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.ShellBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachNavButtonPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navButtonPressed navButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowNotifications":{"!description":"Sets a new value for property {@link #getShowNotifications showNotifications}.\n\nDetermines whether the notifications button is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNotifications: Boolean) -> sap.f.ShellBar","parameters":{"bShowNotifications":"type: boolean, description: New value for property <code>showNotifications<\/code>"}},"attachMenuButtonPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:menuButtonPressed menuButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the alternative menu button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getProfile":{"!description":"Gets content of aggregation {@link #getProfile profile}.\n\nThe profile avatar.","!static":false,"!category":"function","!type":"fn() -> sap.f.Avatar"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDefines the main title of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.f.ShellBar","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"_applyContextClassFor":{"!description":"Sets classes according to the context of the page. Possible contexts are header, footer, and subheader.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"destroyMenu":{"!description":"Destroys the menu in the aggregation {@link #getMenu menu}.","!static":false,"!category":"function","!type":"fn() -> sap.f.ShellBar"},"setProfile":{"!description":"Sets the aggregated {@link #getProfile profile}.","!static":false,"!category":"function","!type":"fn(oProfile: sap.f.Avatar) -> sap.f.ShellBar","parameters":{"oProfile":"type: sap.f.Avatar, description: The profile to set"}},"setMenu":{"!description":"Sets the aggregated {@link #getMenu menu}.","!static":false,"!category":"function","!type":"fn(oMenu: sap.m.Menu) -> sap.f.ShellBar","parameters":{"oMenu":"type: sap.m.Menu, description: The menu to set"}},"fireCopilotPressed":{"!description":"Fires event {@link #event:copilotPressed copilotPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.f.ShellBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setShowSearch":{"!description":"Sets a new value for property {@link #getShowSearch showSearch}.\n\nDetermines whether the search button is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSearch: Boolean) -> sap.f.ShellBar","parameters":{"bShowSearch":"type: boolean, description: New value for property <code>showSearch<\/code>"}},"fireAvatarPressed":{"!description":"Fires event {@link #event:avatarPressed avatarPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getNotificationsNumber":{"!description":"Gets current value of property {@link #getNotificationsNumber notificationsNumber}.\n\nDefines the displayed number of upcoming notifications.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHTMLTag":{"!description":"Sets the HTML tag of the root DOM Reference.","!static":false,"!category":"function","!type":"fn(sTag: String) -> sap.m.IBar","parameters":{"sTag":"type: string, description: undefined"}},"!module":"sap/f/ShellBar","getHomeIcon":{"!description":"Gets current value of property {@link #getHomeIcon homeIcon}.\n\nDefines the URI to the home icon, such as company or product logo.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!helpDescription":"A horizontal bar control holding multiple child controls used as application shell header.\n\n<h3>Overview<\/h3>\n\nThe <code>ShellBar<\/code> is used as the uppermost section (shell) of the app. It is fully responsive and adaptive, and corresponds to the SAP Fiori Design Guidelines.\n\n<h3>Usage<\/h3>\n\nContent specified in the <code>ShellBar<\/code> properties and aggregations is automatically positioned in dedicated places of the control.","fireNavButtonPressed":{"!description":"Fires event {@link #event:navButtonPressed navButtonPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroySearchManager":{"!description":"Destroys the searchManager in the aggregation {@link #getSearchManager searchManager}.","!static":false,"!category":"function","!type":"fn() -> sap.f.ShellBar"},"indexOfAdditionalContent":{"!description":"Checks for the provided <code>sap.f.IShellBar<\/code> in the aggregation {@link #getAdditionalContent additionalContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAdditionalContent: sap.f.IShellBar) -> Number","parameters":{"oAdditionalContent":"type: sap.f.IShellBar, description: The additionalContent whose index is looked for"}},"attachNavButtonPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navButtonPressed navButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the navigation/back button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireNotificationsPressed":{"!description":"Fires event {@link #event:notificationsPressed notificationsPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowNotifications":{"!description":"Gets current value of property {@link #getShowNotifications showNotifications}.\n\nDetermines whether the notifications button is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowNavButton":{"!description":"Gets current value of property {@link #getShowNavButton showNavButton}.\n\nDetermines whether a back navigation button is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachHomeIconPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:homeIconPressed homeIconPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the <code>homeIcon<\/code> is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addAdditionalContent":{"!description":"Adds some additionalContent to the aggregation {@link #getAdditionalContent additionalContent}.","!static":false,"!category":"function","!type":"fn(oAdditionalContent: sap.f.IShellBar) -> sap.f.ShellBar","parameters":{"oAdditionalContent":"type: sap.f.IShellBar, description: The additionalContent to add; if empty, nothing is inserted"}},"!proto":"sap.ui.core.Control","setShowMenuButton":{"!description":"Sets a new value for property {@link #getShowMenuButton showMenuButton}.\n\nDetermines whether a hamburger menu button is displayed (as an alternative if the <code>menu<\/code> aggregation is not used).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMenuButton: Boolean) -> sap.f.ShellBar","parameters":{"bShowMenuButton":"type: boolean, description: New value for property <code>showMenuButton<\/code>"}},"!category":"class","fireMenuButtonPressed":{"!description":"Fires event {@link #event:menuButtonPressed menuButtonPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowProductSwitcher":{"!description":"Gets current value of property {@link #getShowProductSwitcher showProductSwitcher}.\n\nDetermines whether the product switcher button is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAdditionalContent":{"!description":"Removes all the controls from the aggregation {@link #getAdditionalContent additionalContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.f.IShellBar]"},"!constructorDescription":"Constructor for a new <code>ShellBar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSecondTitle secondTitle} : string (default: )<\/li>\n<li>{@link #getHomeIcon homeIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getHomeIconTooltip homeIconTooltip} : string (default: )<\/li>\n<li>{@link #getShowMenuButton showMenuButton} : boolean (default: false)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowCopilot showCopilot} : boolean (default: false)<\/li>\n<li>{@link #getShowSearch showSearch} : boolean (default: false)<\/li>\n<li>{@link #getShowNotifications showNotifications} : boolean (default: false)<\/li>\n<li>{@link #getShowProductSwitcher showProductSwitcher} : boolean (default: false)<\/li>\n<li>{@link #getNotificationsNumber notificationsNumber} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.m.Menu<\/li>\n<li>{@link #getSearchManager searchManager} : sap.f.SearchManager<\/li>\n<li>{@link #getProfile profile} : sap.f.Avatar<\/li>\n<li>{@link #getAdditionalContent additionalContent} : sap.f.IShellBar[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:homeIconPressed homeIconPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:menuButtonPressed menuButtonPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navButtonPressed navButtonPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:copilotPressed copilotPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:searchButtonPressed searchButtonPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:notificationsPressed notificationsPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:productSwitcherPressed productSwitcherPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:avatarPressed avatarPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getHTMLTag":{"!description":"Gets the HTML tag of the root DOM Reference.","!static":false,"!category":"function","!type":"fn() -> String"},"setSearchManager":{"!description":"Sets the aggregated {@link #getSearchManager searchManager}.","!static":false,"!category":"function","!type":"fn(oSearchManager: sap.f.SearchManager) -> sap.f.ShellBar","parameters":{"oSearchManager":"type: sap.f.SearchManager, description: The searchManager to set"}},"getMenu":{"!description":"Gets content of aggregation {@link #getMenu menu}.\n\nThe menu attached to the main title.","!static":false,"!category":"function","!type":"fn() -> sap.m.Menu"},"detachMenuButtonPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:menuButtonPressed menuButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowCopilot":{"!description":"Sets a new value for property {@link #getShowCopilot showCopilot}.\n\nDetermines whether the SAP CoPilot icon is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCopilot: Boolean) -> sap.f.ShellBar","parameters":{"bShowCopilot":"type: boolean, description: New value for property <code>showCopilot<\/code>"}},"attachProductSwitcherPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:productSwitcherPressed productSwitcherPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the product switcher button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachHomeIconPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:homeIconPressed homeIconPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowMenuButton":{"!description":"Gets current value of property {@link #getShowMenuButton showMenuButton}.\n\nDetermines whether a hamburger menu button is displayed (as an alternative if the <code>menu<\/code> aggregation is not used).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertAdditionalContent":{"!description":"Inserts a additionalContent into the aggregation {@link #getAdditionalContent additionalContent}.","!static":false,"!category":"function","!type":"fn(oAdditionalContent: sap.f.IShellBar, iIndex: Number) -> sap.f.ShellBar","parameters":{"oAdditionalContent":"type: sap.f.IShellBar, description: The additionalContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the additionalContent should be inserted at; for a negative value of <code>iIndex<\/code>, the additionalContent is inserted at position 0; for a value greater than the current size of the aggregation, the additionalContent is inserted at the last position"}},"setHomeIcon":{"!description":"Sets a new value for property {@link #getHomeIcon homeIcon}.\n\nDefines the URI to the home icon, such as company or product logo.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHomeIcon: sap.ui.core.URI) -> sap.f.ShellBar","parameters":{"sHomeIcon":"type: sap.ui.core.URI, description: New value for property <code>homeIcon<\/code>"}},"getShowSearch":{"!description":"Gets current value of property {@link #getShowSearch showSearch}.\n\nDetermines whether the search button is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowNavButton":{"!description":"Sets a new value for property {@link #getShowNavButton showNavButton}.\n\nDetermines whether a back navigation button is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNavButton: Boolean) -> sap.f.ShellBar","parameters":{"bShowNavButton":"type: boolean, description: New value for property <code>showNavButton<\/code>"}},"getHomeIconTooltip":{"!description":"Gets current value of property {@link #getHomeIconTooltip homeIconTooltip}.\n\nDefines a custom tooltip for the home icon. If not set, a default tooltip is used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachCopilotPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:copilotPressed copilotPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSecondTitle":{"!description":"Sets a new value for property {@link #getSecondTitle secondTitle}.\n\nDefines the secondary title of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondTitle: String) -> sap.f.ShellBar","parameters":{"sSecondTitle":"type: string, description: New value for property <code>secondTitle<\/code>"}},"attachSearchButtonPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:searchButtonPressed searchButtonPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the search button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAvatarPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:avatarPressed avatarPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireProductSwitcherPressed":{"!description":"Fires event {@link #event:productSwitcherPressed productSwitcherPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ShellBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachNotificationsPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:notificationsPressed notificationsPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyAdditionalContent":{"!description":"Destroys all the additionalContent in the aggregation {@link #getAdditionalContent additionalContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.ShellBar"},"attachNotificationsPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:notificationsPressed notificationsPressed} event of this <code>sap.f.ShellBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ShellBar<\/code> itself.\n\nFired when the notifications button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ShellBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ShellBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAdditionalContent":{"!description":"Removes a additionalContent from the aggregation {@link #getAdditionalContent additionalContent}.","!static":false,"!category":"function","!type":"fn(vAdditionalContent: Number | String | sap.f.IShellBar) -> sap.f.IShellBar","parameters":{"vAdditionalContent":"type: int|string|sap.f.IShellBar, description: The additionalContent to remove or its index or id"}}},"sap.f.cards.Header":{"setIconDisplayShape":{"!description":"Sets a new value for property {@link #getIconDisplayShape iconDisplayShape}.\n\nDefines the shape of the icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn(sIconDisplayShape: sap.m.AvatarShape) -> sap.f.cards.Header","parameters":{"sIconDisplayShape":"type: sap.m.AvatarShape, description: New value for property <code>iconDisplayShape<\/code>"}},"setIconSrc":{"!description":"Sets a new value for property {@link #getIconSrc iconSrc}.\n\nDefines the icon source.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIconSrc: sap.ui.core.URI) -> sap.f.cards.Header","parameters":{"sIconSrc":"type: sap.ui.core.URI, description: New value for property <code>iconSrc<\/code>"}},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nDefines the subtitle.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isReady":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getIconSrc":{"!description":"Gets current value of property {@link #getIconSrc iconSrc}.\n\nDefines the icon source.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!constructorDescription":"Constructor for a new <code>Header<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSubtitle subtitle} : string (default: )<\/li>\n<li>{@link #getStatusText statusText} : string (default: )<\/li>\n<li>{@link #getIconDisplayShape iconDisplayShape} : sap.m.AvatarShape (default: Circle)<\/li>\n<li>{@link #getIconSrc iconSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconInitials iconInitials} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getToolbar toolbar} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDefines the title.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getIconInitials":{"!description":"Gets current value of property {@link #getIconInitials iconInitials}.\n\nDefines the initials of the icon.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nDefines the subtitle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sSubtitle: String) -> sap.f.cards.Header","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}},"getToolbar":{"!description":"Gets content of aggregation {@link #getToolbar toolbar}.\n\nDefines the toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.cards.Header<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.cards.Header<\/code> itself.\n\nFires when the user presses the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.cards.Header","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.cards.Header<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Displays general information in the header of the {@link sap.f.Card}.\n\nYou can configure the title, subtitle, status text and icon, using the provided properties.\n\n<b>Notes:<\/b> <ul> <li>You should always set a title.<\/li> <li>To show a KPI or any numeric information, use {@link sap.f.cards.NumericHeader} instead.<\/li> <ul>","getMetadata":{"!description":"Returns a metadata object for class sap.f.cards.Header.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setIconInitials":{"!description":"Sets a new value for property {@link #getIconInitials iconInitials}.\n\nDefines the initials of the icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIconInitials: String) -> sap.f.cards.Header","parameters":{"sIconInitials":"type: string, description: New value for property <code>iconInitials<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDefines the title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.f.cards.Header","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setStatusText":{"!description":"Sets a new value for property {@link #getStatusText statusText}.\n\nDefines the status text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sStatusText: String) -> sap.f.cards.Header","parameters":{"sStatusText":"type: string, description: New value for property <code>statusText<\/code>"}},"getIconDisplayShape":{"!description":"Gets current value of property {@link #getIconDisplayShape iconDisplayShape}.\n\nDefines the shape of the icon.\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.AvatarShape"},"extend":{"!description":"Creates a new subclass of class sap.f.cards.Header with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.cards.Header<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.cards.Header","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.cards.Header","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setToolbar":{"!description":"Sets the aggregated {@link #getToolbar toolbar}.","!static":false,"!category":"function","!type":"fn(oToolbar: sap.ui.core.Control) -> sap.f.cards.Header","parameters":{"oToolbar":"type: sap.ui.core.Control, description: The toolbar to set"}},"!module":"sap/f/cards/Header","destroyToolbar":{"!description":"Destroys the toolbar in the aggregation {@link #getToolbar toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.Header"},"!helpDescription":"Displays general information in the header of the {@link sap.f.Card}.\n\nYou can configure the title, subtitle, status text and icon, using the provided properties.\n\n<b>Notes:<\/b> <ul> <li>You should always set a title.<\/li> <li>To show a KPI or any numeric information, use {@link sap.f.cards.NumericHeader} instead.<\/li> <ul>","getStatusText":{"!description":"Gets current value of property {@link #getStatusText statusText}.\n\nDefines the status text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.f.AvatarGroupType":{"!description":"Group modes for the {@link sap.f.AvatarGroup} control.","Group":{"!description":"The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.","!category":"enum","!type":"String"},"!module":"sap/f/library","Individual":{"!description":"The avatars are displayed side-by-side and each avatar has its own click/tap area.","!category":"enum","!type":"String"},"!category":"static class"},"sap.f.GridListItem":{"!description":"The <code>GridListItem<\/code> with a content aggregation can be used to display all kind of information. It is used in {@link sap.f.GridList sap.f.GridList}. <b>Note:<\/b> Even though the content aggregation can be used for any control, complex responsive layout controls, such as <code>Table, Form<\/code>, etc, should not be aggregated as content.","getMetadata":{"!description":"Returns a metadata object for class sap.f.GridListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"bindContent":{"!description":"Binds aggregation {@link #getContent content} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.f.GridListItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content of this list item","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.m.ListItemBase","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.GridListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"unbindContent":{"!description":"Unbinds aggregation {@link #getContent content} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridListItem"},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.f.GridListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new GridListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/f/GridListItem","!helpDescription":"The <code>GridListItem<\/code> with a content aggregation can be used to display all kind of information. It is used in {@link sap.f.GridList sap.f.GridList}. <b>Note:<\/b> Even though the content aggregation can be used for any control, complex responsive layout controls, such as <code>Table, Form<\/code>, etc, should not be aggregated as content.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.GridListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridListItem"}},"sap.f.semantic.AddAction":{"!description":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.AddAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>AddAction<\/code>.","!module":"sap/f/semantic/AddAction","!helpDescription":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPageTitle":{"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"removeAllSnappedContent":{"!description":"Removes all the controls from the aggregation {@link #getSnappedContent snappedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyExpandedContent":{"!description":"Destroys all the expandedContent in the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"setPrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Sets a new value for property {@link #getPrimaryArea primaryArea}.\n\nDetermines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sPrimaryArea: sap.f.DynamicPageTitleArea) -> sap.f.DynamicPageTitle","parameters":{"sPrimaryArea":"type: sap.f.DynamicPageTitleArea, description: New value for property <code>primaryArea<\/code>"}},"addSnappedContent":{"!description":"Adds some snappedContent to the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent to add; if empty, nothing is inserted"}},"removeNavigationAction":{"!description":"Removes a navigationAction from the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(vNavigationAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vNavigationAction":"type: int|string|sap.m.Button, description: The navigationAction to remove or its index or id"}},"destroyHeading":{"!description":"Destroys the heading in the aggregation {@link #getHeading heading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllNavigationActions":{"!description":"Removes all the controls from the aggregation {@link #getNavigationActions navigationActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"!description":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage} is set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the {@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>.\n\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the content that is displayed.","destroyBreadcrumbs":{"!description":"Destroys the breadcrumbs in the aggregation {@link #getBreadcrumbs breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageTitle.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setBreadcrumbs":{"!description":"Sets the aggregated {@link #getBreadcrumbs breadcrumbs}.","!static":false,"!category":"function","!type":"fn(oBreadcrumbs: sap.m.IBreadcrumbs) -> sap.f.DynamicPageTitle","parameters":{"oBreadcrumbs":"type: sap.m.IBreadcrumbs, description: The breadcrumbs to set"}},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChange stateChange} event of this <code>sap.f.DynamicPageTitle<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.DynamicPageTitle","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSnappedTitleOnMobile":{"!description":"Gets content of aggregation {@link #getSnappedTitleOnMobile snappedTitleOnMobile}.\n\nThe only content that is displayed in the <code>DynamicPageTitle<\/code> when it is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in collapsed (snapped) state.\n\nUsing this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.\n\n<b>Note:<\/b> The content set in this aggregation overrides all the other <code>DynamicPageTitle<\/code> aggregations and is only visible on phone mobile devices in collapsed (snapped) state of the <code>DynamicPageHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Title"},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getSnappedHeading":{"!description":"Gets content of aggregation {@link #getSnappedHeading snappedHeading}.\n\nThe <code>snappedHeading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.\n\n<b>Notes:<\/b> <ul> <li>In order for <code>snappedHeading<\/code> to be taken into account, <code>heading<\/code> has to be empty. Combine <code>snappedHeading<\/code> with <code>expandedHeading<\/code> to switch content when the header switches state.<\/li> <li>If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChange stateChange} event of this <code>sap.f.DynamicPageTitle<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.DynamicPageTitle<\/code> itself.\n\nFired when the title state (expanded/collapsed) is toggled by user interaction. For example, scrolling, title clicking/tapping, using expand/collapse button.\n\nAlso fired when the developer toggles the title state by programmatically changing the scroll position of the scrollbar of <code>DynamicPage<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.DynamicPageTitle","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.DynamicPageTitle<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyNavigationActions":{"!description":"Destroys all the navigationActions in the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"setExpandedHeading":{"!description":"Sets the aggregated {@link #getExpandedHeading expandedHeading}.","!static":false,"!category":"function","!type":"fn(oExpandedHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oExpandedHeading":"type: sap.ui.core.Control, description: The expandedHeading to set"}},"getNavigationActions":{"!description":"Gets content of aggregation {@link #getNavigationActions navigationActions}.\n\nThe <code>DynamicPageTitle<\/code> navigation actions.\n\n<b>Notes:<\/b> <ul> <li>The <code>navigationActions<\/code> position depends on the control size. If the control size is 1280px or bigger, they are rendered right next to the <code>actions<\/code>. Otherwise, they are rendered in the top-right area, above the <code>actions<\/code>. If a large number of elements(buttons) are used, there could be visual degradations as the space for the <code>navigationActions<\/code> is limited.<\/li> <li>If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"addExpandedContent":{"!description":"Adds some expandedContent to the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"removeSnappedContent":{"!description":"Removes a snappedContent from the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(vSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vSnappedContent":"type: int|string|sap.ui.core.Control, description: The snappedContent to remove or its index or id"}},"setSnappedHeading":{"!description":"Sets the aggregated {@link #getSnappedHeading snappedHeading}.","!static":false,"!category":"function","!type":"fn(oSnappedHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oSnappedHeading":"type: sap.ui.core.Control, description: The snappedHeading to set"}},"getAreaShrinkRatio":{"!description":"Gets current value of property {@link #getAreaShrinkRatio areaShrinkRatio}.\n\nAssigns shrinking ratio to the <code>DynamicPageTitle<\/code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>primaryArea<\/code> property has no effect.\n\nDefault value is <code>1:1.6:1.6<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleShrinkRatio"},"getExpandedContent":{"!description":"Gets content of aggregation {@link #getExpandedContent expandedContent}.\n\nThe content that is displayed in the <code>DynamicPageTitle<\/code> in expanded state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/f/DynamicPageTitle","insertExpandedContent":{"!description":"Inserts a expandedContent into the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the expandedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the expandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the expandedContent is inserted at the last position"}},"!helpDescription":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage} is set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the {@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>.\n\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the content that is displayed.","addNavigationAction":{"!description":"Adds some navigationAction to the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button) -> sap.f.DynamicPageTitle","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction to add; if empty, nothing is inserted"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroySnappedContent":{"!description":"Destroys all the snappedContent in the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getSnappedContent":{"!description":"Gets content of aggregation {@link #getSnappedContent snappedContent}.\n\nThe content that is displayed in the <code>DynamicPageTitle<\/code> in collapsed (snapped) state.\n\n<b>Note:<\/b> If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireStateChange":{"!description":"Fires event {@link #event:stateChange stateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.DynamicPageTitle","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getExpandedHeading":{"!description":"Gets content of aggregation {@link #getExpandedHeading expandedHeading}.\n\nThe <code>expandedHeading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.\n\n<b>Note:<\/b> In order for <code>expandedHeading<\/code> to be taken into account, <code>heading<\/code> has to be empty. Combine <code>expandedHeading<\/code> with <code>snappedHeading<\/code> to switch content when the header switches state.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content is positioned in the <code>DynamicPageTitle<\/code> middle area and displayed in both expanded and collapsed (snapped) states.\n\n<b>Note:<\/b> If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of the <code>DynamicPageTitle<\/code>.\n\n<b>Note:<\/b> The default value of <code>backgroundDesign<\/code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground<\/code>, which depends on the specific theme.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of the <code>DynamicPageTitle<\/code>.\n\n<b>Note:<\/b> The default value of <code>backgroundDesign<\/code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground<\/code>, which depends on the specific theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.f.DynamicPageTitle","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nThe <code>DynamicPageTitle<\/code> actions. <br><b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\n<b>Note:<\/b> If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"indexOfSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getSnappedContent snappedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent whose index is looked for"}},"!constructorDescription":"Constructor for a new <code>DynamicPageTitle<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPrimaryArea primaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<li>{@link #getAreaShrinkRatio areaShrinkRatio} : sap.f.DynamicPageTitleShrinkRatio (default: 1:1.6:1.6)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeading heading} : sap.ui.core.Control<\/li>\n<li>{@link #getSnappedHeading snappedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getExpandedHeading expandedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getNavigationActions navigationActions} : sap.m.Button[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSnappedContent snappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getExpandedContent expandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSnappedTitleOnMobile snappedTitleOnMobile} : sap.m.Title<\/li>\n<li>{@link #getBreadcrumbs breadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertSnappedContent":{"!description":"Inserts a snappedContent into the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the snappedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the snappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the snappedContent is inserted at the last position","oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent to insert; if empty, nothing is inserted"}},"setAreaShrinkRatio":{"!description":"Sets the value of the <code>areaShrinkRatio<\/code> property.","!static":false,"!category":"function","!type":"fn(sAreaShrinkRatio: sap.f.DynamicPageTitleShrinkRatio) -> sap.f.DynamicPageTitle","parameters":{"sAreaShrinkRatio":"type: sap.f.DynamicPageTitleShrinkRatio, description: new value of the <code>areaShrinkRatio<\/code>"}},"insertNavigationAction":{"!description":"Inserts a navigationAction into the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the navigationAction should be inserted at; for a negative value of <code>iIndex<\/code>, the navigationAction is inserted at position 0; for a value greater than the current size of the aggregation, the navigationAction is inserted at the last position"}},"getBreadcrumbs":{"!description":"Gets content of aggregation {@link #getBreadcrumbs breadcrumbs}.\n\nThe breadcrumbs displayed in the <code>DynamicPageTitle<\/code> top-left area.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBreadcrumbs"},"setSnappedTitleOnMobile":{"!description":"Sets the aggregated {@link #getSnappedTitleOnMobile snappedTitleOnMobile}.","!static":false,"!category":"function","!type":"fn(oSnappedTitleOnMobile: sap.m.Title) -> sap.f.DynamicPageTitle","parameters":{"oSnappedTitleOnMobile":"type: sap.m.Title, description: The snappedTitleOnMobile to set"}},"destroySnappedTitleOnMobile":{"!description":"Destroys the snappedTitleOnMobile in the aggregation {@link #getSnappedTitleOnMobile snappedTitleOnMobile}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setHeading":{"!description":"Sets the aggregated {@link #getHeading heading}.","!static":false,"!category":"function","!type":"fn(oHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oHeading":"type: sap.ui.core.Control, description: The heading to set"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllExpandedContent":{"!description":"Removes all the controls from the aggregation {@link #getExpandedContent expandedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"getPrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Gets current value of property {@link #getPrimaryArea primaryArea}.\n\nDetermines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleArea"},"removeExpandedContent":{"!description":"Removes a expandedContent from the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(vExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vExpandedContent":"type: int|string|sap.ui.core.Control, description: The expandedContent to remove or its index or id"}},"indexOfExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getExpandedContent expandedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent whose index is looked for"}},"destroySnappedHeading":{"!description":"Destroys the snappedHeading in the aggregation {@link #getSnappedHeading snappedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfNavigationAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getNavigationActions navigationActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button) -> Number","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction whose index is looked for"}},"getHeading":{"!description":"Gets content of aggregation {@link #getHeading heading}.\n\nThe <code>heading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed in both expanded and collapsed (snapped) states of the header. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in both expanded and collapsed states of the header.\n\n<b>Notes:<\/b> <ul> <li><code>heading<\/code> is mutually exclusive with <code>snappedHeading<\/code> and <code>expandedHeading<\/code>. If <code>heading<\/code> is provided, both <code>snappedHeading<\/code> and <code>expandedHeading<\/code> are ignored. <code>heading<\/code> is useful when the content of <code>snappedHeading<\/code> and <code>expandedHeading<\/code> needs to be the same as it replaces them both.<\/li> <li>If the <code>snappedTitleOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>DynamicPageHeader<\/code> is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroyExpandedHeading":{"!description":"Destroys the expandedHeading in the aggregation {@link #getExpandedHeading expandedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"}},"sap.f.semantic.CopyAction":{"!description":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CopyAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CopyAction<\/code>.","!module":"sap/f/semantic/CopyAction","!helpDescription":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.GridContainerItemLayoutData":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setColumns":{"!description":"Sets a new value for property {@link #getColumns columns}.\n\nSpecifies the number of columns, which the item should take\n\n<b>Note:<\/b> Make sure that the item does not have more columns than the total columns in the grid. Use {@link sap.f.GridContainer#attachLayoutChange} or a resize listener to handle when columns count is changed for the grid. If item has more columns at some point, they will be automatically reduced to the total grid columns. This is done to prevent broken layout (grid blowout) that affects all items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.f.GridContainerItemLayoutData","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.GridContainerItemLayoutData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMinRows":{"!description":"Gets current value of property {@link #getMinRows minRows}.\n\nSpecifies the minimum number of rows, which the item should take.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.LayoutData","!category":"class","getRows":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Number"},"setMinRows":{"!description":"Sets a new value for property {@link #getMinRows minRows}.\n\nSpecifies the minimum number of rows, which the item should take.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMinRows: Number) -> sap.f.GridContainerItemLayoutData","parameters":{"iMinRows":"type: int, description: New value for property <code>minRows<\/code>"}},"getColumns":{"!description":"Gets current value of property {@link #getColumns columns}.\n\nSpecifies the number of columns, which the item should take\n\n<b>Note:<\/b> Make sure that the item does not have more columns than the total columns in the grid. Use {@link sap.f.GridContainer#attachLayoutChange} or a resize listener to handle when columns count is changed for the grid. If item has more columns at some point, they will be automatically reduced to the total grid columns. This is done to prevent broken layout (grid blowout) that affects all items.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.f.GridContainerItemLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>sap.f.GridContainerItemLayoutData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getMinRows minRows} : int<\/li>\n<li>{@link #getRows rows} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/f/GridContainerItemLayoutData","setRows":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(iRows: Number) -> sap.f.GridContainerItemLayoutData","parameters":{"iRows":"type: int, description: New value for property <code>rows<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"sap.f.GridList_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.GridList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.GridList"},"sap.f.DynamicPageAccessibleLandmarkInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageAccessibleLandmarkInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageAccessibleLandmarkInfo"},"sap.f.DynamicPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageHeader"},"sap.f.semantic.FavoriteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FavoriteAction"},"sap.f.routing.TargetHandler":{"!description":"Used for closing dialogs and showing transitions in <code>NavContainers<\/code> when targets are displayed.\n\n<b>Note:<\/b> You should not create an own instance of this class. It is created when using <code>{@link sap.f.routing.Router}<\/code> or <code>{@link sap.f.routing.Targets}<\/code>. You may use the <code>{@link #setCloseDialogs}<\/code> function to specify if dialogs should be closed on displaying other views.","extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setCloseDialogs":{"!description":"Sets if a navigation should close dialogs.","!static":false,"!category":"function","!type":"fn(bCloseDialogs: Boolean) -> sap.f.routing.TargetHandler","parameters":{"bCloseDialogs":"type: boolean, description: Close dialogs if <code>true<\/code>"}},"getCloseDialogs":{"!description":"Gets if a navigation should close dialogs.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.TargetHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TargetHandler<\/code>.","!module":"sap/f/routing/TargetHandler","!helpDescription":"Used for closing dialogs and showing transitions in <code>NavContainers<\/code> when targets are displayed.\n\n<b>Note:<\/b> You should not create an own instance of this class. It is created when using <code>{@link sap.f.routing.Router}<\/code> or <code>{@link sap.f.routing.Targets}<\/code>. You may use the <code>{@link #setCloseDialogs}<\/code> function to specify if dialogs should be closed on displaying other views.","!proto":"sap.ui.base.Object","!category":"class"},"sap.f.Card_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.Card with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.Card"},"sap.f.cards.NumericHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.cards.NumericHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.cards.NumericHeader"},"sap.f.semantic.CloseAction":{"!description":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CloseAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CloseAction<\/code>.","!module":"sap/f/semantic/CloseAction","!helpDescription":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.DeleteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DeleteAction"},"sap.f.dnd":{"targetAggregation":{"!description":"The aggregation name in the drop target control which is the target of this drag-and-drop action. If undefined, the entire control is the target. This can be handy if the target control does not have any aggregations or if the drop position within the target does not matter.","!category":"enum","!type":"String"},"IGridDroppable":"sap.f.dnd.IGridDroppable","dropEffect":{"!description":"Defines the visual drop effect.\n\nIn Internet Explorer, default visual drop effect is <code>Copy<\/code> and this property has no effect.","!category":"enum","!type":"sap.ui.core.dnd.DropEffect"},"groupName":{"!description":"Defines the name of the group to which this object belongs. If <code>groupName<\/code> is specified, then this object will only interacts with other drag-and-drop objects within the same group.","!category":"enum","!type":"String"},"dropIndicatorSize":{"!description":"A function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop.\n\nUse when custom size needs to be defined. For example when an item is dragged from outside a grid and is dropped over the grid.\n\nIf not specified or if the function returns <code>null<\/code>, the indicator size will be calculated automatically.\n\nThis callback will be called when the indicator is displayed, that happens during the drag over movement.\n\nThe callback receives <code>draggedControl<\/code> as parameter and must return an object of type <code>{rows: <int>, columns: <int>}<\/code> or <code>null<\/code>.","!category":"enum","!type":"fn()"},"GridDropInfo":"sap.f.dnd.GridDropInfo_obj","dropPosition":{"!description":"Defines the position for the drop action, visualized by a rectangle.","!category":"enum","!type":"sap.ui.core.dnd.DropPosition"},"!category":"namespace","dropLayout":{"!description":"Defines the layout of the droppable controls if <code>dropPosition<\/code> is set to <code>Between<\/code> or <code>OnOrBetween<\/code>.","!category":"enum","!type":"sap.ui.core.dnd.DropLayout"},"enabled":{"!description":"Indicates whether this configuration is active or not.","!category":"enum","!type":"Boolean"}},"sap.f.DynamicPageTitleArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Consumers of the {@link sap.f.DynamicPageTitle} control should now use the <code>areaShrinkRatio<\/code> property instead of the <code>primaryArea<\/code> property.<br>Defines the areas within the <code>sap.f.DynamicPageTitle<\/code> control.","!module":"sap/f/library","Begin":{"!description":"The area includes the <code>heading<\/code>, <code>expandedContent<\/code> and <code>snappedContent<\/code> aggregations, positioned in the beginning area of the {@link sap.f.DynamicPageTitle}.","!category":"enum","!type":"String"},"!category":"static class","Middle":{"!description":"The area includes the <code>content<\/code> aggregation, positioned in the middle part of the {@link sap.f.DynamicPageTitle}.","!category":"enum","!type":"String"}},"sap.f.GridContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.GridContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.GridContainer"},"sap.f.FlexibleColumnLayoutSemanticHelper_obj":{"!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings: Object)","prototype":"sap.f.FlexibleColumnLayoutSemanticHelper"},"sap.f.ProductSwitchItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.ProductSwitchItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.ProductSwitchItem"},"sap.f.semantic.CloseAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CloseAction"},"sap.f.AvatarType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.AvatarType} instead.<br>Types of {@link sap.f.Avatar} based on the displayed content.","!module":"sap/f/library","!category":"static class"},"sap.f.cards.IHeader":{"!description":"Marker interface for controls suitable as a header in controls that implement the {@link sap.f.ICard} interface.","!module":"sap/f/library","!category":"static class"},"sap.f.DynamicPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPage"},"sap.f.semantic.AddAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.AddAction"},"sap.f.semantic.SemanticPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticPage"},"sap.f.FlexibleColumnLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.FlexibleColumnLayout"},"sap.f.routing":{"TargetHandler":"sap.f.routing.TargetHandler_obj","Router":"sap.f.routing.Router_obj","Targets":"sap.f.routing.Targets_obj","!category":"namespace"},"sap.f.DynamicPageHeader":{"!description":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li> <li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li> <li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the content that is displayed.","setPinnable":{"!description":"Sets a new value for property {@link #getPinnable pinnable}.\n\nDetermines whether the header is pinnable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bPinnable: Boolean) -> sap.f.DynamicPageHeader","parameters":{"bPinnable":"type: boolean, description: New value for property <code>pinnable<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content of the header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> The default value of <code>backgroundDesign<\/code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground<\/code>, which depends on the specific theme.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nDetermines the background color of the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> The default value of <code>backgroundDesign<\/code> property is null. If the property is not set, the color of the background is <code>@sapUiObjectHeaderBackground<\/code>, which depends on the specific theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.f.DynamicPageHeader","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DynamicPageHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPinnable pinnable} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/f/DynamicPageHeader","!helpDescription":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li> <li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li> <li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the content that is displayed.","getPinnable":{"!description":"Gets current value of property {@link #getPinnable pinnable}.\n\nDetermines whether the header is pinnable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"}},"sap.f.semantic.ShareInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ShareInJamAction"},"sap.f.semantic.MainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MainAction"},"sap.f.AvatarGroup":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.f.AvatarGroupItem) -> sap.f.AvatarGroupItem","parameters":{"vItem":"type: int|string|sap.f.AvatarGroupItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.AvatarGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarGroup"},"!category":"class","getGroupType":{"!description":"Gets current value of property {@link #getGroupType groupType}.\n\nDefines the mode of the <code>AvatarGroup<\/code>.\n\nDefault value is <code>Group<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarGroupType"},"setGroupType":{"!description":"Sets a new value for property {@link #getGroupType groupType}.\n\nDefines the mode of the <code>AvatarGroup<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Group<\/code>.","!static":false,"!category":"function","!type":"fn(sGroupType: sap.f.AvatarGroupType) -> sap.f.AvatarGroup","parameters":{"sGroupType":"type: sap.f.AvatarGroupType, description: New value for property <code>groupType<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.f.AvatarGroupItem]"},"extend":{"!description":"Creates a new subclass of class sap.f.AvatarGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.AvatarGroupItem) -> sap.f.AvatarGroup","parameters":{"oItem":"type: sap.f.AvatarGroupItem, description: The item to add; if empty, nothing is inserted"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.AvatarGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.AvatarGroup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.AvatarGroup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe <code>AvatarGroupItems<\/code> contained by the control.","!static":false,"!category":"function","!type":"fn() -> [sap.f.AvatarGroupItem]"},"!constructorDescription":"Constructor for a new <code>AvatarGroup<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupType groupType} : sap.f.AvatarGroupType (default: Group)<\/li>\n<li>{@link #getAvatarDisplaySize avatarDisplaySize} : sap.m.AvatarSize (default: S)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.f.AvatarGroupItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/f/AvatarGroup","indexOfItem":{"!description":"Checks for the provided <code>sap.f.AvatarGroupItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.AvatarGroupItem) -> Number","parameters":{"oItem":"type: sap.f.AvatarGroupItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setAvatarDisplaySize":{"!description":"Sets a new value for property {@link #getAvatarDisplaySize avatarDisplaySize}.\n\nDefines the display size of each avatar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn(sAvatarDisplaySize: sap.m.AvatarSize) -> sap.f.AvatarGroup","parameters":{"sAvatarDisplaySize":"type: sap.m.AvatarSize, description: New value for property <code>avatarDisplaySize<\/code>"}},"getAvatarDisplaySize":{"!description":"Gets current value of property {@link #getAvatarDisplaySize avatarDisplaySize}.\n\nDefines the display size of each avatar.\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.AvatarSize"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.AvatarGroupItem, iIndex: Number) -> sap.f.AvatarGroup","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.f.AvatarGroupItem, description: The item to insert; if empty, nothing is inserted"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.AvatarGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.AvatarGroup<\/code> itself.\n\nFired when the user clicks or taps on the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.AvatarGroup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.AvatarGroup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.f.semantic.ShareInJamAction":{"!description":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ShareInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ShareInJamAction<\/code>.","!module":"sap/f/semantic/ShareInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.dnd.GridDropInfo":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.f.dnd.GridDropInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DropInfo.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getDropIndicatorSize":{"!description":"Gets current value of property {@link #getDropIndicatorSize dropIndicatorSize}.\n\nA function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop.\n\nUse when custom size needs to be defined. For example when an item is dragged from outside a grid and is dropped over the grid.\n\nIf not specified or if the function returns <code>null<\/code>, the indicator size will be calculated automatically.\n\nThis callback will be called when the indicator is displayed, that happens during the drag over movement.\n\nThe callback receives <code>draggedControl<\/code> as parameter and must return an object of type <code>{rows: <int>, columns: <int>}<\/code> or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.dnd.GridDropInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new GridDropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDropIndicatorSize dropIndicatorSize} : function<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DropInfo#constructor sap.ui.core.dnd.DropInfo}\ncan be used as well.","!module":"sap/f/dnd/GridDropInfo","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.core.dnd.DropInfo","!category":"class","setDropIndicatorSize":{"!description":"Sets a new value for property {@link #getDropIndicatorSize dropIndicatorSize}.\n\nA function which will define the desired drop indicator size. The drop indicator shows the user how the grid will rearrange after drop.\n\nUse when custom size needs to be defined. For example when an item is dragged from outside a grid and is dropped over the grid.\n\nIf not specified or if the function returns <code>null<\/code>, the indicator size will be calculated automatically.\n\nThis callback will be called when the indicator is displayed, that happens during the drag over movement.\n\nThe callback receives <code>draggedControl<\/code> as parameter and must return an object of type <code>{rows: <int>, columns: <int>}<\/code> or <code>null<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnDropIndicatorSize: fn()) -> sap.f.dnd.GridDropInfo","parameters":{"fnDropIndicatorSize":"type: function, description: New value for property <code>dropIndicatorSize<\/code>"}}},"sap.f.GridContainer":{"setContainerQuery":{"!description":"Sets a new value for property {@link #getContainerQuery containerQuery}.\n\nIf set to <code>true<\/code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer<\/code>, instead of the device screen size (media Query).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bContainerQuery: Boolean) -> sap.f.GridContainer","parameters":{"bContainerQuery":"type: boolean, description: New value for property <code>containerQuery<\/code>"}},"setInlineBlockLayout":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bInlineBlockLayout: Boolean) -> sap.f.GridContainer","parameters":{"bInlineBlockLayout":"type: boolean, description: New value for property <code>inlineBlockLayout<\/code>"}},"destroyLayoutS":{"!description":"Destroys the layoutS in the aggregation {@link #getLayoutS layoutS}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Control","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or ID."}},"fireLayoutChange":{"!description":"Fires event {@link #event:layoutChange layoutChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.GridContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyLayoutXS":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"destroyLayoutXL":{"!description":"Destroys the layoutXL in the aggregation {@link #getLayoutXL layoutXL}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"destroyLayoutL":{"!description":"Destroys the layoutL in the aggregation {@link #getLayoutL layoutL}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"destroyLayoutM":{"!description":"Destroys the layoutM in the aggregation {@link #getLayoutM layoutM}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"setAllowDenseFill":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bAllowDenseFill: Boolean) -> sap.f.GridContainer","parameters":{"bAllowDenseFill":"type: boolean, description: New value for property <code>allowDenseFill<\/code>"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setLayout":{"!description":"Sets the aggregated {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn(oLayout: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayout":"type: sap.f.GridContainerSettings, description: The layout to set"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Control) -> sap.f.GridContainer","parameters":{"oItem":"type: sap.ui.core.Control, description: The item to add; if empty, nothing is inserted"}},"detachLayoutChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:layoutChange layoutChange} event of this <code>sap.f.GridContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.GridContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe items contained by the control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getLayout":{"!description":"Gets content of aggregation {@link #getLayout layout}.\n\nThe sap.f.GridContainerSettings applied if no settings are provided for a specific size.\n\nIf no layout is given, a default layout will be used. See the default values for <code>sap.f.GridContainerSettings<\/code>.\n\n<b>Note:<\/b> It is not possible to reuse the same instance of <code>GridContainerSettings<\/code> for several layouts. New instance has to be created for each of them. This is caused by the fact that one object can exist in only a single aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"!constructorDescription":"Constructor for a new <code>sap.f.GridContainer<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getSnapToRow snapToRow} : boolean (default: false)<\/li>\n<li>{@link #getAllowDenseFill allowDenseFill} : boolean (default: false)<\/li>\n<li>{@link #getInlineBlockLayout inlineBlockLayout} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getLayout layout} : sap.f.GridContainerSettings<\/li>\n<li>{@link #getLayoutXS layoutXS} : sap.f.GridContainerSettings<\/li>\n<li>{@link #getLayoutS layoutS} : sap.f.GridContainerSettings<\/li>\n<li>{@link #getLayoutM layoutM} : sap.f.GridContainerSettings<\/li>\n<li>{@link #getLayoutL layoutL} : sap.f.GridContainerSettings<\/li>\n<li>{@link #getLayoutXL layoutXL} : sap.f.GridContainerSettings<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:layoutChange layoutChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Control) -> Number","parameters":{"oItem":"type: sap.ui.core.Control, description: The item whose index is looked for"}},"setSnapToRow":{"!description":"Sets a new value for property {@link #getSnapToRow snapToRow}.\n\nShould the items stretch to fill the rows that they occupy, or not.\n\nIf set to <code>true<\/code> the items will stretch.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSnapToRow: Boolean) -> sap.f.GridContainer","parameters":{"bSnapToRow":"type: boolean, description: New value for property <code>snapToRow<\/code>"}},"!description":"A layout container control used for aligning items with various sizes in a simple grid.\n\n<h3>Overview<\/h3>\n\nThe control is used to align tiles, cards and other controls in configuration, such as a home page or a dashboard. It represents a grid layout with specific row and column sizes, in which the items can take any number of rows and columns.\n\nThe number of columns and rows each item takes can be configured with the use of the <code>{@link sap.f.GridContainerItemLayoutData}<\/code>.\n\nAll rows have the same height and all columns have the same width. Their sizes can be configured with the use of the <code>layout<\/code> aggregation and <code>{@link sap.f.GridContainerSettings}<\/code>.\n\n<h3>Usage<\/h3>\n\n<i>When to use<\/i> <ul> <li>For aligning home page and dashboard items like Tiles and Cards in a simple grid system with equally sized rows and columns.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>If a more complex layout grid system, where columns and rows may vary in size, is needed.<\/li> <\/ul>\n\n<h3>Example:<\/h3> <pre>\n&lt;f:GridContainer&gt;\n\t&lt;f:layout&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;5rem&quot; columnSize=&quot;5rem&quot; gap=&quot;1rem&quot; /&gt;\n\t&lt;/f:layout&gt;\n\t&lt;f:layoutS&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;4rem&quot; columnSize=&quot;4rem&quot; gap=&quot;0.5rem&quot; /&gt;\n\t&lt;/f:layoutS&gt;\n\t&lt;f:items&gt;\n\t\t&lt;GenericTile header=&quot;Sales Fulfillment&quot;&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;2&quot; columns=&quot;2&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t&lt;/GenericTile&gt;\n\t\t&lt;w:Card manifest=&quot;url-to-manifest&quot;&gt;\n\t\t\t&lt;w:layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;6&quot; columns=&quot;3&quot; /&gt;\n\t\t\t&lt;/w:layoutData&gt;\n\t\t&lt;/w:Card&gt;\n\t\t&lt;Panel&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData columns=&quot;4&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t\t&lt;Text text=&quot;Sales information&quot; /&gt;\n\t\t&lt;/Panel&gt;\n\t&lt;/f:items&gt;\n&lt;/f:GridContainer&gt;\n<\/pre>\n\n<h3>Drag and drop:<\/h3> Drag and drop is enabled for the <code>GridContainer<\/code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code>{@link sap.f.dnd.GridDropInfo}<\/code>.\n\nSimilar to the <code>{@link sap.ui.core.dnd.DropInfo}<\/code>, <code>{@link sap.f.dnd.GridDropInfo}<\/code> has to be added to the <code>dragDropConfig<\/code> aggregation, by using <code>{@link sap.ui.core.Element#addDragDropConfig}<\/code>.\n\nBoth <code>{@link sap.ui.core.dnd.DropInfo}<\/code> and <code>{@link sap.f.dnd.GridDropInfo}<\/code> can be used to configure drag and drop. The difference is that the <code>{@link sap.f.dnd.GridDropInfo}<\/code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.","getLayoutS":{"!description":"Gets content of aggregation {@link #getLayoutS layoutS}.\n\nThe sap.f.GridContainerSettings applied for size \"S\". Range: 375px - 599px.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.GridContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setLayoutL":{"!description":"Sets the aggregated {@link #getLayoutL layoutL}.","!static":false,"!category":"function","!type":"fn(oLayoutL: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayoutL":"type: sap.f.GridContainerSettings, description: The layoutL to set"}},"setLayoutM":{"!description":"Sets the aggregated {@link #getLayoutM layoutM}.","!static":false,"!category":"function","!type":"fn(oLayoutM: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayoutM":"type: sap.f.GridContainerSettings, description: The layoutM to set"}},"getSnapToRow":{"!description":"Gets current value of property {@link #getSnapToRow snapToRow}.\n\nShould the items stretch to fill the rows that they occupy, or not.\n\nIf set to <code>true<\/code> the items will stretch.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachLayoutChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:layoutChange layoutChange} event of this <code>sap.f.GridContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.GridContainer<\/code> itself.\n\nFired when the currently active GridSettings change.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.GridContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.GridContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLayoutS":{"!description":"Sets the aggregated {@link #getLayoutS layoutS}.","!static":false,"!category":"function","!type":"fn(oLayoutS: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayoutS":"type: sap.f.GridContainerSettings, description: The layoutS to set"}},"getAllowDenseFill":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActiveLayoutSettings":{"!description":"Gets the <code>GridContainerSettings<\/code> for the current layout breakpoint.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.f.GridContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getContainerQuery":{"!description":"Gets current value of property {@link #getContainerQuery containerQuery}.\n\nIf set to <code>true<\/code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer<\/code>, instead of the device screen size (media Query).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInlineBlockLayout":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.f.GridContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyLayout":{"!description":"Destroys the layout in the aggregation {@link #getLayout layout}.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainer"},"!module":"sap/f/GridContainer","!helpDescription":"A layout container control used for aligning items with various sizes in a simple grid.\n\n<h3>Overview<\/h3>\n\nThe control is used to align tiles, cards and other controls in configuration, such as a home page or a dashboard. It represents a grid layout with specific row and column sizes, in which the items can take any number of rows and columns.\n\nThe number of columns and rows each item takes can be configured with the use of the <code>{@link sap.f.GridContainerItemLayoutData}<\/code>.\n\nAll rows have the same height and all columns have the same width. Their sizes can be configured with the use of the <code>layout<\/code> aggregation and <code>{@link sap.f.GridContainerSettings}<\/code>.\n\n<h3>Usage<\/h3>\n\n<i>When to use<\/i> <ul> <li>For aligning home page and dashboard items like Tiles and Cards in a simple grid system with equally sized rows and columns.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>If a more complex layout grid system, where columns and rows may vary in size, is needed.<\/li> <\/ul>\n\n<h3>Example:<\/h3> <pre>\n&lt;f:GridContainer&gt;\n\t&lt;f:layout&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;5rem&quot; columnSize=&quot;5rem&quot; gap=&quot;1rem&quot; /&gt;\n\t&lt;/f:layout&gt;\n\t&lt;f:layoutS&gt;\n\t\t&lt;f:GridContainerSettings rowSize=&quot;4rem&quot; columnSize=&quot;4rem&quot; gap=&quot;0.5rem&quot; /&gt;\n\t&lt;/f:layoutS&gt;\n\t&lt;f:items&gt;\n\t\t&lt;GenericTile header=&quot;Sales Fulfillment&quot;&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;2&quot; columns=&quot;2&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t&lt;/GenericTile&gt;\n\t\t&lt;w:Card manifest=&quot;url-to-manifest&quot;&gt;\n\t\t\t&lt;w:layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData rows=&quot;6&quot; columns=&quot;3&quot; /&gt;\n\t\t\t&lt;/w:layoutData&gt;\n\t\t&lt;/w:Card&gt;\n\t\t&lt;Panel&gt;\n\t\t\t&lt;layoutData&gt;\n\t\t\t\t&lt;f:GridContainerItemLayoutData columns=&quot;4&quot; /&gt;\n\t\t\t&lt;/layoutData&gt;\n\t\t\t&lt;Text text=&quot;Sales information&quot; /&gt;\n\t\t&lt;/Panel&gt;\n\t&lt;/f:items&gt;\n&lt;/f:GridContainer&gt;\n<\/pre>\n\n<h3>Drag and drop:<\/h3> Drag and drop is enabled for the <code>GridContainer<\/code> with enhanced visualization and interaction, better suited for grid items. This is configured by using the <code>{@link sap.f.dnd.GridDropInfo}<\/code>.\n\nSimilar to the <code>{@link sap.ui.core.dnd.DropInfo}<\/code>, <code>{@link sap.f.dnd.GridDropInfo}<\/code> has to be added to the <code>dragDropConfig<\/code> aggregation, by using <code>{@link sap.ui.core.Element#addDragDropConfig}<\/code>.\n\nBoth <code>{@link sap.ui.core.dnd.DropInfo}<\/code> and <code>{@link sap.f.dnd.GridDropInfo}<\/code> can be used to configure drag and drop. The difference is that the <code>{@link sap.f.dnd.GridDropInfo}<\/code> will provide a drop indicator, which mimics the size of the dragged item and shows the potential drop position inside the grid.","getLayoutXL":{"!description":"Gets content of aggregation {@link #getLayoutXL layoutXL}.\n\nThe sap.f.GridContainerSettings applied for size \"XL\". Range: from 1440px.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"getLayoutXS":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"setLayoutXL":{"!description":"Sets the aggregated {@link #getLayoutXL layoutXL}.","!static":false,"!category":"function","!type":"fn(oLayoutXL: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayoutXL":"type: sap.f.GridContainerSettings, description: The layoutXL to set"}},"getLayoutM":{"!description":"Gets content of aggregation {@link #getLayoutM layoutM}.\n\nThe sap.f.GridContainerSettings applied for size \"M\". Range: 600px - 1023px.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"setLayoutXS":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(oLayoutXS: sap.f.GridContainerSettings) -> sap.f.GridContainer","parameters":{"oLayoutXS":"type: sap.f.GridContainerSettings, description: The layoutXS to set"}},"getLayoutL":{"!description":"Gets content of aggregation {@link #getLayoutL layoutL}.\n\nThe sap.f.GridContainerSettings applied for size \"L\". Range: 1023px - 1439px.","!static":false,"!category":"function","!type":"fn() -> sap.f.GridContainerSettings"},"insertItem":{"!description":"Inserts an item into the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.f.GridContainer","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position.","oItem":"type: sap.ui.core.Item, description: The item to be inserted; if empty, nothing is inserted."}}},"sap.f.semantic.FavoriteAction":{"!description":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FavoriteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FavoriteAction<\/code>.","!module":"sap/f/semantic/FavoriteAction","!helpDescription":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticToggleButton","!category":"class"},"sap.f.semantic.SemanticControl":{"!description":"The base class for the {@link sap.f.semantic.SemanticButton}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDetermines whether the <code>SemanticControl<\/code> is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.f.semantic.SemanticControl","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticControl<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDetermines whether the <code>SemanticControl<\/code> is visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/f/semantic/SemanticControl","!helpDescription":"The base class for the {@link sap.f.semantic.SemanticButton}.","!proto":"sap.ui.core.Element","!category":"class"},"sap.f.Avatar_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Avatar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.Avatar"},"sap.f.GridContainerSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.GridContainerSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.GridContainerSettings"},"sap.f.semantic.FullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FullScreenAction"},"sap.f.semantic.SemanticPage":{"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setDeleteAction":{"!description":"Sets the aggregated {@link #getDeleteAction deleteAction}.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.f.semantic.DeleteAction) -> sap.f.semantic.SemanticPage","parameters":{"oDeleteAction":"type: sap.f.semantic.DeleteAction, description: The deleteAction to set"}},"insertTitleCustomTextAction":{"!description":"Inserts a titleCustomTextAction into the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleCustomTextAction should be inserted at; for a negative value of <code>iIndex<\/code>, the titleCustomTextAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomTextAction is inserted at the last position"}},"setExitFullScreenAction":{"!description":"Sets the aggregated {@link #getExitFullScreenAction exitFullScreenAction}.","!static":false,"!category":"function","!type":"fn(oExitFullScreenAction: sap.f.semantic.ExitFullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oExitFullScreenAction":"type: sap.f.semantic.ExitFullScreenAction, description: The exitFullScreenAction to set"}},"setTitleMainAction":{"!description":"Sets the aggregated {@link #getTitleMainAction titleMainAction}.","!static":false,"!category":"function","!type":"fn(oTitleMainAction: sap.f.semantic.TitleMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oTitleMainAction":"type: sap.f.semantic.TitleMainAction, description: The titleMainAction to set"}},"destroyTitleSnappedOnMobile":{"!description":"Destroys the titleSnappedOnMobile in the aggregation {@link #getTitleSnappedOnMobile titleSnappedOnMobile}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyTitleCustomIconActions":{"!description":"Destroys all the titleCustomIconActions in the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleSnappedContent":{"!description":"Gets content of aggregation {@link #getTitleSnappedContent titleSnappedContent}.\n\nThe content, displayed in the title, when the header is in collapsed state.\n\n<b>Notes:<\/b> <ul> <li>The controls will be placed in the title`s left area, under the <code>titleHeading<\/code> aggregation.<\/li> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to add; if empty, nothing is inserted"}},"getPositiveAction":{"!description":"Gets content of aggregation {@link #getPositiveAction positiveAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Accept<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PositiveAction"},"removeAllTitleCustomIconActions":{"!description":"Removes all the controls from the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"indexOfTitleContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleContent titleContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control) -> Number","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent whose index is looked for"}},"getSendEmailAction":{"!description":"Gets content of aggregation {@link #getSendEmailAction sendEmailAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendEmailAction"},"setShareInJamAction":{"!description":"Sets the aggregated {@link #getShareInJamAction shareInJamAction}.","!static":false,"!category":"function","!type":"fn(oShareInJamAction: sap.f.semantic.ShareInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oShareInJamAction":"type: sap.f.semantic.ShareInJamAction, description: The shareInJamAction to set"}},"removeTitleCustomTextAction":{"!description":"Removes a titleCustomTextAction from the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(vTitleCustomTextAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vTitleCustomTextAction":"type: int|string|sap.m.Button, description: The titleCustomTextAction to remove or its index or id"}},"destroyTitleMainAction":{"!description":"Destroys the titleMainAction in the aggregation {@link #getTitleMainAction titleMainAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"indexOfFooterCustomAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getFooterCustomActions footerCustomActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> Number","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction whose index is looked for"}},"getTitleCustomIconActions":{"!description":"Gets content of aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.\n\nThe <code>titleCustomIconActions<\/code> are placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title, right before the semantic icon action.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"setPositiveAction":{"!description":"Sets the aggregated {@link #getPositiveAction positiveAction}.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.f.semantic.PositiveAction) -> sap.f.semantic.SemanticPage","parameters":{"oPositiveAction":"type: sap.f.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"Provides enhanced functionality by internally aggregating {@link sap.f.DynamicPage} and contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions: <li>The main semantic text action - <code>titleMainAction<\/code><\/li> <li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li> <li>The semantic text actions - <code>editAction<\/code>, <code>deleteAction<\/code>, <code>copyAction<\/code> and <code>addAction<\/code><\/li><\/ul>\n\n<ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li> <li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction<\/code><\/li> <li><code>discussInJamAction<\/code><\/li> <li><code>shareInJamAction<\/code><\/li> <li><code>sendMessageAction<\/code><\/li> <li><code>printAction<\/code><\/li> <li>Any <code>customShareActions<\/code><\/li><\/ul><\/li> <li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>, and <code>closeAction<\/code><\/li><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area: <li>The semantic text action - <code>messagesIndicator<\/code><\/li> <li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area: <li>The main semantic text action - <code>footerMainAction<\/code><\/li> <li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li> <li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed. To adjust the <code>SemanticPage<\/code> content padding, the <code>sapUiContentPadding<\/code>, <code>sapUiNoContentPadding<\/code>, and <code>sapUiResponsiveContentPadding<\/code> CSS classes can be used.","setFavoriteAction":{"!description":"Sets the aggregated {@link #getFavoriteAction favoriteAction}.","!static":false,"!category":"function","!type":"fn(oFavoriteAction: sap.f.semantic.FavoriteAction) -> sap.f.semantic.SemanticPage","parameters":{"oFavoriteAction":"type: sap.f.semantic.FavoriteAction, description: The favoriteAction to set"}},"setSaveAsTileAction":{"!description":"Sets the aggregated {@link #getSaveAsTileAction saveAsTileAction}.","!static":false,"!category":"function","!type":"fn(oSaveAsTileAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oSaveAsTileAction":"type: sap.m.Button, description: The saveAsTileAction to set"}},"getShareInJamAction":{"!description":"Gets content of aggregation {@link #getShareInJamAction shareInJamAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ShareInJamAction"},"setTitleHeading":{"!description":"Sets the aggregated {@link #getTitleHeading titleHeading}.","!static":false,"!category":"function","!type":"fn(oTitleHeading: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleHeading":"type: sap.ui.core.Control, description: The titleHeading to set"}},"setTitleSnappedHeading":{"!description":"Sets the aggregated {@link #getTitleSnappedHeading titleSnappedHeading}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedHeading: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedHeading":"type: sap.ui.core.Control, description: The titleSnappedHeading to set"}},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContent to remove or its index or id"}},"indexOfCustomShareAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getCustomShareActions customShareActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> Number","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction whose index is looked for"}},"insertFooterCustomAction":{"!description":"Inserts a footerCustomAction into the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the footerCustomAction should be inserted at; for a negative value of <code>iIndex<\/code>, the footerCustomAction is inserted at position 0; for a value greater than the current size of the aggregation, the footerCustomAction is inserted at the last position"}},"setHeaderPinnable":{"!description":"Sets a new value for property {@link #getHeaderPinnable headerPinnable}.\n\nDetermines whether the header is pinnable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderPinnable: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderPinnable":"type: boolean, description: New value for property <code>headerPinnable<\/code>"}},"getDraftIndicator":{"!description":"Gets content of aggregation {@link #getDraftIndicator draftIndicator}.\n\nA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code> footer as a second action.","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicator"},"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSaveAsTileAction":{"!description":"Gets content of aggregation {@link #getSaveAsTileAction saveAsTileAction}.\n\nA button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"removeAllTitleContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleContent titleContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setDraftIndicator":{"!description":"Sets the aggregated {@link #getDraftIndicator draftIndicator}.","!static":false,"!category":"function","!type":"fn(oDraftIndicator: sap.m.DraftIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oDraftIndicator":"type: sap.m.DraftIndicator, description: The draftIndicator to set"}},"removeAllFooterCustomActions":{"!description":"Removes all the controls from the aggregation {@link #getFooterCustomActions footerCustomActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"destroyTitleExpandedContent":{"!description":"Destroys all the titleExpandedContent in the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"!module":"sap/f/semantic/SemanticPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation {@link #getPositiveAction positiveAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyTitleSnappedContent":{"!description":"Destroys all the titleSnappedContent in the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation {@link #getHeaderContent headerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getFavoriteAction":{"!description":"Gets content of aggregation {@link #getFavoriteAction favoriteAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FavoriteAction"},"setPrintAction":{"!description":"Sets the aggregated {@link #getPrintAction printAction}.","!static":false,"!category":"function","!type":"fn(oPrintAction: sap.f.semantic.PrintAction) -> sap.f.semantic.SemanticPage","parameters":{"oPrintAction":"type: sap.f.semantic.PrintAction, description: The printAction to set"}},"addCustomShareAction":{"!description":"Adds some customShareAction to the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction to add; if empty, nothing is inserted"}},"getCopyAction":{"!description":"Gets content of aggregation {@link #getCopyAction copyAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CopyAction"},"removeAllTitleExpandedContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleExpandedContent titleExpandedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation {@link #getAddAction addAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyEditAction":{"!description":"Destroys the editAction in the aggregation {@link #getEditAction editAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"setLandmarkInfo":{"!description":"Sets the aggregated {@link #getLandmarkInfo landmarkInfo}.","!static":false,"!category":"function","!type":"fn(oLandmarkInfo: sap.f.DynamicPageAccessibleLandmarkInfo) -> sap.f.semantic.SemanticPage","parameters":{"oLandmarkInfo":"type: sap.f.DynamicPageAccessibleLandmarkInfo, description: The landmarkInfo to set"}},"addTitleCustomIconAction":{"!description":"Adds some titleCustomIconAction to the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction to add; if empty, nothing is inserted"}},"getHeaderContent":{"!description":"Gets content of aggregation {@link #getHeaderContent headerContent}.\n\nThe header content.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyCustomShareActions":{"!description":"Destroys all the customShareActions in the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFullScreenAction":{"!description":"Gets content of aggregation {@link #getFullScreenAction fullScreenAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FullScreenAction"},"insertTitleContent":{"!description":"Inserts a titleContent into the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleContent is inserted at the last position"}},"removeTitleExpandedContent":{"!description":"Removes a titleExpandedContent from the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(vTitleExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleExpandedContent":"type: int|string|sap.ui.core.Control, description: The titleExpandedContent to remove or its index or id"}},"destroyTitleContent":{"!description":"Destroys all the titleContent in the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeFooterCustomAction":{"!description":"Removes a footerCustomAction from the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(vFooterCustomAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vFooterCustomAction":"type: int|string|sap.m.Button, description: The footerCustomAction to remove or its index or id"}},"destroyTitleCustomTextActions":{"!description":"Destroys all the titleCustomTextActions in the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFlagAction":{"!description":"Gets content of aggregation {@link #getFlagAction flagAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FlagAction"},"getAddAction":{"!description":"Gets content of aggregation {@link #getAddAction addAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.AddAction"},"getFooterCustomActions":{"!description":"Gets content of aggregation {@link #getFooterCustomActions footerCustomActions}.\n\nThe <code>footerCustomActions<\/code> are placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer, right after the semantic footer actions.\n\n<b>Note:<\/b> Buttons that are part of this aggregation will always have their <code>type<\/code> property set to <code>Transparent<\/code> by design.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleCustomTextAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> Number","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction whose index is looked for"}},"setFullScreenAction":{"!description":"Sets the aggregated {@link #getFullScreenAction fullScreenAction}.","!static":false,"!category":"function","!type":"fn(oFullScreenAction: sap.f.semantic.FullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oFullScreenAction":"type: sap.f.semantic.FullScreenAction, description: The fullScreenAction to set"}},"setDiscussInJamAction":{"!description":"Sets the aggregated {@link #getDiscussInJamAction discussInJamAction}.","!static":false,"!category":"function","!type":"fn(oDiscussInJamAction: sap.f.semantic.DiscussInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oDiscussInJamAction":"type: sap.f.semantic.DiscussInJamAction, description: The discussInJamAction to set"}},"getTitleContent":{"!description":"Gets content of aggregation {@link #getTitleContent titleContent}.\n\nThe content, displayed in the title.\n\n<b>Notes:<\/b> <ul> <li>The controls will be placed in the middle area.<\/li> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPrintAction":{"!description":"Gets content of aggregation {@link #getPrintAction printAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PrintAction"},"setShowFooter":{"!description":"Sets a new value for property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"destroyCloseAction":{"!description":"Destroys the closeAction in the aggregation {@link #getCloseAction closeAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleAreaShrinkRatio":{"!description":"Gets current value of property {@link #getTitleAreaShrinkRatio titleAreaShrinkRatio}.\n\nAssigns shrinking ratio to the <code>SemanticPage<\/code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>titlePrimaryArea<\/code> property has no effect.\n\nDefault value is <code>1:1.6:1.6<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleShrinkRatio"},"destroyTitleExpandedHeading":{"!description":"Destroys the titleExpandedHeading in the aggregation {@link #getTitleExpandedHeading titleExpandedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setCloseAction":{"!description":"Sets the aggregated {@link #getCloseAction closeAction}.","!static":false,"!category":"function","!type":"fn(oCloseAction: sap.f.semantic.CloseAction) -> sap.f.semantic.SemanticPage","parameters":{"oCloseAction":"type: sap.f.semantic.CloseAction, description: The closeAction to set"}},"setSendEmailAction":{"!description":"Sets the aggregated {@link #getSendEmailAction sendEmailAction}.","!static":false,"!category":"function","!type":"fn(oSendEmailAction: sap.f.semantic.SendEmailAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendEmailAction":"type: sap.f.semantic.SendEmailAction, description: The sendEmailAction to set"}},"setCopyAction":{"!description":"Sets the aggregated {@link #getCopyAction copyAction}.","!static":false,"!category":"function","!type":"fn(oCopyAction: sap.f.semantic.CopyAction) -> sap.f.semantic.SemanticPage","parameters":{"oCopyAction":"type: sap.f.semantic.CopyAction, description: The copyAction to set"}},"removeAllTitleSnappedContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleSnappedContent titleSnappedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyFooterCustomActions":{"!description":"Destroys all the footerCustomActions in the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleSnappedOnMobile":{"!description":"Gets content of aggregation {@link #getTitleSnappedOnMobile titleSnappedOnMobile}.\n\nThe only content that is displayed in the <code>SemanticPage<\/code> title when it is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in collapsed (snapped) state.\n\nUsing this aggregation enables you to provide a simple, single-line title that takes less space on the smaller phone screens when the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.\n\n<b>Note:<\/b> The content set in this aggregation overrides all the other <code>SemanticPage<\/code> aggregations displayed in the title and is only visible on phone mobile devices in collapsed (snapped) state of the <code>SemanticPage<\/code> header.","!static":false,"!category":"function","!type":"fn() -> sap.m.Title"},"removeAllCustomShareActions":{"!description":"Removes all the controls from the aggregation {@link #getCustomShareActions customShareActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getNegativeAction":{"!description":"Gets content of aggregation {@link #getNegativeAction negativeAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Reject<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.NegativeAction"},"indexOfTitleExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleExpandedContent titleExpandedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent whose index is looked for"}},"insertTitleExpandedContent":{"!description":"Inserts a titleExpandedContent into the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleExpandedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleExpandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleExpandedContent is inserted at the last position"}},"setSendMessageAction":{"!description":"Sets the aggregated {@link #getSendMessageAction sendMessageAction}.","!static":false,"!category":"function","!type":"fn(oSendMessageAction: sap.f.semantic.SendMessageAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendMessageAction":"type: sap.f.semantic.SendMessageAction, description: The sendMessageAction to set"}},"destroyLandmarkInfo":{"!description":"Destroys the landmarkInfo in the aggregation {@link #getLandmarkInfo landmarkInfo}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyPrintAction":{"!description":"Destroys the printAction in the aggregation {@link #getPrintAction printAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeTitleContent":{"!description":"Removes a titleContent from the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(vTitleContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleContent":"type: int|string|sap.ui.core.Control, description: The titleContent to remove or its index or id"}},"destroyFooterMainAction":{"!description":"Destroys the footerMainAction in the aggregation {@link #getFooterMainAction footerMainAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFitContent":{"!description":"Gets current value of property {@link #getFitContent fitContent}.\n\nOptimizes <code>SemanticPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitleExpandedContent":{"!description":"Gets content of aggregation {@link #getTitleExpandedContent titleExpandedContent}.\n\nThe content,displayed in the title, when the header is in expanded state.\n\n<b>Note:<\/b> The controls will be placed in the title`s left area, under the <code>titleHeading<\/code> aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getCloseAction":{"!description":"Gets content of aggregation {@link #getCloseAction closeAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CloseAction"},"setTitleAreaShrinkRatio":{"!description":"Sets a new value for property {@link #getTitleAreaShrinkRatio titleAreaShrinkRatio}.\n\nAssigns shrinking ratio to the <code>SemanticPage<\/code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>titlePrimaryArea<\/code> property has no effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1:1.6:1.6<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleAreaShrinkRatio: sap.f.DynamicPageTitleShrinkRatio) -> sap.f.semantic.SemanticPage","parameters":{"sTitleAreaShrinkRatio":"type: sap.f.DynamicPageTitleShrinkRatio, description: New value for property <code>titleAreaShrinkRatio<\/code>"}},"addTitleCustomTextAction":{"!description":"Adds some titleCustomTextAction to the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction to add; if empty, nothing is inserted"}},"getShowFooter":{"!description":"Gets current value of property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyDiscussInJamAction":{"!description":"Destroys the discussInJamAction in the aggregation {@link #getDiscussInJamAction discussInJamAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyCopyAction":{"!description":"Destroys the copyAction in the aggregation {@link #getCopyAction copyAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getSendMessageAction":{"!description":"Gets content of aggregation {@link #getSendMessageAction sendMessageAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendMessageAction"},"setFitContent":{"!description":"Sets a new value for property {@link #getFitContent fitContent}.\n\nOptimizes <code>SemanticPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFitContent: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bFitContent":"type: boolean, description: New value for property <code>fitContent<\/code>"}},"indexOfTitleCustomIconAction":{"!description":"Checks for the provided <code>sap.m.OverflowToolbarButton<\/code> in the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> Number","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction whose index is looked for"}},"getHeaderExpanded":{"!description":"Gets current value of property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitleExpandedHeading":{"!description":"Gets content of aggregation {@link #getTitleExpandedHeading titleExpandedHeading}.\n\nThe <code>titleExpandedHeading<\/code> is positioned in the <code>SemanticPage<\/code> title left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.\n\n<b>Note:<\/b> In order for <code>titleExpandedHeading<\/code> to be taken into account, <code>titleHeading<\/code> has to be empty. Combine <code>titleExpandedHeading<\/code> with <code>titleSnappedHeading<\/code> to switch content when the header switches state.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertCustomShareAction":{"!description":"Inserts a customShareAction into the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the customShareAction should be inserted at; for a negative value of <code>iIndex<\/code>, the customShareAction is inserted at position 0; for a value greater than the current size of the aggregation, the customShareAction is inserted at the last position"}},"destroyTitleHeading":{"!description":"Destroys the titleHeading in the aggregation {@link #getTitleHeading titleHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTitleMainAction":{"!description":"Gets content of aggregation {@link #getTitleMainAction titleMainAction}.\n\nA semantic-specific button which is placed in the <code>SemanticPage<\/code> title as first action.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.TitleMainAction"},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation {@link #getNegativeAction negativeAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroySendMessageAction":{"!description":"Destroys the sendMessageAction in the aggregation {@link #getSendMessageAction sendMessageAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFooterMainAction":{"!description":"Gets content of aggregation {@link #getFooterMainAction footerMainAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Save<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FooterMainAction"},"!helpDescription":"Provides enhanced functionality by internally aggregating {@link sap.f.DynamicPage} and contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions: <li>The main semantic text action - <code>titleMainAction<\/code><\/li> <li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li> <li>The semantic text actions - <code>editAction<\/code>, <code>deleteAction<\/code>, <code>copyAction<\/code> and <code>addAction<\/code><\/li><\/ul>\n\n<ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li> <li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction<\/code><\/li> <li><code>discussInJamAction<\/code><\/li> <li><code>shareInJamAction<\/code><\/li> <li><code>sendMessageAction<\/code><\/li> <li><code>printAction<\/code><\/li> <li>Any <code>customShareActions<\/code><\/li><\/ul><\/li> <li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>, and <code>closeAction<\/code><\/li><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area: <li>The semantic text action - <code>messagesIndicator<\/code><\/li> <li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area: <li>The main semantic text action - <code>footerMainAction<\/code><\/li> <li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li> <li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed. To adjust the <code>SemanticPage<\/code> content padding, the <code>sapUiContentPadding<\/code>, <code>sapUiNoContentPadding<\/code>, and <code>sapUiResponsiveContentPadding<\/code> CSS classes can be used.","destroyFlagAction":{"!description":"Destroys the flagAction in the aggregation {@link #getFlagAction flagAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"addTitleContent":{"!description":"Adds some titleContent to the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent to add; if empty, nothing is inserted"}},"destroySendEmailAction":{"!description":"Destroys the sendEmailAction in the aggregation {@link #getSendEmailAction sendEmailAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyFullScreenAction":{"!description":"Destroys the fullScreenAction in the aggregation {@link #getFullScreenAction fullScreenAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setFooterMainAction":{"!description":"Sets the aggregated {@link #getFooterMainAction footerMainAction}.","!static":false,"!category":"function","!type":"fn(oFooterMainAction: sap.f.semantic.FooterMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oFooterMainAction":"type: sap.f.semantic.FooterMainAction, description: The footerMainAction to set"}},"setEditAction":{"!description":"Sets the aggregated {@link #getEditAction editAction}.","!static":false,"!category":"function","!type":"fn(oEditAction: sap.f.semantic.EditAction) -> sap.f.semantic.SemanticPage","parameters":{"oEditAction":"type: sap.f.semantic.EditAction, description: The editAction to set"}},"insertTitleCustomIconAction":{"!description":"Inserts a titleCustomIconAction into the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleCustomIconAction should be inserted at; for a negative value of <code>iIndex<\/code>, the titleCustomIconAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomIconAction is inserted at the last position"}},"setTitleSnappedOnMobile":{"!description":"Sets the aggregated {@link #getTitleSnappedOnMobile titleSnappedOnMobile}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedOnMobile: sap.m.Title) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedOnMobile":"type: sap.m.Title, description: The titleSnappedOnMobile to set"}},"destroyTitleSnappedHeading":{"!description":"Destroys the titleSnappedHeading in the aggregation {@link #getTitleSnappedHeading titleSnappedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"addTitleSnappedContent":{"!description":"Adds some titleSnappedContent to the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent to add; if empty, nothing is inserted"}},"removeAllTitleCustomTextActions":{"!description":"Removes all the controls from the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeTitleCustomIconAction":{"!description":"Removes a titleCustomIconAction from the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(vTitleCustomIconAction: Number | String | sap.m.OverflowToolbarButton) -> sap.m.OverflowToolbarButton","parameters":{"vTitleCustomIconAction":"type: int|string|sap.m.OverflowToolbarButton, description: The titleCustomIconAction to remove or its index or id"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe <code>SemanticPage<\/code> content.\n\n<b>Note:<\/b> The SAP Fiori Design guidelines require that the <code>SemanticPage<\/code>'s header content and the <code>SemanticPage<\/code>'s content are aligned vertically. When using {@link sap.ui.layout.form.Form}, {@link sap.m.Panel}, {@link sap.m.Table} and {@link sap.m.List} in the content area of <code>SemanticPage<\/code>, if the content is not already aligned, you need to adjust their left text offset to achieve the vertical alignment. To do this, apply the <code>sapFSemanticPageAlignContent<\/code> CSS class to them and set their <code>width<\/code> property to <code>auto<\/code> (if not set by default).\n\nExample:\n\n<pre>\n<code> &lt;Panel class=\u201csapFSemanticPageAlignContent\u201d width=\u201cauto\u201d&gt;&lt;/Panel&gt; <\/code>\n<\/pre>\n\nPlease keep in mind that the alignment is not possible when the controls are placed in a {@link sap.ui.layout.Grid} or in other layout controls that use <code>overflow:hidden<\/code> CSS property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getDeleteAction":{"!description":"Gets content of aggregation {@link #getDeleteAction deleteAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DeleteAction"},"!category":"class","setTitlePrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Please use the <code>titleAreaShrinkRatio<\/code> property instead. The value of <code>titleAreaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>titlePrimaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>titleAreaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>titlePrimaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>titleAreaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Sets a new value for property {@link #getTitlePrimaryArea titlePrimaryArea}.\n\nDetermines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTitlePrimaryArea: sap.f.DynamicPageTitleArea) -> sap.f.semantic.SemanticPage","parameters":{"sTitlePrimaryArea":"type: sap.f.DynamicPageTitleArea, description: New value for property <code>titlePrimaryArea<\/code>"}},"getCustomShareActions":{"!description":"Gets content of aggregation {@link #getCustomShareActions customShareActions}.\n\nThe <code>customShareActions<\/code> are placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title, right after the semantic actions.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setFlagAction":{"!description":"Sets the aggregated {@link #getFlagAction flagAction}.","!static":false,"!category":"function","!type":"fn(oFlagAction: sap.f.semantic.FlagAction) -> sap.f.semantic.SemanticPage","parameters":{"oFlagAction":"type: sap.f.semantic.FlagAction, description: The flagAction to set"}},"getExitFullScreenAction":{"!description":"Gets content of aggregation {@link #getExitFullScreenAction exitFullScreenAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ExitFullScreenAction"},"getMessagesIndicator":{"!description":"Gets content of aggregation {@link #getMessagesIndicator messagesIndicator}.\n\nA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code> footer as a first action.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.MessagesIndicator"},"addFooterCustomAction":{"!description":"Adds some footerCustomAction to the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction to add; if empty, nothing is inserted"}},"getHeaderPinnable":{"!description":"Gets current value of property {@link #getHeaderPinnable headerPinnable}.\n\nDetermines whether the header is pinnable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySaveAsTileAction":{"!description":"Destroys the saveAsTileAction in the aggregation {@link #getSaveAsTileAction saveAsTileAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setHeaderExpanded":{"!description":"Sets a new value for property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"insertTitleSnappedContent":{"!description":"Inserts a titleSnappedContent into the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleSnappedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleSnappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleSnappedContent is inserted at the last position"}},"!constructorDescription":"Constructor for a new <code>SemanticPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getHeaderPinnable headerPinnable} : boolean (default: true)<\/li>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getTitlePrimaryArea titlePrimaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<li>{@link #getTitleAreaShrinkRatio titleAreaShrinkRatio} : sap.f.DynamicPageTitleShrinkRatio (default: 1:1.6:1.6)<\/li>\n<li>{@link #getFitContent fitContent} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleHeading titleHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleExpandedHeading titleExpandedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleSnappedHeading titleSnappedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleBreadcrumbs titleBreadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<li>{@link #getTitleSnappedOnMobile titleSnappedOnMobile} : sap.m.Title<\/li>\n<li>{@link #getTitleSnappedContent titleSnappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleExpandedContent titleExpandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleContent titleContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleMainAction titleMainAction} : sap.f.semantic.TitleMainAction<\/li>\n<li>{@link #getEditAction editAction} : sap.f.semantic.EditAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.f.semantic.DeleteAction<\/li>\n<li>{@link #getCopyAction copyAction} : sap.f.semantic.CopyAction<\/li>\n<li>{@link #getAddAction addAction} : sap.f.semantic.AddAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.f.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.f.semantic.FavoriteAction<\/li>\n<li>{@link #getFullScreenAction fullScreenAction} : sap.f.semantic.FullScreenAction<\/li>\n<li>{@link #getExitFullScreenAction exitFullScreenAction} : sap.f.semantic.ExitFullScreenAction<\/li>\n<li>{@link #getCloseAction closeAction} : sap.f.semantic.CloseAction<\/li>\n<li>{@link #getTitleCustomTextActions titleCustomTextActions} : sap.m.Button[]<\/li>\n<li>{@link #getTitleCustomIconActions titleCustomIconActions} : sap.m.OverflowToolbarButton[]<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooterMainAction footerMainAction} : sap.f.semantic.FooterMainAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.f.semantic.MessagesIndicator<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.f.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.f.semantic.NegativeAction<\/li>\n<li>{@link #getFooterCustomActions footerCustomActions} : sap.m.Button[]<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.f.semantic.DiscussInJamAction<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.f.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.f.semantic.SendMessageAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.f.semantic.SendEmailAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.f.semantic.PrintAction<\/li>\n<li>{@link #getCustomShareActions customShareActions} : sap.m.Button[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.f.DynamicPageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMessagesIndicator":{"!description":"Sets the aggregated {@link #getMessagesIndicator messagesIndicator}.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.f.semantic.MessagesIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oMessagesIndicator":"type: sap.f.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"destroyExitFullScreenAction":{"!description":"Destroys the exitFullScreenAction in the aggregation {@link #getExitFullScreenAction exitFullScreenAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyDraftIndicator":{"!description":"Destroys the draftIndicator in the aggregation {@link #getDraftIndicator draftIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeCustomShareAction":{"!description":"Removes a customShareAction from the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(vCustomShareAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomShareAction":"type: int|string|sap.m.Button, description: The customShareAction to remove or its index or id"}},"destroyTitleBreadcrumbs":{"!description":"Destroys the titleBreadcrumbs in the aggregation {@link #getTitleBreadcrumbs titleBreadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getDiscussInJamAction":{"!description":"Gets content of aggregation {@link #getDiscussInJamAction discussInJamAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DiscussInJamAction"},"getTitlePrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Please use the <code>titleAreaShrinkRatio<\/code> property instead. The value of <code>titleAreaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>titlePrimaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>titleAreaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>titlePrimaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>titleAreaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Gets current value of property {@link #getTitlePrimaryArea titlePrimaryArea}.\n\nDetermines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleArea"},"getTitleHeading":{"!description":"Gets content of aggregation {@link #getTitleHeading titleHeading}.\n\nThe <code>SemanticPage<\/code> heading.\n\nA typical usage is the <code>sap.m.Title<\/code> or any other UI5 control, that serves as a heading for an object.\n\n<b>Notes:<\/b> <ul> <li>The control will be placed in the title`s leftmost area.<\/li> <li><code>titleHeading<\/code> is mutually exclusive with <code>titleSnappedHeading<\/code> and <code>titleExpandedHeading<\/code>. If <code>titleHeading<\/code> is provided, both <code>titleSnappedHeading<\/code> and <code>titleExpandedHeading<\/code> are ignored. <code>titleHeading<\/code> is useful when the content of <code>titleSnappedHeading<\/code> and <code>titleExpandedHeading<\/code> needs to be the same as it replaces them both.<\/li> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setAddAction":{"!description":"Sets the aggregated {@link #getAddAction addAction}.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.f.semantic.AddAction) -> sap.f.semantic.SemanticPage","parameters":{"oAddAction":"type: sap.f.semantic.AddAction, description: The addAction to set"}},"addTitleExpandedContent":{"!description":"Adds some titleExpandedContent to the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent to add; if empty, nothing is inserted"}},"destroyFavoriteAction":{"!description":"Destroys the favoriteAction in the aggregation {@link #getFavoriteAction favoriteAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleSnappedHeading":{"!description":"Gets content of aggregation {@link #getTitleSnappedHeading titleSnappedHeading}.\n\nThe <code>titleSnappedHeading<\/code> is positioned in the <code>SemanticPage<\/code> title left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.\n\n<b>Notes:<\/b> <ul> <li>In order for <code>titleSnappedHeading<\/code> to be taken into account, <code>titleHeading<\/code> has to be empty. Combine <code>titleSnappedHeading<\/code> with <code>titleExpandedHeading<\/code> to switch content when the header switches state.<\/li> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getTitleBreadcrumbs":{"!description":"Gets content of aggregation {@link #getTitleBreadcrumbs titleBreadcrumbs}.\n\nThe <code>SemanticPage<\/code> breadcrumbs.\n\nA typical usage is the <code>sap.m.Breadcrumbs<\/code> control or any other UI5 control, that implements the <code>sap.m.IBreadcrumbs<\/code> interface.\n\n<b>Notes:<\/b> <ul> <li>The control will be placed in the title`s top-left area.<\/li> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.m.IBreadcrumbs"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeaderContent headerContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation {@link #getMessagesIndicator messagesIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position"}},"getEditAction":{"!description":"Gets content of aggregation {@link #getEditAction editAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.\n\n<b>Note:<\/b> If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.EditAction"},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation {@link #getDeleteAction deleteAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeTitleSnappedContent":{"!description":"Removes a titleSnappedContent from the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(vTitleSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleSnappedContent":"type: int|string|sap.ui.core.Control, description: The titleSnappedContent to remove or its index or id"}},"setNegativeAction":{"!description":"Sets the aggregated {@link #getNegativeAction negativeAction}.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.f.semantic.NegativeAction) -> sap.f.semantic.SemanticPage","parameters":{"oNegativeAction":"type: sap.f.semantic.NegativeAction, description: The negativeAction to set"}},"destroyShareInJamAction":{"!description":"Destroys the shareInJamAction in the aggregation {@link #getShareInJamAction shareInJamAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleCustomTextActions":{"!description":"Gets content of aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.\n\nThe <code>titleCustomTextActions<\/code> are placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title, right before the semantic text action.\n\n<b>Notes:<\/b> <ul> <li>If the <code>titleSnappedOnMobile<\/code> aggregation is set, its content overrides this aggregation when the control is viewed on a phone mobile device and the <code>SemanticPage<\/code> header is in its collapsed (snapped) state.<\/li> <li>Buttons that are part of this aggregation will always have their <code>type<\/code> property set to <code>Transparent<\/code> by design.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleSnappedContent titleSnappedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent whose index is looked for"}},"setTitleBreadcrumbs":{"!description":"Sets the aggregated {@link #getTitleBreadcrumbs titleBreadcrumbs}.","!static":false,"!category":"function","!type":"fn(oTitleBreadcrumbs: sap.m.IBreadcrumbs) -> sap.f.semantic.SemanticPage","parameters":{"oTitleBreadcrumbs":"type: sap.m.IBreadcrumbs, description: The titleBreadcrumbs to set"}},"getLandmarkInfo":{"!description":"Gets content of aggregation {@link #getLandmarkInfo landmarkInfo}.\n\nAccessible landmark settings to be applied to the containers of the <code>sap.f.SemanticPage<\/code> control.\n\nIf not set, no landmarks will be written.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageAccessibleLandmarkInfo"},"setTitleExpandedHeading":{"!description":"Sets the aggregated {@link #getTitleExpandedHeading titleExpandedHeading}.","!static":false,"!category":"function","!type":"fn(oTitleExpandedHeading: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedHeading":"type: sap.ui.core.Control, description: The titleExpandedHeading to set"}}},"sap.f.semantic.TitleMainAction":{"!description":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.MainAction.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.TitleMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TitleMainAction<\/code>.","!module":"sap/f/semantic/TitleMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.MainAction","!category":"class"},"sap.f.routing.TargetHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(bCloseDialogs: Boolean)","prototype":"sap.f.routing.TargetHandler"},"sap.f.semantic.DiscussInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DiscussInJamAction"},"sap.f.cards.HeaderPosition":{"!description":"Different options for the position of the header in controls that implement the {@link sap.f.ICard} interface.","!module":"sap/f/library","Top":{"!description":"The Header is over the content.","!category":"enum","!type":"String"},"Bottom":{"!description":"The Header is under the content.","!category":"enum","!type":"String"},"!category":"static class"},"sap.f.Card":{"!description":"A control that represents a container with a predefined header and content.\n\n<h3>Overview<\/h3> The card is a container for grouping and displaying information.\n\n<h3>Structure<\/h3> You can control the width and height of the card, using properties. The <code>Card<\/code> has the following aggregations: <ul> <li><code>header<\/code> - can be either a {@link sap.f.cards.Header Header} or a {@link sap.f.cards.NumericHeader NumericHeader} <li><code>content<\/code> - can be any {@link sap.ui.core.Control Control}.<\/li> <\/ul>\n\n<h3>Guidelines:<\/h3> <ul> <li>A card should represent a task or visualize a specific set of information.<\/li> <li>It is recommended to use cards on home page layouts.<\/li> <li>The card shouldn't be large with a lot of content.<\/li> <\/ul>\n\n<h3>Usage<\/h3> To show a KPI value or any numeric information, use {@link sap.f.cards.NumericHeader NumericHeader} as a card header. For any other use cases, use the regular {@link sap.f.cards.Header Header}. Recommended content: - List - Table - Object information - Charts - Timelines - Images\n\n<i>When to use<\/i> <ul> <li>When you need multiple cards on a home page layout.<\/li> <li>When you have to achieve simple card visualization.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>When you have to reuse the card between applications. For such cases, use: {@link sap.ui.integration.widgets.Card Integration Card}.<\/li> <li>When you need nesting. For such cases, use: {@link sap.m.Panel Panel}.<\/li> <li>When the card is not part of a card layout. For such cases, use: {@link sap.m.Panel Panel}.<\/li> <li>When you need more header configuration flexibility.<\/li> <\/ul>","getMetadata":{"!description":"Returns a metadata object for class sap.f.Card.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.Card","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getHeaderPosition":{"!description":"Gets current value of property {@link #getHeaderPosition headerPosition}.\n\nDefines the position of the Card Header.\n\nDefault value is <code>Top<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.HeaderPosition"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the card.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setHeaderPosition":{"!description":"Sets a new value for property {@link #getHeaderPosition headerPosition}.\n\nDefines the position of the Card Header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Top<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderPosition: sap.f.cards.HeaderPosition) -> sap.f.Card","parameters":{"sHeaderPosition":"type: sap.f.cards.HeaderPosition, description: New value for property <code>headerPosition<\/code>"}},"!proto":"sap.ui.core.Control","getCardContent":{"!description":"Implements sap.f.ICard interface.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the card.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.f.Card","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.f.Card","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setHeader":{"!description":"Sets the aggregated {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.f.cards.IHeader) -> sap.f.Card","parameters":{"oHeader":"type: sap.f.cards.IHeader, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the header of the card.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.IHeader"},"extend":{"!description":"Creates a new subclass of class sap.f.Card with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the card.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Card<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeaderPosition headerPosition} : sap.f.cards.HeaderPosition (default: Top)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.f.cards.IHeader<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/f/Card","!helpDescription":"A control that represents a container with a predefined header and content.\n\n<h3>Overview<\/h3> The card is a container for grouping and displaying information.\n\n<h3>Structure<\/h3> You can control the width and height of the card, using properties. The <code>Card<\/code> has the following aggregations: <ul> <li><code>header<\/code> - can be either a {@link sap.f.cards.Header Header} or a {@link sap.f.cards.NumericHeader NumericHeader} <li><code>content<\/code> - can be any {@link sap.ui.core.Control Control}.<\/li> <\/ul>\n\n<h3>Guidelines:<\/h3> <ul> <li>A card should represent a task or visualize a specific set of information.<\/li> <li>It is recommended to use cards on home page layouts.<\/li> <li>The card shouldn't be large with a lot of content.<\/li> <\/ul>\n\n<h3>Usage<\/h3> To show a KPI value or any numeric information, use {@link sap.f.cards.NumericHeader NumericHeader} as a card header. For any other use cases, use the regular {@link sap.f.cards.Header Header}. Recommended content: - List - Table - Object information - Charts - Timelines - Images\n\n<i>When to use<\/i> <ul> <li>When you need multiple cards on a home page layout.<\/li> <li>When you have to achieve simple card visualization.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>When you have to reuse the card between applications. For such cases, use: {@link sap.ui.integration.widgets.Card Integration Card}.<\/li> <li>When you need nesting. For such cases, use: {@link sap.m.Panel Panel}.<\/li> <li>When the card is not part of a card layout. For such cases, use: {@link sap.m.Panel Panel}.<\/li> <li>When you need more header configuration flexibility.<\/li> <\/ul>","destroyHeader":{"!description":"Destroys the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.f.Card"},"getCardHeader":{"!description":"Implements sap.f.ICard interface.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.IHeader"},"getCardHeaderPosition":{"!description":"Implements sap.f.ICard interface.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.HeaderPosition"},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.Card"}},"sap.f.AvatarColor":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.AvatarColor} instead.<br>Possible background color options for the {@link sap.f.Avatar} control.\n\n<b>Notes:<\/b> <ul> <li>Keep in mind that the colors are theme-dependent and can differ based on the currently used theme.<\/li> <li> If the <code>Random<\/code> value is assigned, a random color is chosen from the accent options (Accent1 to Accent10).<\/li> <\/ul>","!module":"sap/f/library","!category":"static class"},"sap.f.semantic.PrintAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PrintAction"},"sap.f.semantic.FooterMainAction":{"!description":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.MainAction.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FooterMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FooterMainAction<\/code>.","!module":"sap/f/semantic/FooterMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"sap.f.semantic.MainAction","!category":"class"},"sap.f.AvatarSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.AvatarSize} instead.<br>Predefined sizes for the {@link sap.f.Avatar} control.","!module":"sap/f/library","!category":"static class"},"sap.f.AvatarGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.AvatarGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.AvatarGroupItem"},"sap.f.semantic.SendMessageAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendMessageAction"},"sap.f.semantic.MessagesIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MessagesIndicator"},"sap.f.semantic.EditAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.EditAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.EditAction"},"sap.f.semantic.SemanticToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticToggleButton"},"sap.f.DynamicPageTitle_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageTitle"},"sap.f.cards.Header_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.cards.Header with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.cards.Header"},"sap.f.cards.NumericHeader":{"destroySideIndicators":{"!description":"Destroys all the sideIndicators in the aggregation {@link #getSideIndicators sideIndicators}.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.NumericHeader"},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nThe subtitle of the card","!static":false,"!category":"function","!type":"fn() -> String"},"isReady":{"!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getNumber":{"!description":"Gets current value of property {@link #getNumber number}.\n\nThe numeric value of the main number indicator. If the value contains more than five characters, only the first five are displayed. Without rounding the number.","!static":false,"!category":"function","!type":"fn() -> String"},"addSideIndicator":{"!description":"Adds some sideIndicator to the aggregation {@link #getSideIndicators sideIndicators}.","!static":false,"!category":"function","!type":"fn(oSideIndicator: sap.f.cards.NumericSideIndicator) -> sap.f.cards.NumericHeader","parameters":{"oSideIndicator":"type: sap.f.cards.NumericSideIndicator, description: The sideIndicator to add; if empty, nothing is inserted"}},"getTrend":{"!description":"Gets current value of property {@link #getTrend trend}.\n\nThe direction of the trend arrow. Shows deviation for the value of the main number indicator.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DeviationIndicator"},"!constructorDescription":"Constructor for a new <code>NumericHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getStatusText statusText} : string (default: )<\/li>\n<li>{@link #getUnitOfMeasurement unitOfMeasurement} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getTrend trend} : sap.m.DeviationIndicator (default: None)<\/li>\n<li>{@link #getState state} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getDetails details} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getToolbar toolbar} : sap.ui.core.Control<\/li>\n<li>{@link #getSideIndicators sideIndicators} : sap.f.cards.NumericSideIndicator[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the card","!static":false,"!category":"function","!type":"fn() -> String"},"setUnitOfMeasurement":{"!description":"Sets the general unit of measurement for the header. Displayed as side information to the subtitle.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: The value of the unit of measurement"}},"setDetails":{"!description":"Sets additional text which adds more details to what is shown in the numeric header.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: The text of the details"}},"setTrend":{"!description":"Sets the direction of the trend arrow.","!static":false,"!category":"function","!type":"fn(sValue: sap.m.DeviationIndicator) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: sap.m.DeviationIndicator, description: The direction of the trend arrow"}},"removeSideIndicator":{"!description":"Removes a sideIndicator from the aggregation {@link #getSideIndicators sideIndicators}.","!static":false,"!category":"function","!type":"fn(vSideIndicator: Number | String | sap.f.cards.NumericSideIndicator) -> sap.f.cards.NumericSideIndicator","parameters":{"vSideIndicator":"type: int|string|sap.f.cards.NumericSideIndicator, description: The sideIndicator to remove or its index or id"}},"indexOfSideIndicator":{"!description":"Checks for the provided <code>sap.f.cards.NumericSideIndicator<\/code> in the aggregation {@link #getSideIndicators sideIndicators}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSideIndicator: sap.f.cards.NumericSideIndicator) -> Number","parameters":{"oSideIndicator":"type: sap.f.cards.NumericSideIndicator, description: The sideIndicator whose index is looked for"}},"setSubtitle":{"!description":"Sets the subtitle.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: The text of the subtitle"}},"getToolbar":{"!description":"Gets content of aggregation {@link #getToolbar toolbar}.\n\nDefines the toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.cards.NumericHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.cards.NumericHeader<\/code> itself.\n\nFires when the user presses the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.cards.NumericHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.cards.NumericHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUnitOfMeasurement":{"!description":"Gets current value of property {@link #getUnitOfMeasurement unitOfMeasurement}.\n\nGeneral unit of measurement for the header. Displayed as side information to the subtitle.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"Displays general information in the header of the {@link sap.f.Card} and allows the configuration of a numeric value visualization..\n\nYou can configure the title, subtitle, status text and icon, using the provided properties. To add more side number indicators, use the <code>sideIndicators<\/code> aggregation.\n\n<b>Notes:<\/b> <ul> <li>You should always set a title.<\/li> <li>You should always have a maximum of two side indicators.<\/li> <li>To show only basic information, use {@link sap.f.cards.Header Header} instead.<\/li> <\/ul>","getSideIndicators":{"!description":"Gets content of aggregation {@link #getSideIndicators sideIndicators}.\n\nAdditional side number indicators. For example \"Deviation\" and \"Target\". Not more than two side indicators should be used.","!static":false,"!category":"function","!type":"fn() -> [sap.f.cards.NumericSideIndicator]"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.cards.NumericHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setScale":{"!description":"Sets the unit of measurement (scaling prefix) for the main indicator.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: The text of the title"}},"setTitle":{"!description":"Sets the title.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: The text of the title"}},"getDetails":{"!description":"Gets current value of property {@link #getDetails details}.\n\nAdditional text which adds more details to what is shown in the numeric header.","!static":false,"!category":"function","!type":"fn() -> String"},"setStatusText":{"!description":"Sets a new value for property {@link #getStatusText statusText}.\n\nDefines the status text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sStatusText: String) -> sap.f.cards.NumericHeader","parameters":{"sStatusText":"type: string, description: New value for property <code>statusText<\/code>"}},"setNumber":{"!description":"Sets the value of the main number indicator.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: string, description: A string representation of the number"}},"removeAllSideIndicators":{"!description":"Removes all the controls from the aggregation {@link #getSideIndicators sideIndicators}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.f.cards.NumericSideIndicator]"},"extend":{"!description":"Creates a new subclass of class sap.f.cards.NumericHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.cards.NumericHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.cards.NumericHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.cards.NumericHeader","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getState":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setToolbar":{"!description":"Sets the aggregated {@link #getToolbar toolbar}.","!static":false,"!category":"function","!type":"fn(oToolbar: sap.ui.core.Control) -> sap.f.cards.NumericHeader","parameters":{"oToolbar":"type: sap.ui.core.Control, description: The toolbar to set"}},"!module":"sap/f/cards/NumericHeader","destroyToolbar":{"!description":"Destroys the toolbar in the aggregation {@link #getToolbar toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.f.cards.NumericHeader"},"getScale":{"!description":"Gets current value of property {@link #getScale scale}.\n\nDefines the unit of measurement (scaling prefix) for the main indicator. Financial characters can be used for currencies and counters. The International System of Units (SI) prefixes can be used. If the unit contains more than three characters, only the first three characters are displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Displays general information in the header of the {@link sap.f.Card} and allows the configuration of a numeric value visualization..\n\nYou can configure the title, subtitle, status text and icon, using the provided properties. To add more side number indicators, use the <code>sideIndicators<\/code> aggregation.\n\n<b>Notes:<\/b> <ul> <li>You should always set a title.<\/li> <li>You should always have a maximum of two side indicators.<\/li> <li>To show only basic information, use {@link sap.f.cards.Header Header} instead.<\/li> <\/ul>","insertSideIndicator":{"!description":"Inserts a sideIndicator into the aggregation {@link #getSideIndicators sideIndicators}.","!static":false,"!category":"function","!type":"fn(oSideIndicator: sap.f.cards.NumericSideIndicator, iIndex: Number) -> sap.f.cards.NumericHeader","parameters":{"oSideIndicator":"type: sap.f.cards.NumericSideIndicator, description: The sideIndicator to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the sideIndicator should be inserted at; for a negative value of <code>iIndex<\/code>, the sideIndicator is inserted at position 0; for a value greater than the current size of the aggregation, the sideIndicator is inserted at the last position"}},"setState":{"!description":"Sets the semantic color which represents the state of the main number indicator.","!static":false,"!category":"function","!type":"fn(sValue: sap.m.ValueColor) -> sap.f.cards.NumericHeader","parameters":{"sValue":"type: sap.m.ValueColor, description: The semantic color which represents the state"}},"getStatusText":{"!description":"Gets current value of property {@link #getStatusText statusText}.\n\nDefines the status text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.f.dnd.IGridDroppable":{"!description":"Interface that should be implemented by grid controls, if they are working with the <code>sap.f.dnd.GridDropInfo<\/code>.\n\nIt is highly recommended that those grid controls have optimized <code>removeItem<\/code> and <code>insertItem<\/code> methods (if \"items\" is target drop aggregation). Meaning to override them in a way that they don't trigger invalidation.","!module":"sap/f/library","!category":"static class"},"sap.f.semantic.SendEmailAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendEmailAction"},"sap.f":{"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"imageFitType":{"!description":"Specifies how an image would fit in the <code>Avatar<\/code>.","!category":"enum","!type":"sap.m.AvatarImageFitType"},"rootLabel":{"!description":"Texts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!category":"enum","!type":"String"},"type":{"!description":"Defines the visual indication and behavior of the list items, e.g. <code>Active<\/code>, <code>Navigation<\/code>, <code>Detail<\/code>.","!category":"enum","!type":"sap.m.ListType"},"DynamicPageTitle":"sap.f.DynamicPageTitle_obj","ProductSwitch":"sap.f.ProductSwitch_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"DynamicPageHeader":"sap.f.DynamicPageHeader_obj","snapToRow":{"!description":"Should the items stretch to fill the rows that they occupy, or not.\n\nIf set to <code>true<\/code> the items will stretch.","!category":"enum","!type":"Boolean"},"footerRole":{"!description":"Landmark role of the footer container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"dnd":"sap.f.dnd","height":{"!description":"Defines the height of the card.","!category":"enum","!type":"sap.ui.core.CSSSize"},"defaultTransitionNameBeginColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"!description":"SAPUI5 library with controls specialized for SAP Fiori apps.","minRows":{"!description":"Specifies the minimum number of rows, which the item should take.","!category":"enum","!type":"Number"},"SearchManager":"sap.f.SearchManager_obj","Card":"sap.f.Card_obj","!module":"sap/f/library","customFontSize":{"!description":"Specifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"DynamicPageTitleShrinkRatio":"sap.f.DynamicPageTitleShrinkRatio","sticky":{"!description":"Defines the section of the control that remains fixed at the top of the page during vertical scrolling as long as the control is in the viewport.\n\n<b>Note:<\/b> Enabling sticky column headers in List controls will not have any effect.\n\nThere is limited browser support. Browsers that do not support this feature are listed below: <ul> <li>IE<\/li> <li>Edge lower than version 41 (EdgeHTML 16)<\/li> <li>Firefox lower than version 59<\/li> <\/ul>\n\nThere are also some known limitations. A few are given below: <ul> <li>If the control is placed in layout containers that have the <code>overflow: hidden<\/code> or <code>overflow: auto<\/code> style definition, this can prevent the sticky elements of the control from becoming fixed at the top of the viewport.<\/li> <li>If sticky column headers are enabled in the <code>sap.m.Table<\/code> control, setting focus on the column headers will let the table scroll to the top.<\/li> <li>A transparent toolbar design is not supported for sticky bars. The toolbar will automatically get an intransparent background color.<\/li> <li>This feature supports only the default height of the toolbar control.<\/li> <\/ul>","!category":"enum","!type":"[sap.m.Sticky]"},"semantic":"sap.f.semantic","AvatarGroup":"sap.f.AvatarGroup_obj","contentRole":{"!description":"Landmark role of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"unread":{"!description":"Activates the unread indicator for the list item, if set to <code>true<\/code>. <b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"columns":{"!description":"How many columns to have on a row.\n\nIf not defined, <code>sap.f.GridContainer<\/code> will position as many columns as they can fit in the container.","!category":"enum","!type":"Number"},"growingThreshold":{"!description":"Defines the number of items to be requested from the model for each grow. This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.","!category":"enum","!type":"Number"},"headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Determines whether the control is enabled.","!category":"enum","!type":"Boolean"},"routing":"sap.f.routing","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"minColumnSize":{"!description":"Sets the minimum width of the columns. Setting this together with <code>maxColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.","!category":"enum","!type":"sap.ui.core.CSSSize"},"GridListItem":"sap.f.GridListItem_obj","GridContainer":"sap.f.GridContainer_obj","defaultTransitionNameEndColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"keyboardMode":{"!description":"Defines keyboard handling behavior of the control.","!category":"enum","!type":"sap.m.ListKeyboardMode"},"areaShrinkRatio":{"!description":"Assigns shrinking ratio to the <code>DynamicPageTitle<\/code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>primaryArea<\/code> property has no effect.","!category":"enum","!type":"sap.f.DynamicPageTitleShrinkRatio"},"showNavButton":{"!description":"Determines whether a back navigation button is displayed.","!category":"enum","!type":"Boolean"},"avatarDisplaySize":{"!description":"Defines the display size of each avatar.","!category":"enum","!type":"sap.m.AvatarSize"},"rowSize":{"!description":"The height of the rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.","!category":"enum","!type":"sap.ui.core.CSSSize"},"HeaderPosition":"sap.f.cards.HeaderPosition","IDynamicPageStickyContent":"sap.f.IDynamicPageStickyContent","backgroundColor":{"!description":"Determines the background color of the control.\n\n<b>Note:<\/b> By using background colors from the predefined sets, your colors can later be customized from the Theme Designer.","!category":"enum","!type":"sap.m.AvatarColor"},"fitContent":{"!description":"Optimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.","!category":"enum","!type":"Boolean"},"maxColumnSize":{"!description":"Sets the maximum width of the columns. Setting this together with <code>minColumnSize<\/code> will allow the columns to breath between those two values.\n\n<b>Note:<\/b> Will not work in combination with <code>columnSize<\/code>.\n\n<b>Note:<\/b> Not supported for the polyfill for IE.","!category":"enum","!type":"sap.ui.core.CSSSize"},"toggleHeaderOnTitleClick":{"!description":"Determines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<b>Note: <\/b> This property is taken into account only if a non-empty <code>header<\/code> aggregation is provided.","!category":"enum","!type":"Boolean"},"displayShape":{"!description":"Defines the shape of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.m.AvatarShape"},"growingDirection":{"!description":"Defines the direction of the growing feature. If set to <code>Downwards<\/code> the user has to scroll down to load more items or the growing button is displayed at the bottom. If set to <code>Upwards<\/code> the user has to scroll up to load more items or the growing button is displayed at the top.","!category":"enum","!type":"sap.m.ListGrowingDirection"},"noDataText":{"!description":"This text is displayed when the control contains no items.","!category":"enum","!type":"String"},"rootRole":{"!description":"Landmark role of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"secondTitle":{"!description":"Defines the secondary title of the control.","!category":"enum","!type":"String"},"modeAnimationOn":{"!description":"Defines if animations will be shown while switching between modes.","!category":"enum","!type":"Boolean"},"AvatarImageFitType":"sap.f.AvatarImageFitType","width":{"!description":"Sets the width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"contentLabel":{"!description":"Texts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!category":"enum","!type":"String"},"headerRole":{"!description":"Landmark role of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"footerLabel":{"!description":"Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!category":"enum","!type":"String"},"rememberSelections":{"!description":"If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering). <b>Note:<\/b> This feature works only if two-way data binding for the <code>selected<\/code> property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the <code>JSONModel<\/code> is changed.","!category":"enum","!type":"Boolean"},"headerText":{"!description":"Defines the header text that appears in the control. <b>Note:<\/b> If <code>headerToolbar<\/code> aggregation is set, then this property is ignored.","!category":"enum","!type":"String"},"headerPosition":{"!description":"Defines the position of the Card Header.","!category":"enum","!type":"sap.f.cards.HeaderPosition"},"DynamicPageAccessibleLandmarkInfo":"sap.f.DynamicPageAccessibleLandmarkInfo_obj","ProductSwitchItem":"sap.f.ProductSwitchItem_obj","LayoutType":"sap.f.LayoutType","headerDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 No longer has any functionality.<br>Defines the header style of the control. Possible values are <code>Standard<\/code> and <code>Plain<\/code>.","!category":"enum","!type":"sap.m.ListHeaderDesign"},"GridContainerSettings":"sap.f.GridContainerSettings_obj","mode":{"!description":"Defines the mode of the control (e.g. <code>None<\/code>, <code>SingleSelect<\/code>, <code>MultiSelect<\/code>, <code>Delete<\/code>).","!category":"enum","!type":"sap.m.ListMode"},"GridContainerItemLayoutData":"sap.f.GridContainerItemLayoutData_obj","growing":{"!description":"If set to <code>true<\/code>, enables the growing feature of the control to load more items by requesting from the model. <b>Note:<\/b>: This feature only works when an <code>items<\/code> aggregation is bound. Growing must not be used together with two-way binding.","!category":"enum","!type":"Boolean"},"subTitle":{"!description":"Determines the subtitle of the <code>ProductSwitchItem<\/code>.","!category":"enum","!type":"String"},"homeIconTooltip":{"!description":"Defines a custom tooltip for the home icon. If not set, a default tooltip is used.","!category":"enum","!type":"String"},"allowDenseFill":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Boolean"},"AvatarType":"sap.f.AvatarType","DynamicPageTitleArea":"sap.f.DynamicPageTitleArea","FlexibleColumnLayoutSemanticHelper":"sap.f.FlexibleColumnLayoutSemanticHelper_obj","selected":{"!description":"Defines the selected state of the list items. <b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.","!category":"enum","!type":"Boolean"},"AvatarGroupType":"sap.f.AvatarGroupType","growingScrollToLoad":{"!description":"If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control. <b>Note:<\/b> This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code> and only if there is one instance of <code>sap.m.List<\/code> or <code>sap.m.Table<\/code> inside the scrollable scroll container (e.g <code>sap.m.Page<\/code>).","!category":"enum","!type":"Boolean"},"showNoData":{"!description":"Defines whether or not the text specified in the <code>noDataText<\/code> property is displayed.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"initials":{"!description":"Defines the displayed initials.","!category":"enum","!type":"String"},"IShellBar":"sap.f.IShellBar","showNotifications":{"!description":"Determines whether the notifications button is displayed.","!category":"enum","!type":"Boolean"},"notificationsNumber":{"!description":"Defines the displayed number of upcoming notifications.","!category":"enum","!type":"String"},"pinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"DynamicPage":"sap.f.DynamicPage_obj","growingTriggerText":{"!description":"Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle. This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.","!category":"enum","!type":"String"},"showProductSwitcher":{"!description":"Determines whether the product switcher button is displayed.","!category":"enum","!type":"Boolean"},"!helpDescription":"SAPUI5 library with controls specialized for SAP Fiori apps.","maxLength":{"!description":"Determines the maximum number of characters. Value '0' means the feature is switched off.","!category":"enum","!type":"Number"},"AvatarShape":"sap.f.AvatarShape","groupType":{"!description":"Defines the mode of the <code>AvatarGroup<\/code>.","!category":"enum","!type":"sap.f.AvatarGroupType"},"AvatarGroupItem":"sap.f.AvatarGroupItem_obj","cards":"sap.f.cards","customDisplaySize":{"!description":"Specifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"footerText":{"!description":"Defines the footer text that appears in the control.","!category":"enum","!type":"String"},"showMenuButton":{"!description":"Determines whether a hamburger menu button is displayed (as an alternative if the <code>menu<\/code> aggregation is not used).","!category":"enum","!type":"Boolean"},"enableBusyIndicator":{"!description":"When this property is set to <code>true<\/code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished. By default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay<\/code> property.","!category":"enum","!type":"Boolean"},"!category":"namespace","fallbackIcon":{"!description":"Defines the fallback icon displayed in case of wrong image src and no initials set.\n\n<b>Notes:<\/b> <ul> <li>If not set, a default fallback icon is displayed.<\/li> <li>Accepted values are only icons from the SAP icon font.<\/li> <\/ul>","!category":"enum","!type":"String"},"autoFocus":{"!description":"Determines whether the initial focus of the <code>NavContainer<\/code> instances is set automatically on first rendering and after navigating to a new page.\n\nFor more information, see {@link sap.m.NavContainer#autoFocus}.","!category":"enum","!type":"Boolean"},"navigated":{"!description":"The navigated state of the list item.\n\nIf set to <code>true<\/code>, a navigation indicator is displayed at the end of the list item.","!category":"enum","!type":"Boolean"},"title":{"!description":"Defines the main title of the control.","!category":"enum","!type":"String"},"displaySize":{"!description":"Sets a predefined display size of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.m.AvatarSize"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"showUnread":{"!description":"Activates the unread indicator for all items, if set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"highlightText":{"!description":"Defines the semantics of the {@link sap.m.ListItemBase#setHighlight highlight} property for accessibility purposes.","!category":"enum","!type":"String"},"inlineBlockLayout":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Boolean"},"highlight":{"!description":"Defines the highlight state of the list items.\n\nValid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor}.\n\nAccessibility support is provided through the associated {@link sap.m.ListItemBase#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.","!category":"enum","!type":"String"},"AvatarSize":"sap.f.AvatarSize","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"gap":{"!description":"The size of the gap between columns and rows.\n\n<b>Note:<\/b> Use only 'px' or 'rem'. Some features may not work as expected otherwise.","!category":"enum","!type":"sap.ui.core.CSSSize"},"showSearch":{"!description":"Determines whether the search button is displayed.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines the text that is displayed when no value is available. The default placeholder text is the word \"Search\" in the current local language (if supported) or in English.","!category":"enum","!type":"String"},"showSeparators":{"!description":"Defines which item separator style will be used.","!category":"enum","!type":"sap.m.ListSeparators"},"value":{"!description":"Defines the input value.","!category":"enum","!type":"String"},"ICard":"sap.f.ICard","AvatarColor":"sap.f.AvatarColor","ShellBar":"sap.f.ShellBar_obj","src":{"!description":"Defines the icon to be displayed as graphical element within the <code>ProductSwitchItem<\/code>. It can be an image or an icon from the SAP icon font.","!category":"enum","!type":"sap.ui.core.URI"},"swipeDirection":{"!description":"Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent<\/code> aggregation.","!category":"enum","!type":"sap.m.SwipeDirection"},"getGridLayoutConfiguration":{"!description":"Implements IGridConfigurable interface.","!category":"enum","!type":"String"},"inset":{"!description":"Defines the indentation of the container. Setting it to <code>true<\/code> indents the list.","!category":"enum","!type":"Boolean"},"headerLabel":{"!description":"Texts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!category":"enum","!type":"String"},"GridList":"sap.f.GridList_obj","counter":{"!description":"Defines the counter value of the list items.","!category":"enum","!type":"Number"},"rows":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Number"},"showBorder":{"!description":"Determines whether the control is displayed with border.","!category":"enum","!type":"Boolean"},"Avatar":"sap.f.Avatar_obj","primaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Determines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.","!category":"enum","!type":"sap.f.DynamicPageTitleArea"},"target":{"!description":"Specifies a target where the <code>targetSrc<\/code> content must be open.\n\nOptions are the standard values for window.open() supported by browsers: <code>_self<\/code>, <code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively, a frame name can be entered.","!category":"enum","!type":"String"},"layout":{"!description":"Determines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.","!category":"enum","!type":"sap.f.LayoutType"},"targetSrc":{"!description":"Defines the <code>ProductSwitchItem<\/code> target URI. Supports standard hyperlink behavior.","!category":"enum","!type":"sap.ui.core.URI"},"enableSuggestions":{"!description":"If true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused. On a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.","!category":"enum","!type":"Boolean"},"defaultTransitionNameMidColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"FlexibleColumnLayout":"sap.f.FlexibleColumnLayout_obj","columnSize":{"!description":"The width of the columns.\n\n<b>Note:<\/b> Values different than single size in 'px' or 'rem' are not supported for the polyfill for IE.","!category":"enum","!type":"sap.ui.core.CSSSize"},"homeIcon":{"!description":"Defines the URI to the home icon, such as company or product logo.","!category":"enum","!type":"sap.ui.core.URI"},"preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control`s title and header are with height larger than the given threshold.","!category":"enum","!type":"Boolean"},"containerQuery":{"!description":"If set to <code>true<\/code> the current range (large, medium or small) is defined by the size of the container surrounding the <code>GridContainer<\/code>, instead of the device screen size (media Query).","!category":"enum","!type":"Boolean"},"backgroundDesign":{"!description":"Specifies the background color of the content. The visualization of the different options depends on the used theme.","!category":"enum","!type":"sap.m.BackgroundDesign"},"getContext":{"!description":"Gets the available Bar contexts.","!category":"enum","!type":"String"},"showCopilot":{"!description":"Determines whether the SAP CoPilot icon is displayed.","!category":"enum","!type":"Boolean"},"includeItemInSelection":{"!description":"Defines whether the items are selectable by clicking on the item itself (<code>true<\/code>) rather than having to set the selection control first. <b>Note:<\/b> The <code>SingleSelectMaster<\/code> mode also provides this functionality by default.","!category":"enum","!type":"Boolean"}},"sap.f.semantic.SemanticButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticButton"},"sap.f.SearchManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.SearchManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.SearchManager"},"sap.f.semantic.TitleMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.MainAction.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.TitleMainAction"},"sap.f.ProductSwitch":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.f.ProductSwitchItem) -> sap.f.ProductSwitchItem","parameters":{"vItem":"type: int|string|sap.f.ProductSwitchItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.ProductSwitch.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.f.ProductSwitch"},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.f.ProductSwitch<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.ProductSwitch<\/code> itself.\n\nFires when an unselected item is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.ProductSwitch","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.ProductSwitch<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.f.ProductSwitchItem]"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.ProductSwitch","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.f.ProductSwitch<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.ProductSwitch","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.f.ProductSwitch with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.ProductSwitchItem) -> sap.f.ProductSwitch","parameters":{"oItem":"type: sap.f.ProductSwitchItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\n<code>ProductSwitch<\/code> content.","!static":false,"!category":"function","!type":"fn() -> [sap.f.ProductSwitchItem]"},"!constructorDescription":"Constructor for a new <code>ProductSwitch<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.f.ProductSwitchItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.f.ProductSwitchItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSelectedItem":{"!description":"Sets the <code>selectedItem<\/code> association.","!static":false,"!category":"function","!type":"fn(vItem: String | sap.f.ProductSwitchItem | null) -> sap.f.ProductSwitch","parameters":{"vItem":"type: string|sap.f.ProductSwitchItem|null, description: New value for the <code>selectedItem<\/code> association. If an ID of a <code>sap.f.ProductSwitchItem<\/code> instance is given, the item with this ID becomes the <code>selectedItem<\/code> association. Alternatively, a <code>sap.f.ProductSwitchItem<\/code> instance may be given or <code>null<\/code> to clear the selection."}},"!module":"sap/f/ProductSwitch","indexOfItem":{"!description":"Checks for the provided <code>sap.f.ProductSwitchItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.ProductSwitchItem) -> Number","parameters":{"oItem":"type: sap.f.ProductSwitchItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.f.ProductSwitchItem, iIndex: Number) -> sap.f.ProductSwitch","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.f.ProductSwitchItem, description: The item to insert; if empty, nothing is inserted"}},"getSelectedItem":{"!description":"ID of the element which is the current target of the association {@link #getSelectedItem selectedItem}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"}},"sap.f.semantic.MessagesIndicator":{"!description":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MessagesIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MessagesIndicator<\/code>.","!module":"sap/f/semantic/MessagesIndicator","!helpDescription":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.AvatarImageFitType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.AvatarImageFitType} instead.<br>Types of image size and position that determine how an image fits in the {@link sap.f.Avatar} control area.","!module":"sap/f/library","!category":"static class"},"sap.f.semantic.SemanticButton":{"!description":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction}, {@link sap.f.semantic.CloseAction CloseAction}, etc.","getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.f.semantic.SemanticControl","!category":"class","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.semantic.SemanticButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.semantic.SemanticButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDetermines whether the <code>SemanticButton<\/code> is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.f.semantic.SemanticButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>SemanticButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticControl#constructor sap.f.semantic.SemanticControl}\ncan be used as well.","!module":"sap/f/semantic/SemanticButton","!helpDescription":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction}, {@link sap.f.semantic.CloseAction CloseAction}, etc.","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDetermines whether the <code>SemanticButton<\/code> is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.semantic.SemanticButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.semantic.SemanticButton<\/code> itself.\n\nFired when the user selects the <code>SemanticButton<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.semantic.SemanticButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.f.semantic.DeleteAction":{"!description":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DeleteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DeleteAction<\/code>.","!module":"sap/f/semantic/DeleteAction","!helpDescription":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SemanticControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticControl"},"sap.f.AvatarShape":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 Use the {@link sap.m.AvatarShape} instead.<br>Types of shape for the {@link sap.f.Avatar} control.","!module":"sap/f/library","!category":"static class"},"sap.f.cards.NumericSideIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.cards.NumericSideIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.cards.NumericSideIndicator"},"sap":{"sap":"sap","f":"sap.f","!category":"namespace"},"sap.f.routing.Router":{"!description":"The <code>sap.f.routing.Router<\/code> class is intended to be used with <code>{@link sap.f.FlexibleColumnLayout}<\/code> as a root control.\n\nThe difference to the <code>{@link sap.ui.core.routing.Router}<\/code> are the <code>viewLevel<\/code>, <code>transition<\/code>, and <code>transitionParameters<\/code> properties that you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it is applied to the root control.\n\nSee <code>{@link sap.ui.core.routing.Router}<\/code> for the constructor arguments.","extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Router.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>sap.f.routing.Router<\/code>.","!module":"sap/f/routing/Router","!helpDescription":"The <code>sap.f.routing.Router<\/code> class is intended to be used with <code>{@link sap.f.FlexibleColumnLayout}<\/code> as a root control.\n\nThe difference to the <code>{@link sap.ui.core.routing.Router}<\/code> are the <code>viewLevel<\/code>, <code>transition<\/code>, and <code>transitionParameters<\/code> properties that you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it is applied to the root control.\n\nSee <code>{@link sap.ui.core.routing.Router}<\/code> for the constructor arguments.","!proto":"sap.ui.core.routing.Router","!category":"class","getTargetHandler":{"!description":"Returns the <code>TargetHandler<\/code> instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic.MainAction":{"!description":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/MainAction","!helpDescription":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>MainAction<\/code> text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>MainAction<\/code> text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.MainAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.DynamicPageAccessibleLandmarkInfo":{"!description":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.DynamicPage<\/code> control.\n\nThese landmarks are used by assistive technologies (such as screen readers) to provide a meaningful page overview.","getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageAccessibleLandmarkInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getContentLabel":{"!description":"Gets current value of property {@link #getContentLabel contentLabel}.\n\nTexts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!static":false,"!category":"function","!type":"fn() -> String"},"setFooterRole":{"!description":"Sets a new value for property {@link #getFooterRole footerRole}.\n\nLandmark role of the footer container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sFooterRole: sap.ui.core.AccessibleLandmarkRole) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sFooterRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>footerRole<\/code>"}},"setContentRole":{"!description":"Sets a new value for property {@link #getContentRole contentRole}.\n\nLandmark role of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sContentRole: sap.ui.core.AccessibleLandmarkRole) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sContentRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>contentRole<\/code>"}},"setRootRole":{"!description":"Sets a new value for property {@link #getRootRole rootRole}.\n\nLandmark role of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sRootRole: sap.ui.core.AccessibleLandmarkRole) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sRootRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>rootRole<\/code>"}},"setContentLabel":{"!description":"Sets a new value for property {@link #getContentLabel contentLabel}.\n\nTexts which describe the landmark of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentLabel: String) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sContentLabel":"type: string, description: New value for property <code>contentLabel<\/code>"}},"getHeaderLabel":{"!description":"Gets current value of property {@link #getHeaderLabel headerLabel}.\n\nTexts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderRole":{"!description":"Gets current value of property {@link #getHeaderRole headerRole}.\n\nLandmark role of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"setHeaderRole":{"!description":"Sets a new value for property {@link #getHeaderRole headerRole}.\n\nLandmark role of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderRole: sap.ui.core.AccessibleLandmarkRole) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sHeaderRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>headerRole<\/code>"}},"!proto":"sap.ui.core.Element","getRootRole":{"!description":"Gets current value of property {@link #getRootRole rootRole}.\n\nLandmark role of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"!category":"class","getFooterRole":{"!description":"Gets current value of property {@link #getFooterRole footerRole}.\n\nLandmark role of the footer container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"setRootLabel":{"!description":"Sets a new value for property {@link #getRootLabel rootLabel}.\n\nTexts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRootLabel: String) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sRootLabel":"type: string, description: New value for property <code>rootLabel<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageAccessibleLandmarkInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>sap.f.DynamicPageAccessibleLandmarkInfo<\/code> element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootRole rootRole} : sap.ui.core.AccessibleLandmarkRole (default: None)<\/li>\n<li>{@link #getRootLabel rootLabel} : string<\/li>\n<li>{@link #getContentRole contentRole} : sap.ui.core.AccessibleLandmarkRole (default: None)<\/li>\n<li>{@link #getContentLabel contentLabel} : string<\/li>\n<li>{@link #getHeaderRole headerRole} : sap.ui.core.AccessibleLandmarkRole (default: None)<\/li>\n<li>{@link #getHeaderLabel headerLabel} : string<\/li>\n<li>{@link #getFooterRole footerRole} : sap.ui.core.AccessibleLandmarkRole (default: None)<\/li>\n<li>{@link #getFooterLabel footerLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/f/DynamicPageAccessibleLandmarkInfo","!helpDescription":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.f.DynamicPage<\/code> control.\n\nThese landmarks are used by assistive technologies (such as screen readers) to provide a meaningful page overview.","setFooterLabel":{"!description":"Sets a new value for property {@link #getFooterLabel footerLabel}.\n\nTexts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFooterLabel: String) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sFooterLabel":"type: string, description: New value for property <code>footerLabel<\/code>"}},"getRootLabel":{"!description":"Gets current value of property {@link #getRootLabel rootLabel}.\n\nTexts which describe the landmark of the root container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!static":false,"!category":"function","!type":"fn() -> String"},"getContentRole":{"!description":"Gets current value of property {@link #getContentRole contentRole}.\n\nLandmark role of the content container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"setHeaderLabel":{"!description":"Sets a new value for property {@link #getHeaderLabel headerLabel}.\n\nTexts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderLabel: String) -> sap.f.DynamicPageAccessibleLandmarkInfo","parameters":{"sHeaderLabel":"type: string, description: New value for property <code>headerLabel<\/code>"}},"getFooterLabel":{"!description":"Gets current value of property {@link #getFooterLabel footerLabel}.\n\nTexts which describe the landmark of the header container of the corresponding <code>sap.f.DynamicPage<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), no label is set.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.f.semantic.FooterMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.MainAction.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FooterMainAction"},"sap.f.semantic.FlagAction":{"!description":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FlagAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FlagAction<\/code>.","!module":"sap/f/semantic/FlagAction","!helpDescription":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticToggleButton","!category":"class"},"sap.f.FlexibleColumnLayoutSemanticHelper":{"!description":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods: <li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column, based on the current control state (number and visibility of columns, layout, etc..)<\/li> <li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the application should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons if the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","isReady":{"!description":"Abstract wrapper for {@link sap.f.FlexibleColumnLayout#isDOMReady}. Returns <code>true<\/code> if criteria are met for the APIs in this helper to be used.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.base.Object","getNextUIState":{"!description":"Returns an object, describing the state that the control will have after navigating to a different view level.\n\nAbout the format of return value, see: {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState}","!static":false,"!category":"function","!type":"fn(iNextLevel: Number) -> Object","parameters":{"iNextLevel":"type: int, description: the view level that should be represented. 0 means initial (master only), 1 - master-detail, 2 - master-detail-detail, 3 and above - subsequent views"}},"whenDOMReady":{"!description":"Returns promise which can be used to find out when the internal <code>FlexibleColumnLayout<\/code> is rendered. This is needed because methods in <code>FlexibleColumnLayout<\/code> rely on the control being rendered.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!category":"class","getDefaultLayouts":{"!description":"Returns the default layout types for the different numbers of columns.\n\n<ul>The returned object has the following fields: <li>defaultLayoutType - the layout that will be suggested by default when only 1 column needs to be shown<\/li> <li>defaultTwoColumnLayoutType - the layout that will be suggested by default when 2 columns have to be shown side by side<\/li> <li>defaultThreeColumnLayoutType - the layout that will be suggested by default when 3 columns have to be shown side by side<\/li><\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"},"whenReady":{"!description":"Returns promise which can be used to find out when internal criteria for this helper's API reliability are met.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getInstanceFor":{"!description":"Returns an instance of the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class for a given <code>sap.f.FlexibleColumnLayout<\/code> object.","!static":true,"!category":"function","!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings?: Object) -> sap.f.FlexibleColumnLayoutSemanticHelper","parameters":{"oFlexibleColumnLayout":"type: sap.f.FlexibleColumnLayout, description: The <code>sap.f.FlexibleColumnLayout<\/code> object to get a semantic helper instance for","oSettings":"type: object, description: An optional settings object to be used when creating the instance. <b>Note:<\/b> will be considered only for the first <code>getInstanceFor<\/code> call for the given <code>sap.f.FlexibleColumnLayout<\/code> object."}},"!constructorDescription":"Constructor for an sap.f.FlexibleColumnLayoutSemanticHelper.","!module":"sap/f/FlexibleColumnLayoutSemanticHelper","!helpDescription":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods: <li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column, based on the current control state (number and visibility of columns, layout, etc..)<\/li> <li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the application should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons if the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","isDOMReady":{"!description":"Returns <code>true<\/code> if internal <code>FlexibleColumnLayout<\/code> reference is rendered in the DOM tree.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentUIState":{"!description":"Returns an object, describing the current state of the control and the expected action buttons for each column.\n\n<ul>The returned object has the following structure: <li>layout - the value of the <code>layout<\/code> property<\/li> <li>maxColumnsCount - the maximum number of columns that can be displayed at once based on the control width. See {@link sap.f.FlexibleColumnLayout#getMaxColumnsCount}<\/li> <li>columnsSizes - an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the relative percentage sizes of the three columns as integers<\/li> <li>columnsVisibility - an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the visibility of the three columns<\/li> <li>isFullScreen - <code>true<\/code> if only one column is visible at the moment, <code>false<\/code> otherwise <b>Note:<\/b> This may be due to small screen size (phone) or due to a layout, for which a single column takes up the whole width<\/li> <li>isLogicallyFullScreen - <code>true<\/code> if the current <code>layout<\/code> is one of the following: <code>sap.f.LayoutType.OneColumn, sap.f.LayoutType.MidColumnFullScreen, sap.f.LayoutType.EndColumnFullScreen<\/code>, <code>false<\/code> otherwise <b>Note:<\/b> While <code>isFullScreen<\/code> can be <code>true<\/code> for any layout, due to small screen size, <code>isLogicallyFullScreen<\/code> will only be <code>true<\/code> for the layout values, listed above.<\/li> <li>actionButtonsInfo - an object with fields <code>midColumn, endColumn<\/code>, each containing an object, telling whether action buttons should be shown in the <code>mid<\/code> and <code>end<\/code> columns, and what value of the <code>layout<\/code> property should be set upon clicking these buttons. Each of these objects has the following fields: <code>closeColumn, fullScreen, exitFullScreen<\/code>. If <code>null<\/code>, then the respective action button should not be shown, otherwise provides the value of <code>layout<\/code> property for the action button.<\/li><\/ul>\n\n<b>Note:<\/b> This method relies on the internal <code>FlexibleColumnLayout<\/code> reference to be rendered in the DOM tree. For convenience, use methods {@link sap.f.FlexibleColumnLayout#isDOMReady} and {@link sap.f.FlexibleColumnLayout#whenDOMReady}.\n\nExample value:\n\n<pre>\n <code>\n {\n\t   \"layout\":\"ThreeColumnsMidExpanded\",\n\t   \"maxColumnsCount\":3,\n\t   \"columnsSizes\":{\n\t\t  \"beginColumn\":25,\n\t\t  \"midColumn\":50,\n\t\t  \"endColumn\":25\n\t   },\n\t   \"columnsVisibility\":{\n\t\t  \"beginColumn\":true,\n\t\t  \"midColumn\":true,\n\t\t  \"endColumn\":true\n\t   },\n\t   \"isFullScreen\":false,\n\t   \"isLogicallyFullScreen\":false,\n\t   \"actionButtonsInfo\":{\n\t\t  \"midColumn\":{\n\t\t\t \"fullScreen\":null,\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":null\n\t\t  },\n\t\t  \"endColumn\":{\n\t\t\t \"fullScreen\":\"EndColumnFullScreen\",\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":\"TwoColumnsBeginExpanded\"\n\t\t  }\n\t   }\n\t}\n <\/code>\n <\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.f.LayoutType":{"!description":"Layouts, representing the number of columns to be displayed and their relative widths for a {@link sap.f.FlexibleColumnLayout} control.\n\nEach layout has a predefined ratio for the three columns, depending on device size. Based on the device and layout, some columns are hidden. For more information, refer to the ratios (in %) for each value, listed below: (dash \"-\" means non-accessible columns).\n\n<b>Note:<\/b> Please note that on a phone device, due to the limited screen size, only one column can be displayed at a time. For all two-column layouts, this column is the <code>Mid<\/code> column, and for all three-column layouts - the <code>End<\/code> column, even though the respective column may be hidden on desktop and tablet for that particular layout. Therefore some of the names (such as <code>ThreeColumnsMidExpandedEndHidden<\/code> for example) are representative of the desktop scenario only.\n\nFor more information, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.","ThreeColumnsMidExpanded":{"!description":"Desktop: 25/50/25 Begin, Mid (expanded) and End columns are displayed\n\nTablet: 0/67/33 Mid (expanded) and End columns are displayed, Begin is accessible by a layout arrow\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail.","!category":"enum","!type":"String"},"!module":"sap/f/library","OneColumn":{"!description":"Desktop: 100/-/- only the Begin column is displayed\n\nTablet: 100/-/- only the Begin column is displayed\n\nPhone: 100/-/- only the Begin column is displayed\n\nUse to start with a master page.","!category":"enum","!type":"String"},"TwoColumnsMidExpanded":{"!description":"Desktop: 33/67/- Begin and Mid (expanded) columns are displayed\n\nTablet: 33/67/- Begin and Mid (expanded) columns are displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the detail page.","!category":"enum","!type":"String"},"MidColumnFullScreen":{"!description":"Desktop: -/100/- only the Mid column is displayed\n\nTablet: -/100/- only the Mid column is displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display a detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"ThreeColumnsEndExpanded":{"!description":"Desktop: 25/25/50 Begin, Mid and End (expanded) columns are displayed\n\nTablet: 0/33/67 Mid and End (expanded) columns are displayed, Begin is accessible by layout arrows\n\nPhone: -/-/100 (only the End column is displayed)\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail.","!category":"enum","!type":"String"},"ThreeColumnsMidExpandedEndHidden":{"!description":"Desktop: 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\n\nTablet: 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the detail. The detail-detail is still loaded and easily accessible with a layout arrow.","!category":"enum","!type":"String"},"!category":"static class","EndColumnFullScreen":{"!description":"Desktop: -/-/100 only the End column is displayed\n\nTablet: -/-/100 only the End column is displayed\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display a detail-detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"TwoColumnsBeginExpanded":{"!description":"Desktop: 67/33/- Begin (expanded) and Mid columns are displayed\n\nTablet: 67/33/- Begin (expanded) and Mid columns are displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the master page.","!category":"enum","!type":"String"},"ThreeColumnsBeginExpandedEndHidden":{"!description":"Desktop: 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\n\nTablet: 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the master. The detail-detail is still loaded and easily accessible with layout arrows.","!category":"enum","!type":"String"}},"sap.f.semantic.ExitFullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ExitFullScreenAction"},"sap.f.routing.Targets":{"!description":"Provides a convenient way for placing views into the correct containers of your app.\n\nThe <code>sap.f<\/code> extension of <code>Targets<\/code> also handles the triggering of page navigation when the target control is an <code>{@link sap.f.FlexibleColumnLayout}<\/code>. Other controls are also allowed, but the extra parameters <code>viewLevel<\/code>, <code>transition<\/code>, and <code>transitionParameters<\/code> are ignored and it behaves as <code>{@link sap.ui.core.routing.Targets}<\/code>.\n\nWhen a target is displayed, dialogs are being closed. To change this, use <code>{@link #getTargetHandler}<\/code> and {@link sap.f.routing.TargetHandler#setCloseDialogs}.","extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Targets.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Targets<\/code> class.","!module":"sap/f/routing/Targets","!helpDescription":"Provides a convenient way for placing views into the correct containers of your app.\n\nThe <code>sap.f<\/code> extension of <code>Targets<\/code> also handles the triggering of page navigation when the target control is an <code>{@link sap.f.FlexibleColumnLayout}<\/code>. Other controls are also allowed, but the extra parameters <code>viewLevel<\/code>, <code>transition<\/code>, and <code>transitionParameters<\/code> are ignored and it behaves as <code>{@link sap.ui.core.routing.Targets}<\/code>.\n\nWhen a target is displayed, dialogs are being closed. To change this, use <code>{@link #getTargetHandler}<\/code> and {@link sap.f.routing.TargetHandler#setCloseDialogs}.","!proto":"sap.ui.core.routing.Targets","!category":"class","getTargetHandler":{"!description":"Returns the <code>TargetHandler<\/code> instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic":{"TitleMainAction":"sap.f.semantic.TitleMainAction_obj","PrintAction":"sap.f.semantic.PrintAction_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"SemanticControl":"sap.f.semantic.SemanticControl_obj","EditAction":"sap.f.semantic.EditAction_obj","FullScreenAction":"sap.f.semantic.FullScreenAction_obj","!category":"namespace","headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.","!category":"enum","!type":"Boolean"},"MainAction":"sap.f.semantic.MainAction_obj","AddAction":"sap.f.semantic.AddAction_obj","enabled":{"!description":"Determines whether the <code>SemanticButton<\/code> is enabled.","!category":"enum","!type":"Boolean"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SendEmailAction":"sap.f.semantic.SendEmailAction_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"NegativeAction":"sap.f.semantic.NegativeAction_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"SemanticButton":"sap.f.semantic.SemanticButton_obj","text":{"!description":"Defines <code>MainAction<\/code> text","!category":"enum","!type":"String"},"FavoriteAction":"sap.f.semantic.FavoriteAction_obj","FlagAction":"sap.f.semantic.FlagAction_obj","SemanticToggleButton":"sap.f.semantic.SemanticToggleButton_obj","SendMessageAction":"sap.f.semantic.SendMessageAction_obj","headerPinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Determines whether the <code>SemanticControl<\/code> is visible.","!category":"enum","!type":"Boolean"},"fitContent":{"!description":"Optimizes <code>SemanticPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>SemanticPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space. Such controls may be {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable} depending on their settings.","!category":"enum","!type":"Boolean"},"CopyAction":"sap.f.semantic.CopyAction_obj","pressed":{"!description":"Defines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).","!category":"enum","!type":"Boolean"},"toggleHeaderOnTitleClick":{"!description":"Determines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.","!category":"enum","!type":"Boolean"},"DiscussInJamAction":"sap.f.semantic.DiscussInJamAction_obj","PositiveAction":"sap.f.semantic.PositiveAction_obj","ShareInJamAction":"sap.f.semantic.ShareInJamAction_obj","titlePrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Please use the <code>titleAreaShrinkRatio<\/code> property instead. The value of <code>titleAreaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>titlePrimaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>titleAreaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>titlePrimaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>titleAreaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Determines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.","!category":"enum","!type":"sap.f.DynamicPageTitleArea"},"ExitFullScreenAction":"sap.f.semantic.ExitFullScreenAction_obj","MessagesIndicator":"sap.f.semantic.MessagesIndicator_obj","FooterMainAction":"sap.f.semantic.FooterMainAction_obj","SemanticPage":"sap.f.semantic.SemanticPage_obj","titleAreaShrinkRatio":{"!description":"Assigns shrinking ratio to the <code>SemanticPage<\/code> title areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will be reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>titlePrimaryArea<\/code> property has no effect.","!category":"enum","!type":"sap.f.DynamicPageTitleShrinkRatio"},"DeleteAction":"sap.f.semantic.DeleteAction_obj","preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.","!category":"enum","!type":"Boolean"},"CloseAction":"sap.f.semantic.CloseAction_obj"},"sap.f.semantic.SendMessageAction":{"!description":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendMessageAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendMessageAction<\/code>.","!module":"sap/f/semantic/SendMessageAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.PositiveAction":{"!description":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PositiveAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PositiveAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/PositiveAction","!helpDescription":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>PositiveAction<\/code> text. <b>Note:<\/b> the default text is \"Accept\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>PositiveAction<\/code> text. <b>Note:<\/b> the default text is \"Accept\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.PositiveAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}}}}