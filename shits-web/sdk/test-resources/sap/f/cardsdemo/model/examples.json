[
	{
		"title": "No layout",
		"description": "The cards are placed in a panel. They just wrap when not enough space. The size is calculated based on verticalSize & horizontalSize and 80px multiplier.",
		"route": "nolayout",
		"usage": "The cards height and width should always be dividable by 80 (e.g. 80, 160, 240, 320 etc...)",
		"group": "Layout Examples"
	},
	{
		"title": "Fit container",
		"description": "The cards fit the whole container allowing it to define the sizes.",
		"route": "splitter",
		"usage": "The cards have no height and width (defined by the container control)",
		"group": "Layout Examples"
	},
	{
		"title": "Flexible height and CSSGrid",
		"description": "A list card configured to automatically adjust its height when more items are added (verticalSize property increases).",
		"route": "flexibleHeight",
		"usage": "The chosen card container is a CSSGrid and flexible height is needed.",
		"group": "Layout Examples"
	},
	{
		"title": "CSSGrid avoid shuffling",
		"description": "A margin is added to avoid differences between L/XL breakpoints. Dimensions of certain cards are changed based on breakpoints to achiev a level of progressive disclosure and avoid shuffling of the cards.",
		"route": "grid",
		"usage": "The chosen card container is a CSSGrid and a stable UI is needed.",
		"group": "Layout Examples"
	},
	{
		"title": "CSSGrid with Z-flow",
		"description": "The cards don't change their dimensions based on breakpoints. They just wrap when not enough space",
		"route": "zflow",
		"usage": "The chosen card container is a CSSGrid and stable UI is NOT needed.",
		"group": "Layout Examples"
	},
	{
		"title": "CSSGrid with FLP config",
		"description": "The CSSGrid is configured without breathing and to work well with GenericTiles",
		"route": "flp",
		"usage": "Breathing is not required and the grid should be configured based on GenericTile size",
		"group": "Layout Examples"
	},
	{
		"title": "CSSGrid Drag and Drop 1",
		"description": "",
		"route": "dnd",
		"usage": "",
		"group": "Layout Examples"
	},
	{
		"title": "CSSGrid Drag and Drop 2",
		"description": "",
		"route": "dnd2",
		"usage": "",
		"group": "Layout Examples"
	},
	{
		"title": "GridContainer Drag and Drop with target position",
		"description": "",
		"route": "dnd3",
		"usage": "",
		"group": "Layout Examples"
	},
	{
		"title": "List Card",
		"description": "Example page for Card of type List",
		"route": "listContent",
		"group": "Card Type Examples"
	},
	{
		"title": "Table Card",
		"description": "Example page for Card of type Table",
		"route": "tableContent",
		"group": "Card Type Examples"
	},
	{
		"title": "Analytical Card",
		"description": "Example page for Card of type Analytical",
		"route": "analyticalContent",
		"group": "Card Type Examples"
	},
	{
		"title": "Object Card",
		"description": "Example page for Card of type Object",
		"route": "objectContent",
		"group": "Card Type Examples"
	},
	{
		"title": "AnalyticsCloud Card",
		"description": "Example page for Card of type AnalyticsCloud. Used for displaying data from Sap Analytics Cloud",
		"route": "analyticsCloudContent",
		"group": "Card Type Examples"
	},
	{
		"title": "Custom Card",
		"description": "Example page for Card of type Custom (Where a ComponentContainer is rendered)",
		"route": "customContent",
		"group": "Card Type Examples"
	},
    {
      "title": "Component Card [EXPERIMENTAL]",
      "description": "Example page for Card of type Component (Where a ComponentContainer is rendered)",
      "route": "componentContent",
      "group": "Card Type Examples"
    },
	{
		"title": "sap.f.Card",
		"description": "Example page for Card of type sap.f.Card",
		"route": "sapfCard",
		"group": "Card Type Examples"
	},
	{
		"title": "Numeric Header",
		"description": "Example page for Card with Numeric Header",
		"route": "numericHeader",
		"group": "Other Card Examples"
	},
	{
		"title": "Manifest initialization",
		"description": "Three types of manifest initializations are possible",
		"route": "manifest",
		"group": "Other Card Examples"
	},
	{
		"title": "Grid Container",
		"description": "Grid Container",
		"route": "gridContainer",
		"group": "Other Card Examples"
	},
	{
		"title": "Grid Container, containerQuery=true",
		"description": "Grid Container, containerQuery=true",
		"route": "gridContainerQuery",
		"group": "Other Card Examples"
	},
	{
		"title": "Navigation Action",
		"description": "Navigation action examples",
		"route": "navigationService",
		"group": "Other Card Examples"
	},
	{
		"title": "Data Service",
		"description": "Examples for FLP data scenarios",
		"route": "dataService",
		"group": "Other Card Examples"
	},
	{
		"title": "Loading behavior",
		"description": "Busy indicators and heights examples",
		"route": "delayedLoading",
		"group": "Other Card Examples"
	},
	{
		"title": "No header / No content",
		"description": "Examples of cards with no header or no content provided",
		"route": "noHeaderNoContent",
		"group": "Other Card Examples"
	},
	{
		"title": "Min height of the card content",
		"description": "Examples of cards with no height provided (default value) or with specified height",
		"route": "minHeight",
		"group": "Other Card Examples"
	},
	{
		"title": "TimelineContent Card",
		"description": "Example  POC TimelineContent",
		"route": "timelineContent",
		"group": "Card Type Examples"
	},
	{
		"title": "Active/Inactive data mode",
		"description": "Example with 'enabled' property of the Card",
		"route": "dataMode",
		"group": "Other Card Examples"
	},
	{
		"title": "Translations & Header Count",
		"description": "Example with card translations and count binding",
		"route": "translation",
		"group": "Other Card Examples"
	},
	{
		"title": "Card bundles",
		"description": "Example with card bundles with static resources and baseURL usage",
		"route": "bundle",
		"group": "Other Card Examples"
	},
	{
		"title": "Manifest Ready Event",
		"description": "Example with card bundles with static resources and baseURL usage",
		"route": "manifestReady",
		"group": "Other Card Examples"
	}
]