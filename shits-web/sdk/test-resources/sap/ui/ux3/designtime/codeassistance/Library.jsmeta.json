{"!name":"sap.ui.ux3","!version":"1.20.0","!define":{"sap.ui.ux3.ShellHeaderType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Available shell header display types.","BrandOnly":{"!description":"Only the branding area is visible. Top-level navigation bar, header items, title and icon are not shown.","!category":"enum","!type":"String"},"SlimNavigation":{"!description":"Like the Standard Area but with a leaner top-level navigation bar.","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","NoNavigation":{"!description":"Like the Standard Area but without top-level navigation bar.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"The standard Shell header.","!category":"enum","!type":"String"}},"sap.ui.ux3.FeederType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Type of a Feeder.","Comment":{"!description":"comment feeder (small)","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","Medium":{"!description":"medium feeder","!category":"enum","!type":"String"},"Large":{"!description":"large Feeder","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.ux3.Overlay":{"fireClose":{"!description":"Fires event {@link #event:close close} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireOpen":{"!description":"Fires event {@link #event:open open} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Overlay","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:open open} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Overlay<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachOpenNew":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:openNew openNew} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the 'Open' button of the Overlay is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Overlay<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","setOpenButtonVisible":{"!description":"Sets a new value for property {@link #getOpenButtonVisible openButtonVisible}.\n\nDefines whether the 'Open' button shall be visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bOpenButtonVisible: Boolean) -> sap.ui.ux3.Overlay","parameters":{"bOpenButtonVisible":"type: boolean, description: New value for property <code>openButtonVisible<\/code>"}},"setCloseButtonVisible":{"!description":"Sets a new value for property {@link #getCloseButtonVisible closeButtonVisible}.\n\nDefines whether the 'Close' button shall be visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCloseButtonVisible: Boolean) -> sap.ui.ux3.Overlay","parameters":{"bCloseButtonVisible":"type: boolean, description: New value for property <code>closeButtonVisible<\/code>"}},"!constructorDescription":"Constructor for a new Overlay.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOpenButtonVisible openButtonVisible} : boolean (default: true)<\/li>\n<li>{@link #getCloseButtonVisible closeButtonVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:openNew openNew} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:close close} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay starts closing.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Overlay<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpenNew":{"!description":"Fires event {@link #event:openNew openNew} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Overlay","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"close":{"!description":"Closes the Overlay.","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Overlay Control","detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:close close} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Overlay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getOpenButtonVisible":{"!description":"Gets current value of property {@link #getOpenButtonVisible openButtonVisible}.\n\nDefines whether the 'Open' button shall be visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCloseButtonVisible":{"!description":"Gets current value of property {@link #getCloseButtonVisible closeButtonVisible}.\n\nDefines whether the 'Close' button shall be visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Overlay<\/code> itself.\n\nEvent is fired when the Overlay is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Overlay<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Overlay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"Checks whether Overlay is open.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/ux3/Overlay","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Overlay Control","detachOpenNew":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:openNew openNew} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:open open} event of this <code>sap.ui.ux3.Overlay<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Overlay","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the Overlay.","!static":false,"!category":"function","!type":"fn(initialFocusId: String)","parameters":{"initialFocusId":"type: string, description: ID of the control that gets focused when the overlay is openend"}}},"sap.ui.ux3.DataSetView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Marker interface for controls which are suitable as view rendering for a DataSet.","!module":"sap/ui/ux3/library","!category":"static class"},"sap.ui.ux3.Exact_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Exact with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Exact"},"sap.ui.ux3.ThingViewerHeaderType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Available ThingViewer header display types.","Horizontal":{"!description":"The header content is displayed horizontally above the facet content","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","!category":"static class","Standard":{"!description":"The standard ThingViewer header.","!category":"enum","!type":"String"}},"sap.ui.ux3.FacetFilterList":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","parameters":{"vItem":"type: int|string|sap.ui.core.ListItem, description: The item to remove or its index or id"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FacetFilterList","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.ux3.FacetFilterList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FacetFilterList<\/code> itself.\n\nOn Select event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FacetFilterList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FacetFilterList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FacetFilterList"},"setShowCounter":{"!description":"Sets a new value for property {@link #getShowCounter showCounter}.\n\nSpecifies whether the counter for all entries is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCounter: Boolean) -> sap.ui.ux3.FacetFilterList","parameters":{"bShowCounter":"type: boolean, description: New value for property <code>showCounter<\/code>"}},"!category":"class","addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.ux3.FacetFilterList","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe filter values that are presented as a list.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"!constructorDescription":"Constructor for a new FacetFilterList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<li>{@link #getDisplaySecondaryValues displaySecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getSelectedKeys selectedKeys} : string[]<\/li>\n<li>{@link #getShowCounter showCounter} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.ListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of this list.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item whose index is looked for"}},"setSelectedKeys":{"!description":"Sets a new value for property {@link #getSelectedKeys selectedKeys}.\n\nArray of type string containing the selected keys.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedKeys: [String]) -> sap.ui.ux3.FacetFilterList","parameters":{"sSelectedKeys":"type: string[], description: New value for property <code>selectedKeys<\/code>"}},"getShowCounter":{"!description":"Gets current value of property {@link #getShowCounter showCounter}.\n\nSpecifies whether the counter for all entries is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMultiSelect":{"!description":"Gets current value of property {@link #getMultiSelect multiSelect}.\n\nSpecifies whether multiple or single selection is used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.FacetFilter}<br>List to be used with the FacetFilter control. The control is not intended to be used stand alone.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FacetFilterList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setDisplaySecondaryValues":{"!description":"Sets a new value for property {@link #getDisplaySecondaryValues displaySecondaryValues}.\n\nSpecifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.ux3.FacetFilterList","parameters":{"bDisplaySecondaryValues":"type: boolean, description: New value for property <code>displaySecondaryValues<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of this list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.FacetFilterList","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilterList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/ux3/FacetFilterList","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.FacetFilter}<br>List to be used with the FacetFilter control. The control is not intended to be used stand alone.","setMultiSelect":{"!description":"Sets a new value for property {@link #getMultiSelect multiSelect}.\n\nSpecifies whether multiple or single selection is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiSelect: Boolean) -> sap.ui.ux3.FacetFilterList","parameters":{"bMultiSelect":"type: boolean, description: New value for property <code>multiSelect<\/code>"}},"getDisplaySecondaryValues":{"!description":"Gets current value of property {@link #getDisplaySecondaryValues displaySecondaryValues}.\n\nSpecifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.ux3.FacetFilterList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FacetFilterList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.ux3.FacetFilterList","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.ListItem, description: The item to insert; if empty, nothing is inserted"}},"getSelectedKeys":{"!description":"Gets current value of property {@link #getSelectedKeys selectedKeys}.\n\nArray of type string containing the selected keys.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ui.ux3.Shell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Shell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Shell"},"sap.ui.ux3.FacetFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.FacetFilter}<br>FacetFilter Control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FacetFilter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisibleItemCountMode":{"!description":"Gets current value of property {@link #getVisibleItemCountMode visibleItemCountMode}.\n\nIf the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.\n\nDefault value is <code>Fixed<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.VisibleItemCountMode"},"insertList":{"!description":"Inserts a list into the aggregation {@link #getLists lists}.","!static":false,"!category":"function","!type":"fn(oList: sap.ui.ux3.FacetFilterList, iIndex: Number) -> sap.ui.ux3.FacetFilter","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the list should be inserted at; for a negative value of <code>iIndex<\/code>, the list is inserted at position 0; for a value greater than the current size of the aggregation, the list is inserted at the last position","oList":"type: sap.ui.ux3.FacetFilterList, description: The list to insert; if empty, nothing is inserted"}},"!proto":"sap.ui.core.Control","destroyLists":{"!description":"Destroys all the lists in the aggregation {@link #getLists lists}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FacetFilter"},"!category":"class","indexOfList":{"!description":"Checks for the provided <code>sap.ui.ux3.FacetFilterList<\/code> in the aggregation {@link #getLists lists}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oList: sap.ui.ux3.FacetFilterList) -> Number","parameters":{"oList":"type: sap.ui.ux3.FacetFilterList, description: The list whose index is looked for"}},"removeAllLists":{"!description":"Removes all the controls from the aggregation {@link #getLists lists}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FacetFilterList]"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new FacetFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleItemCountMode visibleItemCountMode} : sap.ui.ux3.VisibleItemCountMode (default: Fixed)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLists lists} : sap.ui.ux3.FacetFilterList[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/ux3/FacetFilter","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.FacetFilter}<br>FacetFilter Control.","removeList":{"!description":"Removes a list from the aggregation {@link #getLists lists}.","!static":false,"!category":"function","!type":"fn(vList: Number | String | sap.ui.ux3.FacetFilterList) -> sap.ui.ux3.FacetFilterList","parameters":{"vList":"type: int|string|sap.ui.ux3.FacetFilterList, description: The list to remove or its index or id"}},"addList":{"!description":"Adds some list to the aggregation {@link #getLists lists}.","!static":false,"!category":"function","!type":"fn(oList: sap.ui.ux3.FacetFilterList) -> sap.ui.ux3.FacetFilter","parameters":{"oList":"type: sap.ui.ux3.FacetFilterList, description: The list to add; if empty, nothing is inserted"}},"setVisibleItemCountMode":{"!description":"Sets a new value for property {@link #getVisibleItemCountMode visibleItemCountMode}.\n\nIf the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Fixed<\/code>.","!static":false,"!category":"function","!type":"fn(sVisibleItemCountMode: sap.ui.ux3.VisibleItemCountMode) -> sap.ui.ux3.FacetFilter","parameters":{"sVisibleItemCountMode":"type: sap.ui.ux3.VisibleItemCountMode, description: New value for property <code>visibleItemCountMode<\/code>"}},"getLists":{"!description":"Gets content of aggregation {@link #getLists lists}.\n\nFacet Filter list represents the list of the filter values and the title of this list.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FacetFilterList]"}},"sap.ui.ux3.ExactBrowser":{"detachAttributeSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attributeSelected attributeSelected} event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","getEnableListClose":{"!description":"Gets current value of property {@link #getEnableListClose enableListClose}.\n\nEnables the close icons of the displayed lists.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ExactBrowser<\/code> itself.\n\nEvent is fired when an attribute is selected or unselected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ExactBrowser<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getEnableSave":{"!description":"Gets current value of property {@link #getEnableSave enableSave}.\n\nWhether the save button should be available in the header area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFollowUpControl":{"!description":"Sets the associated {@link #getFollowUpControl followUpControl}.","!static":false,"!category":"function","!type":"fn(oFollowUpControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.ux3.ExactBrowser","parameters":{"oFollowUpControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this followUpControl association; alternatively, an element instance may be given"}},"attachAttributeSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attributeSelected attributeSelected} event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ExactBrowser<\/code> itself.\n\nEvent is fired when an attribute is selected or unselected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ExactBrowser<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyOptionsMenu":{"!description":"Destroys the optionsMenu in the aggregation {@link #getOptionsMenu optionsMenu}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactBrowser"},"!constructorDescription":"Constructor for a new ExactBrowser.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getHeaderTitle headerTitle} : string<\/li>\n<li>{@link #getTopListOrder topListOrder} : sap.ui.ux3.ExactOrder (default: Select)<\/li>\n<li>{@link #getEnableListClose enableListClose} : boolean (default: false)<\/li>\n<li>{@link #getListHeight listHeight} : int (default: 290)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: false)<\/li>\n<li>{@link #getShowTopList showTopList} : boolean (default: true)<\/li>\n<li>{@link #getEnableReset enableReset} : boolean (default: true)<\/li>\n<li>{@link #getEnableSave enableSave} : boolean (default: false)<\/li>\n<li>{@link #getTopListWidth topListWidth} : int (default: 168)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.ui.ux3.ExactAttribute[] (default)<\/li>\n<li>{@link #getOptionsMenu optionsMenu} : sap.ui.commons.Menu<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFollowUpControl followUpControl} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:attributeSelected attributeSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text in the list area of the Exact Browser. The title is not shown when the property showTopList is set to false.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute whose index is looked for"}},"fireAttributeSelected":{"!description":"Fires event {@link #event:attributeSelected attributeSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnableReset":{"!description":"Sets a new value for property {@link #getEnableReset enableReset}.\n\nWhether the reset functionality should be available in the header area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableReset: Boolean) -> sap.ui.ux3.ExactBrowser","parameters":{"bEnableReset":"type: boolean, description: New value for property <code>enableReset<\/code>"}},"removeAttribute":{"!description":"Removes a attribute from the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","parameters":{"vAttribute":"type: int|string|sap.ui.ux3.ExactAttribute, description: The attribute to remove or its index or id"}},"setShowHeader":{"!description":"Sets a new value for property {@link #getShowHeader showHeader}.\n\nWhether the header area of the ExactBrowser should be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.ui.ux3.ExactBrowser","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"getHeaderTitle":{"!description":"Gets current value of property {@link #getHeaderTitle headerTitle}.\n\nTitle text in the header of the Exact Browser.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnableSave":{"!description":"Sets a new value for property {@link #getEnableSave enableSave}.\n\nWhether the save button should be available in the header area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableSave: Boolean) -> sap.ui.ux3.ExactBrowser","parameters":{"bEnableSave":"type: boolean, description: New value for property <code>enableSave<\/code>"}},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactBrowser"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Attribute browse area used within the Exact pattern. The main benefit of this control is the high flexibility when large data amounts shall be displayed in the form of structured data sets with a high or low interdependency level. From lists - which can be nested according to the defined attributes - the user can choose entries and thereby trigger the display of further information, depending on the chosen entry/entries (multiple selection supported).","removeAllAttributes":{"!description":"Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactBrowser.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTopListOrder":{"!description":"Sets a new value for property {@link #getTopListOrder topListOrder}.\n\nThe order how the sublists of the top level list should be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Select<\/code>.","!static":false,"!category":"function","!type":"fn(sTopListOrder: sap.ui.ux3.ExactOrder) -> sap.ui.ux3.ExactBrowser","parameters":{"sTopListOrder":"type: sap.ui.ux3.ExactOrder, description: New value for property <code>topListOrder<\/code>"}},"getAttributes":{"!description":"Gets content of aggregation {@link #getAttributes attributes}.\n\nThe attributes which shall be available.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"getShowTopList":{"!description":"Gets current value of property {@link #getShowTopList showTopList}.\n\nWhether the top list of the ExactBrowser should be shown. When the property is set to false the application must ensure to select top level attributes appropriately.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getOptionsMenu":{"!description":"Gets content of aggregation {@link #getOptionsMenu optionsMenu}.\n\nMenu with options. The menu can not used when the property showTopList is set to false.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Menu"},"getTopListOrder":{"!description":"Gets current value of property {@link #getTopListOrder topListOrder}.\n\nThe order how the sublists of the top level list should be displayed.\n\nDefault value is <code>Select<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactOrder"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text in the list area of the Exact Browser. The title is not shown when the property showTopList is set to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.ExactBrowser","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setEnableListClose":{"!description":"Sets a new value for property {@link #getEnableListClose enableListClose}.\n\nEnables the close icons of the displayed lists.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableListClose: Boolean) -> sap.ui.ux3.ExactBrowser","parameters":{"bEnableListClose":"type: boolean, description: New value for property <code>enableListClose<\/code>"}},"getTopListWidth":{"!description":"Gets current value of property {@link #getTopListWidth topListWidth}.\n\nSpecifies the width of the top list in pixels. The value must be between 70 and 500.\n\nDefault value is <code>168<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getShowHeader":{"!description":"Gets current value of property {@link #getShowHeader showHeader}.\n\nWhether the header area of the ExactBrowser should be shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setListHeight":{"!description":"Sets a new value for property {@link #getListHeight listHeight}.\n\nThe height of the list area in px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>290<\/code>.","!static":false,"!category":"function","!type":"fn(iListHeight: Number) -> sap.ui.ux3.ExactBrowser","parameters":{"iListHeight":"type: int, description: New value for property <code>listHeight<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactBrowser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getFollowUpControl":{"!description":"ID of the element which is the current target of the association {@link #getFollowUpControl followUpControl}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"!module":"sap/ui/ux3/ExactBrowser","addAttribute":{"!description":"Adds some attribute to the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactBrowser","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to add; if empty, nothing is inserted"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Attribute browse area used within the Exact pattern. The main benefit of this control is the high flexibility when large data amounts shall be displayed in the form of structured data sets with a high or low interdependency level. From lists - which can be nested according to the defined attributes - the user can choose entries and thereby trigger the display of further information, depending on the chosen entry/entries (multiple selection supported).","detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.ux3.ExactBrowser<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertAttribute":{"!description":"Inserts a attribute into the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.ExactBrowser","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attribute should be inserted at; for a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"}},"fireSave":{"!description":"Fires event {@link #event:save save} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ExactBrowser","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEnableReset":{"!description":"Gets current value of property {@link #getEnableReset enableReset}.\n\nWhether the reset functionality should be available in the header area.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"reset":{"!description":"Deselects all currently selected attributes and closes all attribute lists.","!static":false,"!category":"function","!type":"fn()"},"setHeaderTitle":{"!description":"Sets a new value for property {@link #getHeaderTitle headerTitle}.\n\nTitle text in the header of the Exact Browser.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderTitle: String) -> sap.ui.ux3.ExactBrowser","parameters":{"sHeaderTitle":"type: string, description: New value for property <code>headerTitle<\/code>"}},"setOptionsMenu":{"!description":"Sets the aggregated {@link #getOptionsMenu optionsMenu}.","!static":false,"!category":"function","!type":"fn(oOptionsMenu: sap.ui.commons.Menu) -> sap.ui.ux3.ExactBrowser","parameters":{"oOptionsMenu":"type: sap.ui.commons.Menu, description: The optionsMenu to set"}},"setShowTopList":{"!description":"Sets a new value for property {@link #getShowTopList showTopList}.\n\nWhether the top list of the ExactBrowser should be shown. When the property is set to false the application must ensure to select top level attributes appropriately.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTopList: Boolean) -> sap.ui.ux3.ExactBrowser","parameters":{"bShowTopList":"type: boolean, description: New value for property <code>showTopList<\/code>"}},"getListHeight":{"!description":"Gets current value of property {@link #getListHeight listHeight}.\n\nThe height of the list area in px.\n\nDefault value is <code>290<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setTopListWidth":{"!description":"Sets a new value for property {@link #getTopListWidth topListWidth}.\n\nSpecifies the width of the top list in pixels. The value must be between 70 and 500.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>168<\/code>.","!static":false,"!category":"function","!type":"fn(iTopListWidth: Number) -> sap.ui.ux3.ExactBrowser","parameters":{"iTopListWidth":"type: int, description: New value for property <code>topListWidth<\/code>"}}},"sap.ui.ux3.NavigationItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NavigationItem"},"sap.ui.ux3.NavigationItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.IconTabBar<\/code>, <code>sap.m.TabContainer<\/code> or <code>sap.uxap.ObjectPageLayout<\/code> control.<br>Is the item to be used within the NavigationBar","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the NavigationItem is currently visible. When making NavigationItems invisible at runtime it is the application's responsibility to make sure it is not the currently selected one - or to select another one in this case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.ux3.NavigationItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getHref":{"!description":"Gets current value of property {@link #getHref href}.\n\nDefines the link target URL. This property is optional and should only be set when required! The use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NavigationItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllSubItems":{"!description":"Removes all the controls from the aggregation {@link #getSubItems subItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the NavigationItem is currently visible. When making NavigationItems invisible at runtime it is the application's responsibility to make sure it is not the currently selected one - or to select another one in this case.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertSubItem":{"!description":"Inserts a subItem into the aggregation {@link #getSubItems subItems}.","!static":false,"!category":"function","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.NavigationItem","parameters":{"oSubItem":"type: sap.ui.ux3.NavigationItem, description: The subItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the subItem should be inserted at; for a negative value of <code>iIndex<\/code>, the subItem is inserted at position 0; for a value greater than the current size of the aggregation, the subItem is inserted at the last position"}},"getSubItems":{"!description":"Gets content of aggregation {@link #getSubItems subItems}.\n\nAny NavigationItems on the next hierarchy level connected to this NavigationItem","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"setHref":{"!description":"Sets a new value for property {@link #getHref href}.\n\nDefines the link target URL. This property is optional and should only be set when required! The use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.ux3.NavigationItem","parameters":{"sHref":"type: sap.ui.core.URI, description: New value for property <code>href<\/code>"}},"!proto":"sap.ui.core.Item","!category":"class","addSubItem":{"!description":"Adds some subItem to the aggregation {@link #getSubItems subItems}.","!static":false,"!category":"function","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"oSubItem":"type: sap.ui.ux3.NavigationItem, description: The subItem to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"indexOfSubItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation {@link #getSubItems subItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSubItem: sap.ui.ux3.NavigationItem) -> Number","parameters":{"oSubItem":"type: sap.ui.ux3.NavigationItem, description: The subItem whose index is looked for"}},"removeSubItem":{"!description":"Removes a subItem from the aggregation {@link #getSubItems subItems}.","!static":false,"!category":"function","!type":"fn(vSubItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"vSubItem":"type: int|string|sap.ui.ux3.NavigationItem, description: The subItem to remove or its index or id"}},"!constructorDescription":"Constructor for a new NavigationItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubItems subItems} : sap.ui.ux3.NavigationItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","destroySubItems":{"!description":"Destroys all the subItems in the aggregation {@link #getSubItems subItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NavigationItem"},"!module":"sap/ui/ux3/NavigationItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.IconTabBar<\/code>, <code>sap.m.TabContainer<\/code> or <code>sap.uxap.ObjectPageLayout<\/code> control.<br>Is the item to be used within the NavigationBar"},"sap.ui.ux3.CollectionInspector":{"insertCollection":{"!description":"Inserts a collection into the aggregation named <code>collections<\/code>.","!static":false,"!category":"function","!type":"fn(oCollection: sap.ui.ux3.Collection, iIndex: Number) -> sap.ui.ux3.CollectionInspector","parameters":{"oCollection":"type: sap.ui.ux3.Collection, description: the collection to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the collection should be inserted at; for a negative value of <code>iIndex<\/code>, the collection is inserted at position 0; for a value greater than the current size of the aggregation, the collection is inserted at the last position"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nAll controls that are currently displayed","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getCollections":{"!description":"Gets content of aggregation {@link #getCollections collections}.\n\nCollections which are displayed in the COllectionInspector","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.Collection]"},"!category":"class","attachCollectionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:collectionSelected collectionSelected} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nEvent is fired if user selects a collection","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.CollectionInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFitParent":{"!description":"Gets current value of property {@link #getFitParent fitParent}.\n\nIf set to true, control will fit parents content area\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireItemSelectionChanged":{"!description":"Fires event {@link #event:itemSelectionChanged itemSelectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSidebarVisible":{"!description":"Sets a new value for property {@link #getSidebarVisible sidebarVisible}.\n\nDefines if the list of collection items is visible on the left\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSidebarVisible: Boolean) -> sap.ui.ux3.CollectionInspector","parameters":{"bSidebarVisible":"type: boolean, description: New value for property <code>sidebarVisible<\/code>"}},"!constructorDescription":"Constructor for a new CollectionInspector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSidebarVisible sidebarVisible} : boolean (default: true)<\/li>\n<li>{@link #getFitParent fitParent} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCollections collections} : sap.ui.ux3.Collection[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedCollection selectedCollection} : (sap.ui.core.ID | sap.ui.ux3.Collection)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:collectionSelected collectionSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelectionChanged itemSelectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editCollection editCollection} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyCollections":{"!description":"Destroys the collection aggregation","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.CollectionInspector"},"fireEditCollection":{"!description":"Fires event {@link #event:editCollection editCollection} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachEditCollection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editCollection editCollection} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSelectedCollection":{"!description":"ID of the element which is the current target of the association {@link #getSelectedCollection selectedCollection}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"removeAllCollections":{"!description":"Removes all the controls in the aggregation named <code>collections<\/code>.<br/> Additionally unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.Collection]"},"closeSidebar":{"!description":"Closes the siedebar","!static":false,"!category":"function","!type":"fn()"},"setFitParent":{"!description":"Sets a new value for property {@link #getFitParent fitParent}.\n\nIf set to true, control will fit parents content area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFitParent: Boolean) -> sap.ui.ux3.CollectionInspector","parameters":{"bFitParent":"type: boolean, description: New value for property <code>fitParent<\/code>"}},"detachCollectionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:collectionSelected collectionSelected} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelectedCollection":{"!description":"Sets the associated {@link #getSelectedCollection selectedCollection}.","!static":false,"!category":"function","!type":"fn(oSelectedCollection: sap.ui.core.ID | sap.ui.ux3.Collection) -> sap.ui.ux3.CollectionInspector","parameters":{"oSelectedCollection":"type: sap.ui.core.ID|sap.ui.ux3.Collection, description: ID of an element which becomes the new target of this selectedCollection association; alternatively, an element instance may be given"}},"destroyContent":{"!description":"Destroys all the content in the aggregation named <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.CollectionInspector"},"getSidebarVisible":{"!description":"Gets current value of property {@link #getSidebarVisible sidebarVisible}.\n\nDefines if the list of collection items is visible on the left\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>CollectionInspector","detachItemSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemSelectionChanged itemSelectionChanged} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.CollectionInspector.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"attachEditCollection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editCollection editCollection} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nFires when the edit button is clicked","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.CollectionInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllContent":{"!description":"Removes all the controls in the aggregation named <code>content<\/code>.<br/> Additionally unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeCollection":{"!description":"Removes a collection from the aggregation named <code>collections<\/code>.","!static":false,"!category":"function","!type":"fn(vCollection: Number | String | sap.ui.ux3.Collection) -> sap.ui.ux3.Collection","parameters":{"vCollection":"type: int|string|sap.ui.ux3.Collection, description: the collection to remove or its index or id"}},"addContent":{"!description":"Adds some content <code>oContent<\/code> to the aggregation named <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.CollectionInspector","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation named <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: the content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.CollectionInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/ux3/CollectionInspector","indexOfCollection":{"!description":"Checks for the provided <code>sap.ui.ux3.Collection<\/code> in the aggregation {@link #getCollections collections}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCollection: sap.ui.ux3.Collection) -> Number","parameters":{"oCollection":"type: sap.ui.ux3.Collection, description: The collection whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>CollectionInspector","attachItemSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemSelectionChanged itemSelectionChanged} event of this <code>sap.ui.ux3.CollectionInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.CollectionInspector<\/code> itself.\n\nFires when an item in a collection is selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.CollectionInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addCollection":{"!description":"Adds some collection <code>oCollection<\/code> to the aggregation named <code>collections<\/code>.","!static":false,"!category":"function","!type":"fn(oCollection: sap.ui.ux3.Collection) -> sap.ui.ux3.CollectionInspector","parameters":{"oCollection":"type: sap.ui.ux3.Collection, description: the collection to add; if empty, nothing is inserted"}},"fireCollectionSelected":{"!description":"Fires event {@link #event:collectionSelected collectionSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.CollectionInspector","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEditButton":{"!description":"Return the edit button","!static":false,"!category":"function","!type":"fn()"},"insertContent":{"!description":"Inserts a content into the aggregation named <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.CollectionInspector","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"openSidebar":{"!description":"Opens the sidebar","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.ux3.ThingGroup":{"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingGroup","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.ux3.ThingGroup, description: The action to insert; if empty, nothing is inserted"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of Group","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Element","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nActions of the groups content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"oAction":"type: sap.ui.ux3.ThingGroup, description: The action to add; if empty, nothing is inserted"}},"setColspan":{"!description":"Sets a new value for property {@link #getColspan colspan}.\n\nIf Group is used in a column layout the groups spans the all columns if set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bColspan: Boolean) -> sap.ui.ux3.ThingGroup","parameters":{"bColspan":"type: boolean, description: New value for property <code>colspan<\/code>"}},"!constructorDescription":"Constructor for a new ThingGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getColspan colspan} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.ux3.ThingGroup[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of Group","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingGroup) -> Number","parameters":{"oAction":"type: sap.ui.ux3.ThingGroup, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingGroup"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Thing Group Area","removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"vAction":"type: int|string|sap.ui.ux3.ThingGroup, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingGroup"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of Group\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.ThingGroup","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ThingGroup","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getColspan":{"!description":"Gets current value of property {@link #getColspan colspan}.\n\nIf Group is used in a column layout the groups spans the all columns if set to true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/ux3/ThingGroup","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Thing Group Area","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ThingGroup","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}}},"sap.ui.ux3.DataSet_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSet with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSet"},"sap.ui.ux3.DataSet":{"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.DataSet"},"getShowToolbar":{"!description":"Gets current value of property {@link #getShowToolbar showToolbar}.\n\nshow Toolbar\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllFilter":{"!description":"Removes all the controls from the aggregation {@link #getFilter filter}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nAggregation of DataSetItems","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.DataSetItem]"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowFilter":{"!description":"Sets a new value for property {@link #getShowFilter showFilter}.\n\nshow filter\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFilter: Boolean) -> sap.ui.ux3.DataSet","parameters":{"bShowFilter":"type: boolean, description: New value for property <code>showFilter<\/code>"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.ux3.DataSetItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.DataSetItem) -> Number","parameters":{"oItem":"type: sap.ui.ux3.DataSetItem, description: The item whose index is looked for"}},"getSelectedItemId":{"!description":"Returns id of selected Item from given index","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> String","parameters":{"iIndex":"type: int, description: index of selection"}},"setShowSearchField":{"!description":"Sets a new value for property {@link #getShowSearchField showSearchField}.\n\nShow/hide SearchField in Toolbar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSearchField: Boolean) -> sap.ui.ux3.DataSet","parameters":{"bShowSearchField":"type: boolean, description: New value for property <code>showSearchField<\/code>"}},"setShowToolbar":{"!description":"Sets a new value for property {@link #getShowToolbar showToolbar}.\n\nshow Toolbar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowToolbar: Boolean) -> sap.ui.ux3.DataSet","parameters":{"bShowToolbar":"type: boolean, description: New value for property <code>showToolbar<\/code>"}},"clearSelection":{"!description":"clears dataset from all previous selections","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Use a container by choice from the {@link sap.m} library, instead.<br>DataSet","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSet.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.DataSetItem]"},"createViewSwitch":{"!description":"Creates a view switch button","!static":false,"!category":"function","!type":"fn(oView: Object, iIndex: Number) -> Object","parameters":{"oView":"type: object, description: View","iIndex":"type: int, description: Index of view"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSet with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyFilter":{"!description":"Destroys all the filter in the aggregation {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.DataSet"},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.DataSet","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeView":{"!description":"Removes a view from the aggregation {@link #getViews views}.","!static":false,"!category":"function","!type":"fn(vView: Number | String | sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSetView","parameters":{"vView":"type: int|string|sap.ui.ux3.DataSetView, description: The view to remove or its index or id"}},"!module":"sap/ui/ux3/DataSet","destroyViews":{"!description":"Destroys all the views in the aggregation {@link #getViews views}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.DataSet"},"insertFilter":{"!description":"Inserts a filter into the aggregation {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.DataSet","parameters":{"oFilter":"type: sap.ui.core.Control, description: The filter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the filter should be inserted at; for a negative value of <code>iIndex<\/code>, the filter is inserted at position 0; for a value greater than the current size of the aggregation, the filter is inserted at the last position"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Use a container by choice from the {@link sap.m} library, instead.<br>DataSet","isSelectedIndex":{"!description":"Returns true if iIndex is selected","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> Boolean","parameters":{"iIndex":"type: int, description: index of selection"}},"setMultiSelect":{"!description":"setter for multi selection mode","!static":false,"!category":"function","!type":"fn(bMode: Boolean)","parameters":{"bMode":"type: boolean, description: true for multi mode, false for single mode"}},"_rerenderToolbar":{"!description":"Rerendering of the Toolbar","!static":false,"!category":"function","!type":"fn()"},"getSelectedView":{"!description":"ID of the element which is the current target of the association {@link #getSelectedView selectedView}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"addFilter":{"!description":"Adds some filter to the aggregation {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.Control) -> sap.ui.ux3.DataSet","parameters":{"oFilter":"type: sap.ui.core.Control, description: The filter to add; if empty, nothing is inserted"}},"getSelectedIndex":{"!description":"use this function to retrieve the lead selected index","!static":false,"!category":"function","!type":"fn()"},"indexOfFilter":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFilter filter}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.Control) -> Number","parameters":{"oFilter":"type: sap.ui.core.Control, description: The filter whose index is looked for"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.ux3.DataSetItem) -> sap.ui.ux3.DataSetItem","parameters":{"vItem":"type: int|string|sap.ui.ux3.DataSetItem, description: The item to remove or its index or id"}},"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.DataSet","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Control","removeFilter":{"!description":"Removes a filter from the aggregation {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(vFilter: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vFilter":"type: int|string|sap.ui.core.Control, description: The filter to remove or its index or id"}},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelectedView":{"!description":"Sets the associated {@link #getSelectedView selectedView}.","!static":false,"!category":"function","!type":"fn(oSelectedView: sap.ui.core.ID | sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSet","parameters":{"oSelectedView":"type: sap.ui.core.ID|sap.ui.ux3.DataSetView, description: ID of an element which becomes the new target of this selectedView association; alternatively, an element instance may be given"}},"_rerenderFilter":{"!description":"Rerendering of the FilterArea","!static":false,"!category":"function","!type":"fn()"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.DataSetItem) -> sap.ui.ux3.DataSet","parameters":{"oItem":"type: sap.ui.ux3.DataSetItem, description: The item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new DataSet.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowToolbar showToolbar} : boolean (default: true)<\/li>\n<li>{@link #getShowFilter showFilter} : boolean (default: true)<\/li>\n<li>{@link #getShowSearchField showSearchField} : boolean (default: true)<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.ux3.DataSetItem[]<\/li>\n<li>{@link #getViews views} : sap.ui.ux3.DataSetView[]<\/li>\n<li>{@link #getFilter filter} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedView selectedView} : (sap.ui.core.ID | sap.ui.ux3.DataSetView)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeAllViews":{"!description":"Removes all the controls from the aggregation {@link #getViews views}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.DataSetView]"},"bindItems":{"!description":"Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.DataSet","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSelectedIndices":{"!description":"use this function to retrieve all selected indices if multiple select is enabled","!static":false,"!category":"function","!type":"fn()"},"setLeadSelection":{"!description":"Set the LeadSelection index","!static":false,"!category":"function","!type":"fn(iIIndex: Number)","parameters":{"iIIndex":"type: int, description: set LeadSelection index"}},"getMultiSelect":{"!description":"Gets current value of property {@link #getMultiSelect multiSelect}.\n\nSelection mode of the DataSet\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfView":{"!description":"Checks for the provided <code>sap.ui.ux3.DataSetView<\/code> in the aggregation {@link #getViews views}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oView: sap.ui.ux3.DataSetView) -> Number","parameters":{"oView":"type: sap.ui.ux3.DataSetView, description: The view whose index is looked for"}},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.DataSet<\/code> itself.\n\nselection Changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.DataSet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getLeadSelection":{"!description":"Returns the LeadSelection index","!static":false,"!category":"function","!type":"fn() -> Number"},"unbindItems":{"!description":"Unbinds aggregation {@link #getItems items} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.DataSet"},"insertView":{"!description":"Inserts a view into the aggregation {@link #getViews views}.","!static":false,"!category":"function","!type":"fn(oView: sap.ui.ux3.DataSetView, iIndex: Number) -> sap.ui.ux3.DataSet","parameters":{"oView":"type: sap.ui.ux3.DataSetView, description: The view to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the view should be inserted at; for a negative value of <code>iIndex<\/code>, the view is inserted at position 0; for a value greater than the current size of the aggregation, the view is inserted at the last position"}},"removeToolbarItem":{"!description":"remove a toolbarItem to the toolbar","!static":false,"!category":"function","!type":"fn(oOToolbarItem: sap.ui.commons.ToolbarItem)","parameters":{"oOToolbarItem":"type: sap.ui.commons.ToolbarItem, description: undefined"}},"getShowFilter":{"!description":"Gets current value of property {@link #getShowFilter showFilter}.\n\nshow filter\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addView":{"!description":"Adds some view to the aggregation {@link #getViews views}.","!static":false,"!category":"function","!type":"fn(oView: sap.ui.ux3.DataSetView) -> sap.ui.ux3.DataSet","parameters":{"oView":"type: sap.ui.ux3.DataSetView, description: The view to add; if empty, nothing is inserted"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.ux3.DataSet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.DataSet<\/code> itself.\n\nEvent which is fired when the user triggers a search","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.DataSet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowSearchField":{"!description":"Gets current value of property {@link #getShowSearchField showSearchField}.\n\nShow/hide SearchField in Toolbar\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addToolbarItem":{"!description":"add a toolbarItem to the toolbar","!static":false,"!category":"function","!type":"fn(oOToolbarItem: sap.ui.commons.ToolbarItem)","parameters":{"oOToolbarItem":"type: sap.ui.commons.ToolbarItem, description: ToolbarItem"}},"getFilter":{"!description":"Gets content of aggregation {@link #getFilter filter}.\n\nFilter control (e.g. a FacetFilter) for the DataSet","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getViews":{"!description":"Gets content of aggregation {@link #getViews views}.\n\nviews","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.DataSetView]"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.DataSetItem, iIndex: Number) -> sap.ui.ux3.DataSet","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.ux3.DataSetItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.ux3.ThingGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingGroup"},"sap.ui.ux3.Feed_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feed with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Feed"},"sap.ui.ux3.ActionBarSocialActions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Enumeration of available standard actions for 'sap.ui.ux3.ActionBar'. To be used as parameters for function 'sap.ui.ux3.ActionBar.getSocialAction'.","Favorite":{"!description":"Standards action 'Mark as Favorite'","!category":"enum","!type":"String"},"Follow":{"!description":"Standard action 'Follow/Unfollow'","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","!category":"static class","Update":{"!description":"Standard action 'Create an update' (Feed)","!category":"enum","!type":"String"},"Flag":{"!description":"Standard action 'Mark for Follow up'","!category":"enum","!type":"String"},"Open":{"!description":"Standard action 'Open Thing Inspector'","!category":"enum","!type":"String"}},"sap.ui.ux3.DataSetItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSetItem"},"sap.ui.ux3.Shell":{"removePaneBarItem":{"!description":"Removes a paneBarItem from the aggregation {@link #getPaneBarItems paneBarItems}.","!static":false,"!category":"function","!type":"fn(vPaneBarItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vPaneBarItem":"type: int|string|sap.ui.core.Item, description: The paneBarItem to remove or its index or id"}},"setShowSearchTool":{"!description":"Sets a new value for property {@link #getShowSearchTool showSearchTool}.\n\nWhether the \"Global Search\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSearchTool: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowSearchTool":"type: boolean, description: New value for property <code>showSearchTool<\/code>"}},"fireWorksetItemSelected":{"!description":"Fires event {@link #event:worksetItemSelected worksetItemSelected} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireLogout":{"!description":"Fires event {@link #event:logout logout} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Shell","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertHeaderItem":{"!description":"Inserts a headerItem into the aggregation {@link #getHeaderItems headerItems}.","!static":false,"!category":"function","!type":"fn(oHeaderItem: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"oHeaderItem":"type: sap.ui.core.Control, description: The headerItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerItem should be inserted at; for a negative value of <code>iIndex<\/code>, the headerItem is inserted at position 0; for a value greater than the current size of the aggregation, the headerItem is inserted at the last position"}},"attachWorksetItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:worksetItemSelected worksetItemSelected} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when a workset item was selected by the user. The application may populate the sub-items of the given workset item in the event handler, but this must happen synchronously. If this is done, the application is responsible for displaying the correct content for the selected one of the newly created sub-items. The Shell will currently always mark the first sub-item as selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addWorksetItem":{"!description":"Adds some worksetItem to the aggregation {@link #getWorksetItems worksetItems}.","!static":false,"!category":"function","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.Shell","parameters":{"oWorksetItem":"type: sap.ui.ux3.NavigationItem, description: The worksetItem to add; if empty, nothing is inserted"}},"getNotificationBar":{"!description":"Gets content of aggregation {@link #getNotificationBar notificationBar}.\n\nThe NotificationBar which should be integrated into the Shell.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NotificationBar"},"insertToolPopup":{"!description":"Inserts a toolPopup into the aggregation {@link #getToolPopups toolPopups}.","!static":false,"!category":"function","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"oToolPopup":"type: sap.ui.ux3.ToolPopup, description: The toolPopup to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the toolPopup should be inserted at; for a negative value of <code>iIndex<\/code>, the toolPopup is inserted at position 0; for a value greater than the current size of the aggregation, the toolPopup is inserted at the last position"}},"destroyPaneBarItems":{"!description":"Destroys all the paneBarItems in the aggregation {@link #getPaneBarItems paneBarItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"setOffsetRight":{"!description":"Moves the complete Shell away from the right window border by the given number of pixels (left border in RTL case).\n\nSo there is space for a sidebar or so outside the Shell. The CSS class 'sapUiUx3ShellOuterSideBar' provides the basic position capabilities for the sidebar DOM element.\n\nThis feature is not public. The usage is only granted to special groups on request.","!static":false,"!category":"function","!type":"fn(px: Number, complete?: fn(), outerId?: String)","parameters":{"px":"type: int, description: how many pixels of free space should be next to the Shell (between 0 and 600)","outerId":"type: string, description: optional id of the content representing the outside sidebar. If specified the width of the content is animated.","complete":"type: function, description: optional callback function to call after the animation"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.Shell}<br>The Ux3 GoldReflection Shell, which is an application frame with navigation capabilities. It is supposed to be added to a direct child of the BODY tag of a page and there should be no other parts of the page consuming space outside the Shell.","attachPaneBarItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:paneBarItemSelected paneBarItemSelected} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nAn item in the right-hand-side pane bar has been selected, the pane is now visible and can be filled with UI elements.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeaderType":{"!description":"Sets a new value for property {@link #getHeaderType headerType}.\n\nDefines which header type to be used. Depending on the header type some other functionality might be obsolete.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderType: sap.ui.ux3.ShellHeaderType) -> sap.ui.ux3.Shell","parameters":{"sHeaderType":"type: sap.ui.ux3.ShellHeaderType, description: New value for property <code>headerType<\/code>"}},"getWorksetItems":{"!description":"Gets content of aggregation {@link #getWorksetItems worksetItems}.\n\nThe workset items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"setShowTools":{"!description":"Sets a new value for property {@link #getShowTools showTools}.\n\nWhether the tool area should be displayed at all or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTools: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowTools":"type: boolean, description: New value for property <code>showTools<\/code>"}},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Shell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/ux3/Shell","getToolPopups":{"!description":"Gets content of aggregation {@link #getToolPopups toolPopups}.\n\nThe items which appear in the ToolPalette and are opened as popup when clicked.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ToolPopup]"},"openPane":{"!description":"Opens the side Pane.\n\nA valid ID of a paneBarItem must be given, so this item can be marked as selected. A \"paneBarItemSelected\" event is then fired as if the opening was triggered by the user by a click on the respective PaneBarItem. This method can be called (with different IDs) even when the Pane is already open. It has then the same effect as if the user switches between PaneBarItems.\n\nReturns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn(sPaneBarItemId: String) -> sap.ui.ux3.Shell","parameters":{"sPaneBarItemId":"type: string, description: The ID of the PaneBarItem which should be marked as selected."}},"firePaneBarItemSelected":{"!description":"Fires event {@link #event:paneBarItemSelected paneBarItemSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Shell","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getHeaderType":{"!description":"Gets current value of property {@link #getHeaderType headerType}.\n\nDefines which header type to be used. Depending on the header type some other functionality might be obsolete.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ShellHeaderType"},"setContent":{"!description":"Replaces the existing Shell content with the given Control(-Tree). Only leads to a re-rendering of the content area (not the complete Shell). This method may be more convenient than a series of calls to \"removeContent\" and \"addContent\", which each lead to a re-rendering of the content area (but again not of the complete Shell).\n\nBy default the old content is not destroyed and is returned by this method in an array for further usage. To avoid memory leaks, the old content should be destroyed (if not needed later), by setting the \"destroyOldContent\" flag or by destroying it manually later on. If \"destroyOldContent\" is set, an empty array is returned.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, bDestroyOldContent: Boolean) -> [sap.ui.core.Control]","parameters":{"bDestroyOldContent":"type: boolean, description: If set, the controls previously contained in the Shell will be destroyed, to avoid memory leaks.","oContent":"type: sap.ui.core.Control, description: The new Content. In this method it must be exactly one control (-tree). Use addContent() to add more control (-trees) to the main content area of the Shell."}},"setShowLogoutButton":{"!description":"Sets a new value for property {@link #getShowLogoutButton showLogoutButton}.\n\nWhether the Logoff button in the header should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLogoutButton: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowLogoutButton":"type: boolean, description: New value for property <code>showLogoutButton<\/code>"}},"indexOfPaneBarItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getPaneBarItems paneBarItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPaneBarItem: sap.ui.core.Item) -> Number","parameters":{"oPaneBarItem":"type: sap.ui.core.Item, description: The paneBarItem whose index is looked for"}},"destroyToolPopups":{"!description":"Destroys all the toolPopups in the aggregation {@link #getToolPopups toolPopups}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"getShowLogoutButton":{"!description":"Gets current value of property {@link #getShowLogoutButton showLogoutButton}.\n\nWhether the Logoff button in the header should be displayed or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllHeaderItems":{"!description":"Removes all the controls from the aggregation {@link #getHeaderItems headerItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPaneContent":{"!description":"Gets content of aggregation {@link #getPaneContent paneContent}.\n\nThe content to appear in the pane area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertWorksetItem":{"!description":"Inserts a worksetItem into the aggregation {@link #getWorksetItems worksetItems}.","!static":false,"!category":"function","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the worksetItem should be inserted at; for a negative value of <code>iIndex<\/code>, the worksetItem is inserted at position 0; for a value greater than the current size of the aggregation, the worksetItem is inserted at the last position","oWorksetItem":"type: sap.ui.ux3.NavigationItem, description: The worksetItem to insert; if empty, nothing is inserted"}},"setPaneContent":{"!description":"Replaces the existing side pane content with the given Control(-Tree). This method is optimized to only re-render the pane content (and not the shell) which is faster and smoother than any other way of changing the \"paneContent\" aggregation.\n\nBy default, the old pane content is not destroyed and is returned by this method in an array for further usage. To avoid memory leaks, the old content should be destroyed (if not needed later), by setting the \"destroyOldContent\" flag or by destroying it manually later on. If \"destroyOldContent\" is set, an empty array is returned.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, bDestroyOldContent: Boolean) -> [sap.ui.core.Control]","parameters":{"bDestroyOldContent":"type: boolean, description: If set, the controls previously contained in the pane will be destroyed, to avoid memory leaks.","oContent":"type: sap.ui.core.Control, description: The new Pane content. In this method it must be exactly one control (-tree). This could likely be a layout or a specific ux3 Pane control. Use addPaneContent() to add more control (-trees) to the Pane."}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeHeaderItem":{"!description":"Removes a headerItem from the aggregation {@link #getHeaderItems headerItems}.","!static":false,"!category":"function","!type":"fn(vHeaderItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderItem":"type: int|string|sap.ui.core.Control, description: The headerItem to remove or its index or id"}},"setAllowOverlayHeaderAccess":{"!description":"Sets a new value for property {@link #getAllowOverlayHeaderAccess allowOverlayHeaderAccess}.\n\nWhether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAllowOverlayHeaderAccess: Boolean) -> sap.ui.ux3.Shell","parameters":{"bAllowOverlayHeaderAccess":"type: boolean, description: New value for property <code>allowOverlayHeaderAccess<\/code>"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when search has been triggered.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setApplyContentPadding":{"!description":"Sets a new value for property {@link #getApplyContentPadding applyContentPadding}.\n\nWhether the Shell content area should have a theme-dependent padding or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyContentPadding: Boolean) -> sap.ui.ux3.Shell","parameters":{"bApplyContentPadding":"type: boolean, description: New value for property <code>applyContentPadding<\/code>"}},"destroyPaneContent":{"!description":"Destroys all the paneContent in the aggregation {@link #getPaneContent paneContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"removePaneContent":{"!description":"Removes a paneContent from the aggregation {@link #getPaneContent paneContent}.","!static":false,"!category":"function","!type":"fn(vPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vPaneContent":"type: int|string|sap.ui.core.Control, description: The paneContent to remove or its index or id"}},"getAppIcon":{"!description":"Gets current value of property {@link #getAppIcon appIcon}.\n\nThe URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first. If the appIcon is set, for accessibility reasons the appIconTooltip must also be set.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDesignType":{"!description":"Gets current value of property {@link #getDesignType designType}.\n\nDefines which design type is to be used.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ShellDesignType"},"getShowSearchTool":{"!description":"Gets current value of property {@link #getShowSearchTool showSearchTool}.\n\nWhether the \"Global Search\" tool should be displayed or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addToolPopup":{"!description":"Adds some toolPopup to the aggregation {@link #getToolPopups toolPopups}.","!static":false,"!category":"function","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup) -> sap.ui.ux3.Shell","parameters":{"oToolPopup":"type: sap.ui.ux3.ToolPopup, description: The toolPopup to add; if empty, nothing is inserted"}},"getShowTools":{"!description":"Gets current value of property {@link #getShowTools showTools}.\n\nWhether the tool area should be displayed at all or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPaneWidth":{"!description":"Gets current value of property {@link #getPaneWidth paneWidth}.\n\nThe width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).\n\nDefault value is <code>250<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachPaneClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:paneClosed paneClosed} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired after a side pane of the shell is closed. It is also fired, when an open pane is closed by calling setShowPane(false), if and only if the pane was opened before.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowFeederTool":{"!description":"Sets a new value for property {@link #getShowFeederTool showFeederTool}.\n\nWhether the \"Feeder\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFeederTool: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowFeederTool":"type: boolean, description: New value for property <code>showFeederTool<\/code>"}},"getPaneBarItems":{"!description":"Gets content of aggregation {@link #getPaneBarItems paneBarItems}.\n\nThe items to appear in the PaneBar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"addPaneContent":{"!description":"Adds some paneContent to the aggregation {@link #getPaneContent paneContent}.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control) -> sap.ui.ux3.Shell","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: The paneContent to add; if empty, nothing is inserted"}},"removeAllWorksetItems":{"!description":"Removes all the controls from the aggregation {@link #getWorksetItems worksetItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"detachWorksetItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:worksetItemSelected worksetItemSelected} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachLogout":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:logout logout} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when the user clicks the \"Log-off\" button","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachLogout":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:logout logout} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getLogoutButtonTooltip":{"!description":"Gets current value of property {@link #getLogoutButtonTooltip logoutButtonTooltip}.\n\nThe tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"setFullHeightContent":{"!description":"Sets a new value for property {@link #getFullHeightContent fullHeightContent}.\n\nIf set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space. However, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFullHeightContent: Boolean) -> sap.ui.ux3.Shell","parameters":{"bFullHeightContent":"type: boolean, description: New value for property <code>fullHeightContent<\/code>"}},"setShowInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup. Instead trigger it from the respective elements in the Shell content.<br>Sets a new value for property {@link #getShowInspectorTool showInspectorTool}.\n\nWhether the \"Inspector\" tool should be displayed or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowInspectorTool: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowInspectorTool":"type: boolean, description: New value for property <code>showInspectorTool<\/code>"}},"setAppIconTooltip":{"!description":"Sets a new value for property {@link #getAppIconTooltip appIconTooltip}.\n\nThe tooltip of the application icon in the header\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAppIconTooltip: String) -> sap.ui.ux3.Shell","parameters":{"sAppIconTooltip":"type: string, description: New value for property <code>appIconTooltip<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"setAppIcon":{"!description":"Sets a new value for property {@link #getAppIcon appIcon}.\n\nThe URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first. If the appIcon is set, for accessibility reasons the appIconTooltip must also be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAppIcon: sap.ui.core.URI) -> sap.ui.ux3.Shell","parameters":{"sAppIcon":"type: sap.ui.core.URI, description: New value for property <code>appIcon<\/code>"}},"destroyHeaderItems":{"!description":"Destroys all the headerItems in the aggregation {@link #getHeaderItems headerItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"fireFeedSubmit":{"!description":"Fires event {@link #event:feedSubmit feedSubmit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Shell","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSelectedWorksetItem":{"!description":"Sets the associated {@link #getSelectedWorksetItem selectedWorksetItem}.","!static":false,"!category":"function","!type":"fn(oSelectedWorksetItem: sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.Shell","parameters":{"oSelectedWorksetItem":"type: sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: ID of an element which becomes the new target of this selectedWorksetItem association; alternatively, an element instance may be given"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Shell.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAppIconTooltip":{"!description":"Gets current value of property {@link #getAppIconTooltip appIconTooltip}.\n\nThe tooltip of the application icon in the header","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfWorksetItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation {@link #getWorksetItems worksetItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oWorksetItem: sap.ui.ux3.NavigationItem) -> Number","parameters":{"oWorksetItem":"type: sap.ui.ux3.NavigationItem, description: The worksetItem whose index is looked for"}},"getAllowOverlayHeaderAccess":{"!description":"Gets current value of property {@link #getAllowOverlayHeaderAccess allowOverlayHeaderAccess}.\n\nWhether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachPaneBarItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:paneBarItemSelected paneBarItemSelected} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addPaneBarItem":{"!description":"Adds some paneBarItem to the aggregation {@link #getPaneBarItems paneBarItems}.","!static":false,"!category":"function","!type":"fn(oPaneBarItem: sap.ui.core.Item) -> sap.ui.ux3.Shell","parameters":{"oPaneBarItem":"type: sap.ui.core.Item, description: The paneBarItem to add; if empty, nothing is inserted"}},"getShowInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup. Instead trigger it from the respective elements in the Shell content.<br>Gets current value of property {@link #getShowInspectorTool showInspectorTool}.\n\nWhether the \"Inspector\" tool should be displayed or not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"firePaneClosed":{"!description":"Fires event {@link #event:paneClosed paneClosed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Shell","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSearchField":{"!description":"Returns the SearchField control which is used in the Search Tool.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SearchField"},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Shell","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 replaced by {@link sap.m.Shell}<br>The Ux3 GoldReflection Shell, which is an application frame with navigation capabilities. It is supposed to be added to a direct child of the BODY tag of a page and there should be no other parts of the page consuming space outside the Shell.","getApplyContentPadding":{"!description":"Gets current value of property {@link #getApplyContentPadding applyContentPadding}.\n\nWhether the Shell content area should have a theme-dependent padding or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAppTitle":{"!description":"Sets a new value for property {@link #getAppTitle appTitle}.\n\nThe application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAppTitle: String) -> sap.ui.ux3.Shell","parameters":{"sAppTitle":"type: string, description: New value for property <code>appTitle<\/code>"}},"setDesignType":{"!description":"Sets a new value for property {@link #getDesignType designType}.\n\nDefines which design type is to be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesignType: sap.ui.ux3.ShellDesignType) -> sap.ui.ux3.Shell","parameters":{"sDesignType":"type: sap.ui.ux3.ShellDesignType, description: New value for property <code>designType<\/code>"}},"setPaneWidth":{"!description":"Sets a new value for property {@link #getPaneWidth paneWidth}.\n\nThe width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>250<\/code>.","!static":false,"!category":"function","!type":"fn(iPaneWidth: Number) -> sap.ui.ux3.Shell","parameters":{"iPaneWidth":"type: int, description: New value for property <code>paneWidth<\/code>"}},"getShowFeederTool":{"!description":"Gets current value of property {@link #getShowFeederTool showFeederTool}.\n\nWhether the \"Feeder\" tool should be displayed or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"closePane":{"!description":"Closes the side Pane (if open).\n\nReturns 'this' to allow method chaining.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"setLogoutButtonTooltip":{"!description":"Sets a new value for property {@link #getLogoutButtonTooltip logoutButtonTooltip}.\n\nThe tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLogoutButtonTooltip: String) -> sap.ui.ux3.Shell","parameters":{"sLogoutButtonTooltip":"type: string, description: New value for property <code>logoutButtonTooltip<\/code>"}},"insertPaneContent":{"!description":"Inserts a paneContent into the aggregation {@link #getPaneContent paneContent}.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: The paneContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the paneContent should be inserted at; for a negative value of <code>iIndex<\/code>, the paneContent is inserted at position 0; for a value greater than the current size of the aggregation, the paneContent is inserted at the last position"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content to appear in the main canvas. Each modification of this aggregation leads to a re-rendering of the content area - but not to a re-rendering of the complete Shell.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getHeaderItems":{"!description":"Gets content of aggregation {@link #getHeaderItems headerItems}.\n\nControls to appear in the header next to the logout button. It is recommended to only use controls of type Button, MenuButton and TextView. The respective UI guidelines need to be enforced on a higher level.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addHeaderItem":{"!description":"Adds some headerItem to the aggregation {@link #getHeaderItems headerItems}.","!static":false,"!category":"function","!type":"fn(oHeaderItem: sap.ui.core.Control) -> sap.ui.ux3.Shell","parameters":{"oHeaderItem":"type: sap.ui.core.Control, description: The headerItem to add; if empty, nothing is inserted"}},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"initializePersonalization":{"!description":"Experimental method! Do not use!\n\nMakes Shell personalization available and injects the given personalization settings. This should be called before the user can do any adaptations per drag&drop or using the personalization dialog. Otherwise it may override the user's new settings.","!static":false,"!category":"function","!type":"fn(oSettings: Object)","parameters":{"oSettings":"type: object, description: Personalization settings object"}},"insertPaneBarItem":{"!description":"Inserts a paneBarItem into the aggregation {@link #getPaneBarItems paneBarItems}.","!static":false,"!category":"function","!type":"fn(oPaneBarItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.ux3.Shell","parameters":{"oPaneBarItem":"type: sap.ui.core.Item, description: The paneBarItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the paneBarItem should be inserted at; for a negative value of <code>iIndex<\/code>, the paneBarItem is inserted at position 0; for a value greater than the current size of the aggregation, the paneBarItem is inserted at the last position"}},"!constructorDescription":"Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAppTitle appTitle} : string<\/li>\n<li>{@link #getAppIcon appIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getAppIconTooltip appIconTooltip} : string<\/li>\n<li>{@link #getShowLogoutButton showLogoutButton} : boolean (default: true)<\/li>\n<li>{@link #getLogoutButtonTooltip logoutButtonTooltip} : string<\/li>\n<li>{@link #getShowSearchTool showSearchTool} : boolean (default: true)<\/li>\n<li>{@link #getShowInspectorTool showInspectorTool} : boolean (default: false)<\/li>\n<li>{@link #getShowFeederTool showFeederTool} : boolean (default: true)<\/li>\n<li>{@link #getShowTools showTools} : boolean (default: true)<\/li>\n<li>{@link #getShowPane showPane} : boolean (default: true)<\/li>\n<li>{@link #getHeaderType headerType} : sap.ui.ux3.ShellHeaderType (default: Standard)<\/li>\n<li>{@link #getDesignType designType} : sap.ui.ux3.ShellDesignType (default: Standard)<\/li>\n<li>{@link #getPaneWidth paneWidth} : int (default: 250)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getFullHeightContent fullHeightContent} : boolean (default: false)<\/li>\n<li>{@link #getAllowOverlayHeaderAccess allowOverlayHeaderAccess} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getWorksetItems worksetItems} : sap.ui.ux3.NavigationItem[]<\/li>\n<li>{@link #getPaneBarItems paneBarItems} : sap.ui.core.Item[]<\/li>\n<li>{@link #getPaneContent paneContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getToolPopups toolPopups} : sap.ui.ux3.ToolPopup[]<\/li>\n<li>{@link #getHeaderItems headerItems} : sap.ui.core.Control[]<\/li>\n<li>{@link #getNotificationBar notificationBar} : sap.ui.ux3.NotificationBar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedWorksetItem selectedWorksetItem} : (sap.ui.core.ID | sap.ui.ux3.NavigationItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:worksetItemSelected worksetItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:paneBarItemSelected paneBarItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:logout logout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:feedSubmit feedSubmit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:paneClosed paneClosed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","openPersonalizationDialog":{"!description":"Experimental method! Do not use!","!static":false,"!category":"function","!type":"fn()"},"detachPaneClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:paneClosed paneClosed} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowPane":{"!description":"Sets a new value for property {@link #getShowPane showPane}.\n\nWhether the pane bar should be displayed at all or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPane: Boolean) -> sap.ui.ux3.Shell","parameters":{"bShowPane":"type: boolean, description: New value for property <code>showPane<\/code>"}},"getShowPane":{"!description":"Gets current value of property {@link #getShowPane showPane}.\n\nWhether the pane bar should be displayed at all or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllPaneBarItems":{"!description":"Removes all the controls from the aggregation {@link #getPaneBarItems paneBarItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"destroyNotificationBar":{"!description":"Destroys the notificationBar in the aggregation {@link #getNotificationBar notificationBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"removeAllPaneContent":{"!description":"Removes all the controls from the aggregation {@link #getPaneContent paneContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeToolPopup":{"!description":"Removes a toolPopup from the aggregation {@link #getToolPopups toolPopups}.","!static":false,"!category":"function","!type":"fn(vToolPopup: Number | String | sap.ui.ux3.ToolPopup) -> sap.ui.ux3.ToolPopup","parameters":{"vToolPopup":"type: int|string|sap.ui.ux3.ToolPopup, description: The toolPopup to remove or its index or id"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.Shell","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"indexOfPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getPaneContent paneContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPaneContent: sap.ui.core.Control) -> Number","parameters":{"oPaneContent":"type: sap.ui.core.Control, description: The paneContent whose index is looked for"}},"removeAllToolPopups":{"!description":"Removes all the controls from the aggregation {@link #getToolPopups toolPopups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ToolPopup]"},"getSelectedWorksetItem":{"!description":"ID of the element which is the current target of the association {@link #getSelectedWorksetItem selectedWorksetItem}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getFullHeightContent":{"!description":"Gets current value of property {@link #getFullHeightContent fullHeightContent}.\n\nIf set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space. However, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Shell<\/code> itself.\n\nFired when a new feed entry is submitted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfToolPopup":{"!description":"Checks for the provided <code>sap.ui.ux3.ToolPopup<\/code> in the aggregation {@link #getToolPopups toolPopups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToolPopup: sap.ui.ux3.ToolPopup) -> Number","parameters":{"oToolPopup":"type: sap.ui.ux3.ToolPopup, description: The toolPopup whose index is looked for"}},"removeWorksetItem":{"!description":"Removes a worksetItem from the aggregation {@link #getWorksetItems worksetItems}.","!static":false,"!category":"function","!type":"fn(vWorksetItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"vWorksetItem":"type: int|string|sap.ui.ux3.NavigationItem, description: The worksetItem to remove or its index or id"}},"destroyWorksetItems":{"!description":"Destroys all the worksetItems in the aggregation {@link #getWorksetItems worksetItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Shell"},"getAppTitle":{"!description":"Gets current value of property {@link #getAppTitle appTitle}.\n\nThe application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.","!static":false,"!category":"function","!type":"fn() -> String"},"isPaneOpen":{"!description":"Returns 'true' if the side Pane is currently open.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfHeaderItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeaderItems headerItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderItem: sap.ui.core.Control) -> Number","parameters":{"oHeaderItem":"type: sap.ui.core.Control, description: The headerItem whose index is looked for"}}},"sap.ui.ux3.NavigationBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NavigationBar"},"sap.ui.ux3.OverlayContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is to be embedded into the Overlay control as content container","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.OverlayContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nAggregation for content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.ux3.Overlay","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.OverlayContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new OverlayContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.Overlay#constructor sap.ui.ux3.Overlay}\ncan be used as well.","!module":"sap/ui/ux3/OverlayContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is to be embedded into the Overlay control as content container","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.OverlayContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.OverlayContainer"}},"sap.ui.ux3.FacetFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FacetFilter"},"sap.ui.ux3.FacetFilterList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FacetFilterList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FacetFilterList"},"sap.ui.ux3.OverlayDialog":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Dialog implementation based on the Overlay. If used in a Shell it leaves the Tool-Palette, Pane-Bar and Header-Items accessible.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.OverlayDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent for the OverlayDialog.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.ux3.Overlay","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDetermines the width of the Overlay Dialog. If the width is set to \"auto\" it is always 50% of the overlay width.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.OverlayDialog","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"setOpenButtonVisible":{"!description":"This Method is not supported for the OverlayDialog.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: undefined"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setHeight":{"!description":"The height for the OverlayDialog.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize)","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: undefined"}},"setWidth":{"!description":"The width for the OverlayDialog.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize)","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: undefined"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDetermines the height of the Overlay Dialog. If the height is set to \"auto\" it is always 50% of the overlay height.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new OverlayDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.Overlay#constructor sap.ui.ux3.Overlay}\ncan be used as well.","!module":"sap/ui/ux3/OverlayDialog","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Dialog implementation based on the Overlay. If used in a Shell it leaves the Tool-Palette, Pane-Bar and Header-Items accessible.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.OverlayDialog","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.OverlayDialog"}},"sap.ui.ux3.ExactArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactArea"},"sap.ui.ux3.DataSetItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>DataSet Item","detachSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selected selected} event of this <code>sap.ui.ux3.DataSetItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSetItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSetItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selected selected} event of this <code>sap.ui.ux3.DataSetItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.DataSetItem<\/code> itself.\n\nEvent Fired when Datset item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.DataSetItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.DataSetItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setIconSrc":{"!description":"Sets a new value for property {@link #getIconSrc iconSrc}.\n\nimage\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconSrc: sap.ui.core.URI) -> sap.ui.ux3.DataSetItem","parameters":{"sIconSrc":"type: sap.ui.core.URI, description: New value for property <code>iconSrc<\/code>"}},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nsubtitle\n\nDefault value is <code>Subtitle<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","setCheckable":{"!description":"Sets a new value for property {@link #getCheckable checkable}.\n\ncheckable\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCheckable: Boolean) -> sap.ui.ux3.DataSetItem","parameters":{"bCheckable":"type: boolean, description: New value for property <code>checkable<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\ntitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Title<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.DataSetItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","getIconSrc":{"!description":"Gets current value of property {@link #getIconSrc iconSrc}.\n\nimage","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new DataSetItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIconSrc iconSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string (default: Title)<\/li>\n<li>{@link #getCheckable checkable} : boolean (default: true)<\/li>\n<li>{@link #getSubtitle subtitle} : string (default: Subtitle)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selected selected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\ntitle\n\nDefault value is <code>Title<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/ux3/DataSetItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>DataSet Item","fireSelected":{"!description":"Fires event {@link #event:selected selected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.DataSetItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCheckable":{"!description":"Gets current value of property {@link #getCheckable checkable}.\n\ncheckable\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nsubtitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Subtitle<\/code>.","!static":false,"!category":"function","!type":"fn(sSubtitle: String) -> sap.ui.ux3.DataSetItem","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}}},"sap.ui.ux3.OverlayContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.OverlayContainer"},"sap.ui.ux3.Exact":{"detachRefineSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:refineSearch refineSearch} event of this <code>sap.ui.ux3.Exact<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","!category":"class","getResultText":{"!description":"Gets current value of property {@link #getResultText resultText}.\n\nA title text which is displayed above the result section","!static":false,"!category":"function","!type":"fn() -> String"},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.ux3.Exact<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroySettingsMenu":{"!description":"Destroys the settingsMenu in the aggregation {@link #getSettingsMenu settingsMenu}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Exact"},"getSettingsMenu":{"!description":"Gets content of aggregation {@link #getSettingsMenu settingsMenu}.\n\nDefines the 'Settings' button in the browse section tool bar","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.Menu"},"!constructorDescription":"Constructor for a new Exact.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getResultText resultText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSettingsMenu settingsMenu} : sap.ui.commons.Menu<\/li>\n<li>{@link #getAttributes attributes} : sap.ui.ux3.ExactAttribute[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:refineSearch refineSearch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute whose index is looked for"}},"removeAttribute":{"!description":"Removes a attribute from the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","parameters":{"vAttribute":"type: int|string|sap.ui.ux3.ExactAttribute, description: The attribute to remove or its index or id"}},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Exact"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>A comprehensive UI design approach with graphical and functional elements for searching data, exploring data, and acting on the data (\"Explore and Act (Exact) Pattern\").","removeAllAttributes":{"!description":"Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Exact.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getResultArea":{"!description":"Returns the ExactArea representing the result section. Arbitrary content can be added here.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactArea"},"getAttributes":{"!description":"Gets content of aggregation {@link #getAttributes attributes}.\n\nThe attributes which shall be available to refine the search","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"setResultText":{"!description":"Sets a new value for property {@link #getResultText resultText}.\n\nA title text which is displayed above the result section\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sResultText: String) -> sap.ui.ux3.Exact","parameters":{"sResultText":"type: string, description: New value for property <code>resultText<\/code>"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.ux3.Exact<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Exact<\/code> itself.\n\nEvent is fired when the search button is clicked","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Exact<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Exact with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSearchField":{"!description":"Returns the SearchField control which is used by the Exact control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.commons.SearchField"},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Exact","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/ux3/Exact","addAttribute":{"!description":"Adds some attribute to the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.Exact","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to add; if empty, nothing is inserted"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>A comprehensive UI design approach with graphical and functional elements for searching data, exploring data, and acting on the data (\"Explore and Act (Exact) Pattern\").","fireRefineSearch":{"!description":"Fires event {@link #event:refineSearch refineSearch} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Exact","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertAttribute":{"!description":"Inserts a attribute into the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.Exact","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attribute should be inserted at; for a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"}},"setSettingsMenu":{"!description":"Sets the aggregated {@link #getSettingsMenu settingsMenu}.","!static":false,"!category":"function","!type":"fn(oSettingsMenu: sap.ui.commons.Menu) -> sap.ui.ux3.Exact","parameters":{"oSettingsMenu":"type: sap.ui.commons.Menu, description: The settingsMenu to set"}},"attachRefineSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:refineSearch refineSearch} event of this <code>sap.ui.ux3.Exact<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Exact<\/code> itself.\n\nEvent which is fired when an attribute is selected or unselected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Exact","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Exact<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.ux3.ThingViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingViewer"},"sap.ui.ux3.VisibleItemCountMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>VisibleItemCountMode of the FacetFilter defines if the FacetFilter takes the whole available height (Auto) in the surrounding container, or is so high as needed to show 5 Items (\"Fixed \" - default).","Auto":{"!description":"The FacetFilter automatically fills the height of the surrounding container. The visibleItemCount property is automatically changed accordingly.","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","!category":"static class","Fixed":{"!description":"The FacetFilter always has as many items in the FacetFilterList as defined in the visibleItemCount property.","!category":"enum","!type":"String"}},"sap.ui.ux3.CollectionInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.CollectionInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.CollectionInspector"},"sap.ui.ux3.ThingInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingInspector"},"sap.ui.ux3.ThingAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ThingAction"},"sap.ui.ux3.ExactAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactAttribute"},"sap.ui.ux3.Feed":{"detachChunkAdded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:chunkAdded chunkAdded} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindChunks":{"!description":"Unbinds aggregation {@link #getChunks chunks} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"destroyToolsMenuItems":{"!description":"Destroys all the toolsMenuItems in the aggregation {@link #getToolsMenuItems toolsMenuItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"indexOfToolsMenuItem":{"!description":"Checks for the provided <code>sap.ui.commons.MenuItem<\/code> in the aggregation {@link #getToolsMenuItems toolsMenuItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem) -> Number","parameters":{"oToolsMenuItem":"type: sap.ui.commons.MenuItem, description: The toolsMenuItem whose index is looked for"}},"addChunk":{"!description":"Adds some chunk to the aggregation {@link #getChunks chunks}.","!static":false,"!category":"function","!type":"fn(oChunk: sap.ui.ux3.FeedChunk) -> sap.ui.ux3.Feed","parameters":{"oChunk":"type: sap.ui.ux3.FeedChunk, description: The chunk to add; if empty, nothing is inserted"}},"setFeederThumbnailSrc":{"!description":"Sets a new value for property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nThe path to the thumbnail image used for the feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.Feed","parameters":{"sFeederThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>feederThumbnailSrc<\/code>"}},"removeToolsMenuItem":{"!description":"Removes a toolsMenuItem from the aggregation {@link #getToolsMenuItems toolsMenuItems}.","!static":false,"!category":"function","!type":"fn(vToolsMenuItem: Number | String | sap.ui.commons.MenuItem) -> sap.ui.commons.MenuItem","parameters":{"vToolsMenuItem":"type: int|string|sap.ui.commons.MenuItem, description: The toolsMenuItem to remove or its index or id"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text of the Feed. If no text is entered \"FEED\" is displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"fireFilterChange":{"!description":"Fires event {@link #event:filterChange filterChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feed","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachToggleLive":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggleLive toggleLive} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindToolsMenuItems":{"!description":"Unbinds aggregation {@link #getToolsMenuItems toolsMenuItems} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"bindToolsMenuItems":{"!description":"Binds aggregation {@link #getToolsMenuItems toolsMenuItems} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getFeederThumbnailSrc":{"!description":"Gets current value of property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nThe path to the thumbnail image used for the feeder","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"attachChunkAdded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:chunkAdded chunkAdded} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when a new chunk is added","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feed<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use <b>any<\/b> <code>sap.ui.layout<\/code> container control.<br>A container control representing a full feed page, including feeder and updates.","fireToolsItemSelected":{"!description":"Fires event {@link #event:toolsItemSelected toolsItemSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feed","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Feed.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.ux3.Feed","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the filterItem should be inserted at; for a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value greater than the current size of the aggregation, the filterItem is inserted at the last position","oFilterItem":"type: sap.ui.core.ListItem, description: The filterItem to insert; if empty, nothing is inserted"}},"setLive":{"!description":"Sets a new value for property {@link #getLive live}.\n\nSpecifies whether the feed shall be in live mode\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bLive: Boolean) -> sap.ui.ux3.Feed","parameters":{"bLive":"type: boolean, description: New value for property <code>live<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text of the Feed. If no text is entered \"FEED\" is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.Feed","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeAllToolsMenuItems":{"!description":"Removes all the controls from the aggregation {@link #getToolsMenuItems toolsMenuItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.MenuItem]"},"removeAllChunks":{"!description":"Removes all the controls from the aggregation {@link #getChunks chunks}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FeedChunk]"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feed with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addToolsMenuItem":{"!description":"Adds some toolsMenuItem to the aggregation {@link #getToolsMenuItems toolsMenuItems}.","!static":false,"!category":"function","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem) -> sap.ui.ux3.Feed","parameters":{"oToolsMenuItem":"type: sap.ui.commons.MenuItem, description: The toolsMenuItem to add; if empty, nothing is inserted"}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feed","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/ux3/Feed","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use <b>any<\/b> <code>sap.ui.layout<\/code> container control.<br>A container control representing a full feed page, including feeder and updates.","insertToolsMenuItem":{"!description":"Inserts a toolsMenuItem into the aggregation {@link #getToolsMenuItems toolsMenuItems}.","!static":false,"!category":"function","!type":"fn(oToolsMenuItem: sap.ui.commons.MenuItem, iIndex: Number) -> sap.ui.ux3.Feed","parameters":{"oToolsMenuItem":"type: sap.ui.commons.MenuItem, description: The toolsMenuItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the toolsMenuItem should be inserted at; for a negative value of <code>iIndex<\/code>, the toolsMenuItem is inserted at position 0; for a value greater than the current size of the aggregation, the toolsMenuItem is inserted at the last position"}},"addFilterItem":{"!description":"Adds some filterItem to the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.core.ListItem) -> sap.ui.ux3.Feed","parameters":{"oFilterItem":"type: sap.ui.core.ListItem, description: The filterItem to add; if empty, nothing is inserted"}},"removeChunk":{"!description":"Removes a chunk from the aggregation {@link #getChunks chunks}.","!static":false,"!category":"function","!type":"fn(vChunk: Number | String | sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","parameters":{"vChunk":"type: int|string|sap.ui.ux3.FeedChunk, description: The chunk to remove or its index or id"}},"getFeederSender":{"!description":"Gets current value of property {@link #getFeederSender feederSender}.\n\nThe sender of the feeder","!static":false,"!category":"function","!type":"fn() -> String"},"destroyChunks":{"!description":"Destroys all the chunks in the aggregation {@link #getChunks chunks}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"fireChunkAdded":{"!description":"Fires event {@link #event:chunkAdded chunkAdded} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feed","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireToggleLive":{"!description":"Fires event {@link #event:toggleLive toggleLive} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feed","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Control","detachFilterChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filterChange filterChange} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachToolsItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toolsItemSelected toolsItemSelected} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new Feed.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFeederThumbnailSrc feederThumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getFeederSender feederSender} : string<\/li>\n<li>{@link #getLive live} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.core.ListItem[]<\/li>\n<li>{@link #getChunks chunks} : sap.ui.ux3.FeedChunk[]<\/li>\n<li>{@link #getToolsMenuItems toolsMenuItems} : sap.ui.commons.MenuItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filterChange filterChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:chunkAdded chunkAdded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:toolsItemSelected toolsItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:toggleLive toggleLive} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeFilterItem":{"!description":"Removes a filterItem from the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","parameters":{"vFilterItem":"type: int|string|sap.ui.core.ListItem, description: The filterItem to remove or its index or id"}},"setFeederSender":{"!description":"Sets a new value for property {@link #getFeederSender feederSender}.\n\nThe sender of the feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederSender: String) -> sap.ui.ux3.Feed","parameters":{"sFeederSender":"type: string, description: New value for property <code>feederSender<\/code>"}},"getToolsMenuItems":{"!description":"Gets content of aggregation {@link #getToolsMenuItems toolsMenuItems}.\n\nMenuItems to open when the tool button is clicked by the user","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.MenuItem]"},"attachFilterChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filterChange filterChange} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the filter is changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feed<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getLive":{"!description":"Gets current value of property {@link #getLive live}.\n\nSpecifies whether the feed shall be in live mode\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterItems":{"!description":"Gets content of aggregation {@link #getFilterItems filterItems}.\n\nItems of the filter","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"bindChunks":{"!description":"Binds aggregation {@link #getChunks chunks} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAllFilterItems":{"!description":"Removes all the controls from the aggregation {@link #getFilterItems filterItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"getChunks":{"!description":"Gets content of aggregation {@link #getChunks chunks}.\n\nThe chunks","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FeedChunk]"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the search function on SearchField is triggered","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feed<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"unbindFilterItems":{"!description":"Unbinds aggregation {@link #getFilterItems filterItems} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Feed"},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.core.ListItem) -> Number","parameters":{"oFilterItem":"type: sap.ui.core.ListItem, description: The filterItem whose index is looked for"}},"attachToggleLive":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggleLive toggleLive} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when the live mode has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feed<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachToolsItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toolsItemSelected toolsItemSelected} event of this <code>sap.ui.ux3.Feed<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feed<\/code> itself.\n\nEvent is fired when an item from the tools MenuButton was selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feed","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feed<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"bindFilterItems":{"!description":"Binds aggregation {@link #getFilterItems filterItems} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.Feed","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfChunk":{"!description":"Checks for the provided <code>sap.ui.ux3.FeedChunk<\/code> in the aggregation {@link #getChunks chunks}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oChunk: sap.ui.ux3.FeedChunk) -> Number","parameters":{"oChunk":"type: sap.ui.ux3.FeedChunk, description: The chunk whose index is looked for"}},"insertChunk":{"!description":"Inserts a chunk into the aggregation {@link #getChunks chunks}.","!static":false,"!category":"function","!type":"fn(oChunk: sap.ui.ux3.FeedChunk, iIndex: Number) -> sap.ui.ux3.Feed","parameters":{"oChunk":"type: sap.ui.ux3.FeedChunk, description: The chunk to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the chunk should be inserted at; for a negative value of <code>iIndex<\/code>, the chunk is inserted at position 0; for a value greater than the current size of the aggregation, the chunk is inserted at the last position"}}},"sap.ui.ux3.QuickView":{"setUpdateActionEnabled":{"!description":"Sets a new value for property {@link #getUpdateActionEnabled updateActionEnabled}.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpdateActionEnabled: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bUpdateActionEnabled":"type: boolean, description: New value for property <code>updateActionEnabled<\/code>"}},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction, iIndex: Number) -> sap.ui.ux3.QuickView","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.ux3.ThingAction, description: The action to insert; if empty, nothing is inserted"}},"getSecondTitle":{"!description":"Gets current value of property {@link #getSecondTitle secondTitle}.\n\nOptional short text shown under the firstTitle","!static":false,"!category":"function","!type":"fn() -> String"},"setFlagState":{"!description":"Sets a new value for property {@link #getFlagState flagState}.\n\nState of Flag Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bFlagState":"type: boolean, description: New value for property <code>flagState<\/code>"}},"setFlagActionEnabled":{"!description":"Sets a new value for property {@link #getFlagActionEnabled flagActionEnabled}.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFlagActionEnabled: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bFlagActionEnabled":"type: boolean, description: New value for property <code>flagActionEnabled<\/code>"}},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> Number","parameters":{"oAction":"type: sap.ui.ux3.ThingAction, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingAction]"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.QuickView"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.QuickView<\/code> control.<br>QuickView is a small popup with a short overview of a Thing. QuickView is shown when a user holds the mouse pointer over a related screen element.","fireFeedSubmit":{"!description":"Fires event {@link #event:feedSubmit feedSubmit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.QuickView","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingAction","parameters":{"vAction":"type: int|string|sap.ui.ux3.ThingAction, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.QuickView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFollowState":{"!description":"Sets a new value for property {@link #getFollowState followState}.\n\nFollow State of a Thing\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.QuickView","parameters":{"sFollowState":"type: sap.ui.ux3.FollowActionState, description: New value for property <code>followState<\/code>"}},"setFirstTitle":{"!description":"Sets a new value for property {@link #getFirstTitle firstTitle}.\n\nThing name shown in the header of the QuickView\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFirstTitle: String) -> sap.ui.ux3.QuickView","parameters":{"sFirstTitle":"type: string, description: New value for property <code>firstTitle<\/code>"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.QuickView"},"setActionBar":{"!description":"Sets the aggregated {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.QuickView","parameters":{"oActionBar":"type: sap.ui.ux3.ActionBar, description: The actionBar to set"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","parameters":{"vContent":"type: int|string|sap.ui.core.Element, description: The content to remove or its index or id"}},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.QuickView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nURI of the Thing icon image (mandatory). The image is scaled down to the maximal size of 32 pixel (vertical or horizontal).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.QuickView","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setOpenActionEnabled":{"!description":"Sets a new value for property {@link #getOpenActionEnabled openActionEnabled}.\n\nOpen Thing action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bOpenActionEnabled: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bOpenActionEnabled":"type: boolean, description: New value for property <code>openActionEnabled<\/code>"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFavoriteActionEnabled":{"!description":"Sets a new value for property {@link #getFavoriteActionEnabled favoriteActionEnabled}.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFavoriteActionEnabled: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bFavoriteActionEnabled":"type: boolean, description: New value for property <code>favoriteActionEnabled<\/code>"}},"!module":"sap/ui/ux3/QuickView","getFavoriteActionEnabled":{"!description":"Gets current value of property {@link #getFavoriteActionEnabled favoriteActionEnabled}.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.QuickView<\/code> control.<br>QuickView is a small popup with a short overview of a Thing. QuickView is shown when a user holds the mouse pointer over a related screen element.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThing type (mandatory) like Account, Material, Employee etc. is displayed in a header at the top part of the QuickView.","!static":false,"!category":"function","!type":"fn() -> String"},"getFlagState":{"!description":"Gets current value of property {@link #getFlagState flagState}.\n\nState of Flag Action\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nEvent is fired when a user clicks on the firstTitle link. Call the preventDefault method of the event object to cancel browser navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element, iIndex: Number) -> sap.ui.ux3.QuickView","parameters":{"oContent":"type: sap.ui.core.Element, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getFirstTitleHref":{"!description":"Gets current value of property {@link #getFirstTitleHref firstTitleHref}.\n\nURI to Thing Inspector","!static":false,"!category":"function","!type":"fn() -> String"},"getOpenActionEnabled":{"!description":"Gets current value of property {@link #getOpenActionEnabled openActionEnabled}.\n\nOpen Thing action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFirstTitleHref":{"!description":"Sets a new value for property {@link #getFirstTitleHref firstTitleHref}.\n\nURI to Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFirstTitleHref: String) -> sap.ui.ux3.QuickView","parameters":{"sFirstTitleHref":"type: string, description: New value for property <code>firstTitleHref<\/code>"}},"getShowActionBar":{"!description":"Gets current value of property {@link #getShowActionBar showActionBar}.\n\nShow Action Bar\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nBody content of the QuickView","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"!proto":"sap.ui.commons.CalloutBase","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nActions of a Thing","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingAction]"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nControl width as common CSS-size (px or % as unit, for example).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setFollowActionEnabled":{"!description":"Sets a new value for property {@link #getFollowActionEnabled followActionEnabled}.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFollowActionEnabled: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bFollowActionEnabled":"type: boolean, description: New value for property <code>followActionEnabled<\/code>"}},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> sap.ui.ux3.QuickView","parameters":{"oAction":"type: sap.ui.ux3.ThingAction, description: The action to add; if empty, nothing is inserted"}},"getFlagActionEnabled":{"!description":"Gets current value of property {@link #getFlagActionEnabled flagActionEnabled}.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new QuickView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getFirstTitle firstTitle} : string<\/li>\n<li>{@link #getFirstTitleHref firstTitleHref} : string<\/li>\n<li>{@link #getSecondTitle secondTitle} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowActionBar showActionBar} : boolean (default: true)<\/li>\n<li>{@link #getFollowState followState} : sap.ui.ux3.FollowActionState (default: Default)<\/li>\n<li>{@link #getFlagState flagState} : boolean (default: false)<\/li>\n<li>{@link #getFavoriteState favoriteState} : boolean (default: false)<\/li>\n<li>{@link #getFavoriteActionEnabled favoriteActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUpdateActionEnabled updateActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFollowActionEnabled followActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFlagActionEnabled flagActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getOpenActionEnabled openActionEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Element[]<\/li>\n<li>{@link #getActions actions} : sap.ui.ux3.ThingAction[]<\/li>\n<li>{@link #getActionBar actionBar} : sap.ui.ux3.ActionBar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:actionSelected actionSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:feedSubmit feedSubmit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.CalloutBase#constructor sap.ui.commons.CalloutBase}\ncan be used as well.","setFavoriteState":{"!description":"Sets a new value for property {@link #getFavoriteState favoriteState}.\n\nState Of favorite Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bFavoriteState":"type: boolean, description: New value for property <code>favoriteState<\/code>"}},"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nAction is selected in Action Bar","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element) -> Number","parameters":{"oContent":"type: sap.ui.core.Element, description: The content whose index is looked for"}},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.QuickView"},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Element) -> sap.ui.ux3.QuickView","parameters":{"oContent":"type: sap.ui.core.Element, description: The content to add; if empty, nothing is inserted"}},"setSecondTitle":{"!description":"Sets a new value for property {@link #getSecondTitle secondTitle}.\n\nOptional short text shown under the firstTitle\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondTitle: String) -> sap.ui.ux3.QuickView","parameters":{"sSecondTitle":"type: string, description: New value for property <code>secondTitle<\/code>"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nThing type (mandatory) like Account, Material, Employee etc. is displayed in a header at the top part of the QuickView.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.ui.ux3.QuickView","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nControl width as common CSS-size (px or % as unit, for example).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.QuickView","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nURI of the Thing icon image (mandatory). The image is scaled down to the maximal size of 32 pixel (vertical or horizontal).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getFavoriteState":{"!description":"Gets current value of property {@link #getFavoriteState favoriteState}.\n\nState Of favorite Action\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowActionBar":{"!description":"Sets a new value for property {@link #getShowActionBar showActionBar}.\n\nShow Action Bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowActionBar: Boolean) -> sap.ui.ux3.QuickView","parameters":{"bShowActionBar":"type: boolean, description: New value for property <code>showActionBar<\/code>"}},"getFollowActionEnabled":{"!description":"Gets current value of property {@link #getFollowActionEnabled followActionEnabled}.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFirstTitle":{"!description":"Gets current value of property {@link #getFirstTitle firstTitle}.\n\nThing name shown in the header of the QuickView","!static":false,"!category":"function","!type":"fn() -> String"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.QuickView<\/code> itself.\n\nFired when a new feed entry is submitted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUpdateActionEnabled":{"!description":"Gets current value of property {@link #getUpdateActionEnabled updateActionEnabled}.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActionBar":{"!description":"Gets content of aggregation {@link #getActionBar actionBar}.\n\nActionBar. If no actionBar is set a default ActionBar will be created. In any case, ActionBar is displayed only when the showActionBar property is set to true.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ActionBar"},"getFollowState":{"!description":"Gets current value of property {@link #getFollowState followState}.\n\nFollow State of a Thing\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FollowActionState"},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.ux3.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireActionSelected":{"!description":"Fires event {@link #event:actionSelected actionSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.QuickView","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.ux3.ToolPopup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ToolPopup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ToolPopup"},"sap.ui.ux3.QuickView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.QuickView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.QuickView"},"sap.ui.ux3.Collection_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Collection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Collection"},"sap.ui.ux3.Notifier_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Notifier with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Notifier"},"sap.ui.ux3.ActionBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ActionBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ActionBar"},"sap.ui.ux3.ToolPopup":{"fireClose":{"!description":"Fires event {@link #event:close close} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setInitialFocus":{"!description":"Sets the associated {@link #getInitialFocus initialFocus}.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","parameters":{"oInitialFocus":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation {@link #getButtons buttons}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ToolPopup"},"setInverted":{"!description":"Sets a new value for property {@link #getInverted inverted}.\n\nSpecifies whether the ToolPopup has a dark or bright background. If set to true the background and borders will be dark. If false they will be bright. This property only has an effect for the GoldReflection-theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInverted: Boolean) -> sap.ui.ux3.ToolPopup","parameters":{"bInverted":"type: boolean, description: New value for property <code>inverted<\/code>"}},"setPosition":{"!description":"Sets the position of the pop up, the same parameters as for sap.ui.core.Popup can be used.","!static":false,"!category":"function","!type":"fn()"},"getMaxWidth":{"!description":"Gets current value of property {@link #getMaxWidth maxWidth}.\n\nForces a maximum width of the ToolPopup in pixels.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDetermines the title displayed in the pop up window","!static":false,"!category":"function","!type":"fn() -> String"},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:close close} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when the popup closes because the user pressed Escape or the ToolPopup Button in the Shell. This is called before the closing animation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setAutoCloseAreas":{"!description":"This is just a forward to the Popup's function (sap.ui.core.Popup.setAutoCloseAreas) with the same functionality.","!static":false,"!category":"function","!type":"fn(aAutoCloseAreas: [Element])","parameters":{"aAutoCloseAreas":"type: Element[], description: undefined"}},"removeFocusableArea":{"!description":"Removes an ID to the Popup that should be focusable as well when using <code>autoclose<\/code>. Chaining is only possible if a valid type (string) is given.","!static":false,"!category":"function","!type":"fn(sID?: String)","parameters":{"sID":"type: string, description: ID of the corresponding element"}},"addFocusableArea":{"!description":"Adds an ID to the Popup that should be focusable as well when using <code>autoclose<\/code>. Chaining is only possible if a valid type (string) is given.","!static":false,"!category":"function","!type":"fn(sID?: String)","parameters":{"sID":"type: string, description: ID of the corresponding element that should be focusable as well"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ToolPopup"},"getMaxHeight":{"!description":"Gets current value of property {@link #getMaxHeight maxHeight}.\n\nForces a maximum height of the ToolPopup in pixels. If the ToolPopup content is higher than the ToolPopup, the content will be scrollable.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>A popup which the user can open from the Shell's tool pane. Generally, the starting point would be an icon. For this pop up, buttons can be defined with any text; therefore, it has the same purpose and similar look like any common dialog box. A ToolPopup can have any content. Depending on the application type and design, the structure of the texts and input fields can be for example form-like.","detachEnter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:enter enter} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:close close} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ToolPopup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getModal":{"!description":"Gets current value of property {@link #getModal modal}.\n\nSpecifies whether the popup is modal and blocks any user-interaction with controls in the background. Changing this property while the ToolPopup is open will not have any effect. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireOpened":{"!description":"Fires event {@link #event:opened opened} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getInverted":{"!description":"Gets current value of property {@link #getInverted inverted}.\n\nSpecifies whether the ToolPopup has a dark or bright background. If set to true the background and borders will be dark. If false they will be bright. This property only has an effect for the GoldReflection-theme.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDetermines the title displayed in the pop up window\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.ToolPopup","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addButton":{"!description":"Adds some button to the aggregation {@link #getButtons buttons}.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","parameters":{"oButton":"type: sap.ui.core.Control, description: The button to add; if empty, nothing is inserted"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nThis event is fired after the ToolPopup has finished its closing animation. It is called for EVERY close, regardless of whether the user has triggered the close or whether the ToolPopup was closed via API call.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getButtons buttons}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control) -> Number","parameters":{"oButton":"type: sap.ui.core.Control, description: The button whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ToolPopup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"Indicates whether the pop up is currently open","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/ux3/ToolPopup","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getCloseDuration":{"!description":"Gets current value of property {@link #getCloseDuration closeDuration}.\n\nTime in milliseconds for the close animation.\n\nDefault value is <code>400<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"insertButton":{"!description":"Inserts a button into the aggregation {@link #getButtons buttons}.","!static":false,"!category":"function","!type":"fn(oButton: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ToolPopup","parameters":{"oButton":"type: sap.ui.core.Control, description: The button to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the button should be inserted at; for a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value greater than the current size of the aggregation, the button is inserted at the last position"}},"setModal":{"!description":"Sets a new value for property {@link #getModal modal}.\n\nSpecifies whether the popup is modal and blocks any user-interaction with controls in the background. Changing this property while the ToolPopup is open will not have any effect. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bModal: Boolean) -> sap.ui.ux3.ToolPopup","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>A popup which the user can open from the Shell's tool pane. Generally, the starting point would be an icon. For this pop up, buttons can be defined with any text; therefore, it has the same purpose and similar look like any common dialog box. A ToolPopup can have any content. Depending on the application type and design, the structure of the texts and input fields can be for example form-like.","getAutoClose":{"!description":"Gets current value of property {@link #getAutoClose autoClose}.\n\nDetermines whether the ToolPopup will auto close when it loses focus. If the user e.g. clicks outside of the ToolPopup it will be closed. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getOpener":{"!description":"ID of the element which is the current target of the association {@link #getOpener opener}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ToolPopup","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation {@link #getButtons buttons}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireEnter":{"!description":"Fires event {@link #event:enter enter} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:open open} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireOpen":{"!description":"Fires event {@link #event:open open} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:opened opened} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:open open} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when the popup opens","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireIconChanged":{"!description":"Fires event {@link #event:iconChanged iconChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the popup","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getIconHover":{"!description":"Gets current value of property {@link #getIconHover iconHover}.\n\nThis property is relevant for Shell use: The URL to the icon in hover state, displayed in the tool area which is used to open the popup.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association {@link #getInitialFocus initialFocus}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"setOpenDuration":{"!description":"Sets a new value for property {@link #getOpenDuration openDuration}.\n\nTime in milliseconds for the open animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>400<\/code>.","!static":false,"!category":"function","!type":"fn(iOpenDuration: Number) -> sap.ui.ux3.ToolPopup","parameters":{"iOpenDuration":"type: int, description: New value for property <code>openDuration<\/code>"}},"!constructorDescription":"Constructor for a new ToolPopup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHover iconHover} : sap.ui.core.URI<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getInverted inverted} : boolean (default: true)<\/li>\n<li>{@link #getAutoClose autoClose} : boolean (default: false)<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getOpenDuration openDuration} : int (default: 400)<\/li>\n<li>{@link #getCloseDuration closeDuration} : int (default: 400)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getOpener opener} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getDefaultButton defaultButton} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:enter enter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconChanged iconChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMaxHeight":{"!description":"Sets a new value for property {@link #getMaxHeight maxHeight}.\n\nForces a maximum height of the ToolPopup in pixels. If the ToolPopup content is higher than the ToolPopup, the content will be scrollable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.ToolPopup","parameters":{"sMaxHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>maxHeight<\/code>"}},"attachEnter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:enter enter} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired whenever the user clicks the Enter or the Enter key inside the pop up","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnabled":{"!description":"Indicates whether the ToolPopup is currently enabled or not.\n\nApplications can't control the enabled state via a property. A ToolPopup is implicitly enabled depending on its <code>openState<\/code>. Descendant controls that honor the enabled state of their ancestors will appear disabled after the ToolPopup is closed.\n\nSince 1.13.1. Whether a dialog is regarded as \"enabled\" during the state transitions (OPENING, CLOSING) is not fully decided. Currently, it is enabled during the OPENING phase and disabled during the CLOSING phase. The only potential change would be to treat the OPENING phase as disabled as well. Applications should be prepared to receive events from \"enabled\" controls after they called open() on the dialog until close() is called on it. If the mentioned potential change should happen, the dialog will become enabled only after the transition to OPEN. Events from \"enabled\" children then can still only arrive between open() and close(), so applications that obey the previous rule should continue to work. Only end users or code that explicitly triggers pseudo user events would notice a difference. <br> A second aspect that might change is the visual behavior of the content: during the CLOSING phase it 'looks' enabled but in fact it is already disabled. This avoids unnecessary redraws for content that becomes hidden soon. Should this show to be confusing for end users, it might be changed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDefaultButton":{"!description":"Sets the associated {@link #getDefaultButton defaultButton}.","!static":false,"!category":"function","!type":"fn(oDefaultButton: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","parameters":{"oDefaultButton":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this defaultButton association; alternatively, an element instance may be given"}},"close":{"!description":"Closes the pop up. Can be called by the Shell when the pop up's button is clicked again; or by the application when the interaction in the pop up has been completed or canceled.","!static":false,"!category":"function","!type":"fn(bPreventRestoreFocus: Boolean) -> sap.ui.ux3.ToolPopup","parameters":{"bPreventRestoreFocus":"type: boolean, description: If set, the focus is NOT restored to the element that had the focus before the ToolPopup was opened. This makes sense when the ToolPopup is closed programmatically from a different area of the application (outside the ToolPopup) and the focus should not move aways from that place."}},"getButtons":{"!description":"Gets content of aggregation {@link #getButtons buttons}.\n\nDefines the buttons to appear in the popup","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:opened opened} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is being fired after the ToolPopup has been opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"attachIconChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:iconChanged iconChanged} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ToolPopup<\/code> itself.\n\nEvent is fired when one of the icon properties is modified (Note: The icon is not rendered by the ToolPopup). To be used by other controls which want to update the icon in their UI.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ToolPopup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setOpener":{"!description":"Sets the associated {@link #getOpener opener}.","!static":false,"!category":"function","!type":"fn(oOpener: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","parameters":{"oOpener":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this opener association; alternatively, an element instance may be given"}},"detachIconChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:iconChanged iconChanged} event of this <code>sap.ui.ux3.ToolPopup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ToolPopup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDefaultButton":{"!description":"ID of the element which is the current target of the association {@link #getDefaultButton defaultButton}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ToolPopup","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThis property is relevant for Shell use: The URL to the icon displayed in the tool area which is used to open the ToolPopup. The recommended size is 32x32px, including some transparent border. Therefore, the content will cover about 20x20px.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getOpenDuration":{"!description":"Gets current value of property {@link #getOpenDuration openDuration}.\n\nTime in milliseconds for the open animation.\n\nDefault value is <code>400<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setCloseDuration":{"!description":"Sets a new value for property {@link #getCloseDuration closeDuration}.\n\nTime in milliseconds for the close animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>400<\/code>.","!static":false,"!category":"function","!type":"fn(iCloseDuration: Number) -> sap.ui.ux3.ToolPopup","parameters":{"iCloseDuration":"type: int, description: New value for property <code>closeDuration<\/code>"}},"removeButton":{"!description":"Removes a button from the aggregation {@link #getButtons buttons}.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vButton":"type: int|string|sap.ui.core.Control, description: The button to remove or its index or id"}},"open":{"!description":"Opens the ToolPopup. It is checked which control wants to open the ToolPopup. The Shell was previously set as parent so the corresponding parent element is used to set the correct position of the ToolPopup. If another control (i.e. a button) opens the ToolPopup, the control must be previously set as <code>opener<\/code> via <code>setOpener<\/code> to the ToolPopup. Corresponding to this opener the position of the ToolPopup will be set. It's also possible to set the position above, below or left from the opener. This can be done via the possible parameters <code>my<\/code> and <code>at<\/code>. These parameters refers to work the same way as they do of sap.ui.core.Popup.open.","!static":false,"!category":"function","!type":"fn(my?: sap.ui.core.Popup.Dock, at?: sap.ui.core.Popup.Dock) -> sap.ui.ux3.ToolPopup","parameters":{"at":"type: sap.ui.core.Popup.Dock, description: The \"of\" element's reference point for docking to","my":"type: sap.ui.core.Popup.Dock, description: The ToolPopup's content reference position for docking"}},"setAutoClose":{"!description":"Sets a new value for property {@link #getAutoClose autoClose}.\n\nDetermines whether the ToolPopup will auto close when it loses focus. If the user e.g. clicks outside of the ToolPopup it will be closed. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoClose: Boolean) -> sap.ui.ux3.ToolPopup","parameters":{"bAutoClose":"type: boolean, description: New value for property <code>autoClose<\/code>"}}},"sap.ui.ux3.OverlayDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.OverlayDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.OverlayDialog"},"sap.ui.ux3.ShellDesignType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Available shell design types.","!module":"sap/ui/ux3/library","Light":{"!description":"A lighter design. Should be used in combination with the Standard header type.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"The standard Shell design (dark).","!category":"enum","!type":"String"},"Crystal":{"!description":"An even lighter design. It borrows most of its properties from the Light design and just changes a few details like the header colors in order to have a blue design within gold reflection.","!category":"enum","!type":"String"}},"sap.ui.ux3.ExactOrder":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Defines the order of the sub lists of a list in the ExactBrowser.","!module":"sap/ui/ux3/library","Select":{"!description":"The order of the sub lists is defined by the selection order of the user.","!category":"enum","!type":"String"},"!category":"static class","Fixed":{"!description":"The order of the sub lists is defined by order of the defined sub attributes.","!category":"enum","!type":"String"}},"sap.ui.ux3.ActionBar":{"getShowUpdate":{"!description":"Gets current value of property {@link #getShowUpdate showUpdate}.\n\nIndicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","setDividerWidth":{"!description":"Sets a new value for property {@link #getDividerWidth dividerWidth}.\n\nThe minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDividerWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.ActionBar","parameters":{"sDividerWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>dividerWidth<\/code>"}},"setFlagState":{"!description":"Sets a new value for property {@link #getFlagState flagState}.\n\nIndicates whether \u201cMark for Follow Up\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bFlagState":"type: boolean, description: New value for property <code>flagState<\/code>"}},"!category":"class","setShowFollow":{"!description":"Sets a new value for property {@link #getShowFollow showFollow}.\n\nIndicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFollow: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bShowFollow":"type: boolean, description: New value for property <code>showFollow<\/code>"}},"isActive":{"!description":"Checks whether the control is still valid (is in the DOM). ActionBar instance is rendered if and only if 'isActive' returns 'true'. This check is called implicitely by the rendere, MUST not be removed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setThingIconURI":{"!description":"Sets a new value for property {@link #getThingIconURI thingIconURI}.\n\nThe thing icon uri. Icon will be displayed in Feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThingIconURI: sap.ui.core.URI) -> sap.ui.ux3.ActionBar","parameters":{"sThingIconURI":"type: sap.ui.core.URI, description: New value for property <code>thingIconURI<\/code>"}},"setShowFlag":{"!description":"Sets a new value for property {@link #getShowFlag showFlag}.\n\nIndicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFlag: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bShowFlag":"type: boolean, description: New value for property <code>showFlag<\/code>"}},"!constructorDescription":"Constructor for a new ActionBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFollowState followState} : sap.ui.ux3.FollowActionState (default: Default)<\/li>\n<li>{@link #getFlagState flagState} : boolean<\/li>\n<li>{@link #getFavoriteState favoriteState} : boolean<\/li>\n<li>{@link #getUpdateState updateState} : boolean<\/li>\n<li>{@link #getThingIconURI thingIconURI} : sap.ui.core.URI<\/li>\n<li>{@link #getAlwaysShowMoreMenu alwaysShowMoreMenu} : boolean (default: true)<\/li>\n<li>{@link #getShowUpdate showUpdate} : boolean (default: true)<\/li>\n<li>{@link #getShowFollow showFollow} : boolean (default: true)<\/li>\n<li>{@link #getShowFlag showFlag} : boolean (default: true)<\/li>\n<li>{@link #getShowFavorite showFavorite} : boolean (default: true)<\/li>\n<li>{@link #getShowOpen showOpen} : boolean (default: true)<\/li>\n<li>{@link #getDividerWidth dividerWidth} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBusinessActions businessActions} : sap.ui.ux3.ThingAction[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:actionSelected actionSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:feedSubmit feedSubmit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setShowUpdate":{"!description":"Sets a new value for property {@link #getShowUpdate showUpdate}.\n\nIndicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowUpdate: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bShowUpdate":"type: boolean, description: New value for property <code>showUpdate<\/code>"}},"setFavoriteState":{"!description":"Sets a new value for property {@link #getFavoriteState favoriteState}.\n\nIndicates whether \u201cFavorite\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bFavoriteState":"type: boolean, description: New value for property <code>favoriteState<\/code>"}},"getShowFlag":{"!description":"Gets current value of property {@link #getShowFlag showFlag}.\n\nIndicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> or <code>sap.m.OverflowToolbar<\/code> control.<br>A special toolbar with predefined social actions which can be shown as needed. These are: Create an update (Feed), Follow, Mark for Follow Up, Mark as Favorite and Open Thing.\n\nIn addition business actions (ThingAction instances) can be added which are either displayed as MenuItems of the 'More' menu button or as individual tool bar buttons.\n\nWhen using this control, please be aware that it fulfills rather specific requirements: it has been designed for and is used within composite controls QuickView and ThingInspector.","fireFeedSubmit":{"!description":"Fires event {@link #event:feedSubmit feedSubmit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ActionBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ActionBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFollowState":{"!description":"Sets a new value for property {@link #getFollowState followState}.\n\nKeeps track of the actionBars Follow/Unfollow button\u2019s state. Its value is one of - FollowActionState.Default - FollowActionState.Follow - FollowActionState.Hold\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.ActionBar","parameters":{"sFollowState":"type: sap.ui.ux3.FollowActionState, description: New value for property <code>followState<\/code>"}},"setUpdateState":{"!description":"Sets a new value for property {@link #getUpdateState updateState}.\n\nIndicates whether \u201cUpdate\u201d is active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bUpdateState: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bUpdateState":"type: boolean, description: New value for property <code>updateState<\/code>"}},"getShowFavorite":{"!description":"Gets current value of property {@link #getShowFavorite showFavorite}.\n\nIndicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ActionBar<\/code> itself.\n\nFired when any of the social action\u2019s toolbar buttons except \u2018Update\u2019 or any of the business action\u2019s menu items resp. buttons is pressed. The selected action can be identified by its id and newState (the latter if applicable only) \u2018Follow\u2019 button + menu: id: follow, newState: Follow/Hold/Default \u2018Mark for follow up\u2019 button: id: flag, newState: true/false \u2018Favorite\u2019 button: id: favorite, newState: true/false \u2018Open Thing Inspector\u2019 button id: open Business Actions: id: the ThingAction id\n\nFor \u2018Update\u2019, please refer to event \u2018feedSubmit\u2019","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ActionBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfBusinessAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation {@link #getBusinessActions businessActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBusinessAction: sap.ui.ux3.ThingAction) -> Number","parameters":{"oBusinessAction":"type: sap.ui.ux3.ThingAction, description: The businessAction whose index is looked for"}},"getUpdateState":{"!description":"Gets current value of property {@link #getUpdateState updateState}.\n\nIndicates whether \u201cUpdate\u201d is active","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowFavorite":{"!description":"Sets a new value for property {@link #getShowFavorite showFavorite}.\n\nIndicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFavorite: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bShowFavorite":"type: boolean, description: New value for property <code>showFavorite<\/code>"}},"setAlwaysShowMoreMenu":{"!description":"Sets a new value for property {@link #getAlwaysShowMoreMenu alwaysShowMoreMenu}.\n\nIf true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAlwaysShowMoreMenu: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bAlwaysShowMoreMenu":"type: boolean, description: New value for property <code>alwaysShowMoreMenu<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ActionBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getFavoriteState":{"!description":"Gets current value of property {@link #getFavoriteState favoriteState}.\n\nIndicates whether \u201cFavorite\u201d is active","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowFollow":{"!description":"Gets current value of property {@link #getShowFollow showFollow}.\n\nIndicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/ux3/ActionBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> or <code>sap.m.OverflowToolbar<\/code> control.<br>A special toolbar with predefined social actions which can be shown as needed. These are: Create an update (Feed), Follow, Mark for Follow Up, Mark as Favorite and Open Thing.\n\nIn addition business actions (ThingAction instances) can be added which are either displayed as MenuItems of the 'More' menu button or as individual tool bar buttons.\n\nWhen using this control, please be aware that it fulfills rather specific requirements: it has been designed for and is used within composite controls QuickView and ThingInspector.","closePopups":{"!description":"Closes all popups which might be opened as ActionBar children These are the more- and follow menu and the feeder popup","!static":false,"!category":"function","!type":"fn()"},"getBusinessActions":{"!description":"Gets content of aggregation {@link #getBusinessActions businessActions}.\n\nDisplayed on the actionBar's right hand-side, either as menu item under 'More' or as individual buttons","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingAction]"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ActionBar<\/code> itself.\n\nFired when a new feed entry is submitted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ActionBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAlwaysShowMoreMenu":{"!description":"Gets current value of property {@link #getAlwaysShowMoreMenu alwaysShowMoreMenu}.\n\nIf true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFlagState":{"!description":"Gets current value of property {@link #getFlagState flagState}.\n\nIndicates whether \u201cMark for Follow Up\u201d is active","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowOpen":{"!description":"Sets a new value for property {@link #getShowOpen showOpen}.\n\nIndicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowOpen: Boolean) -> sap.ui.ux3.ActionBar","parameters":{"bShowOpen":"type: boolean, description: New value for property <code>showOpen<\/code>"}},"getShowOpen":{"!description":"Gets current value of property {@link #getShowOpen showOpen}.\n\nIndicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getThingIconURI":{"!description":"Gets current value of property {@link #getThingIconURI thingIconURI}.\n\nThe thing icon uri. Icon will be displayed in Feeder","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDividerWidth":{"!description":"Gets current value of property {@link #getDividerWidth dividerWidth}.\n\nThe minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getFollowState":{"!description":"Gets current value of property {@link #getFollowState followState}.\n\nKeeps track of the actionBars Follow/Unfollow button\u2019s state. Its value is one of - FollowActionState.Default - FollowActionState.Follow - FollowActionState.Hold\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FollowActionState"},"fireActionSelected":{"!description":"Fires event {@link #event:actionSelected actionSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ActionBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.ActionBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ActionBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.ux3.Notifier":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This element can be docked to a notification bar to show notification items","insertMessage":{"!description":"Inserts a message into the aggregation {@link #getMessages messages}.","!static":false,"!category":"function","!type":"fn(oMessage: sap.ui.core.Message, iIndex: Number) -> sap.ui.ux3.Notifier","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the message should be inserted at; for a negative value of <code>iIndex<\/code>, the message is inserted at position 0; for a value greater than the current size of the aggregation, the message is inserted at the last position","oMessage":"type: sap.ui.core.Message, description: The message to insert; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Notifier.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","attachMessageSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:messageSelected messageSelected} event of this <code>sap.ui.ux3.Notifier<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Notifier<\/code> itself.\n\nEvent is fired when a message of the notifiers was selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Notifier","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Notifier<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"hasItems":{"!description":"This method checks if the notifier has any items.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDefines the title that should be displayed within the opening popup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.Notifier","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","detachMessageSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:messageSelected messageSelected} event of this <code>sap.ui.ux3.Notifier<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Notifier","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireMessageSelected":{"!description":"Fires event {@link #event:messageSelected messageSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Notifier","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMessages":{"!description":"Gets content of aggregation {@link #getMessages messages}.\n\nMessages of this notifier.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Message]"},"addMessage":{"!description":"Adds some message to the aggregation {@link #getMessages messages}.","!static":false,"!category":"function","!type":"fn(oMessage: sap.ui.core.Message) -> sap.ui.ux3.Notifier","parameters":{"oMessage":"type: sap.ui.core.Message, description: The message to add; if empty, nothing is inserted"}},"destroyMessages":{"!description":"Destroys all the messages in the aggregation {@link #getMessages messages}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Notifier"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon of the control that should be displayed within the corresponding bar","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"removeMessage":{"!description":"Removes a message from the aggregation {@link #getMessages messages}.","!static":false,"!category":"function","!type":"fn(vMessage: Number | String | sap.ui.core.Message) -> sap.ui.core.Message","parameters":{"vMessage":"type: int|string|sap.ui.core.Message, description: The message to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Notifier with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon of the control that should be displayed within the corresponding bar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.Notifier","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new Notifier.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMessages messages} : sap.ui.core.Message[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:messageSelected messageSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDefines the title that should be displayed within the opening popup","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/ux3/Notifier","indexOfMessage":{"!description":"Checks for the provided <code>sap.ui.core.Message<\/code> in the aggregation {@link #getMessages messages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMessage: sap.ui.core.Message) -> Number","parameters":{"oMessage":"type: sap.ui.core.Message, description: The message whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This element can be docked to a notification bar to show notification items","removeAllMessages":{"!description":"Removes all the controls from the aggregation {@link #getMessages messages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Message]"}},"sap.ui.ux3.FollowActionState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Defines the states of the follow action","Follow":{"!description":"follow state","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","!category":"static class","Default":{"!description":"default state","!category":"enum","!type":"String"},"Hold":{"!description":"hold state","!category":"enum","!type":"String"}},"sap.ui.ux3.Feeder":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.FeedInput<\/code> control.<br>This feed control flavor represents a lean common feed, or a comment feed, with a text commit function. The control can be used stand alone or in a multiple way, and generally would be integrated directly into a UIArea.","getThumbnailSrc":{"!description":"Gets current value of property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumb nail image This property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Feeder.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text for the Feeder. @References are supported.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","setPlaceholderText":{"!description":"Sets a new value for property {@link #getPlaceholderText placeholderText}.\n\nThis property could be used for costum placeholder. If it is not set, the default text is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholderText: String) -> sap.ui.ux3.Feeder","parameters":{"sPlaceholderText":"type: string, description: New value for property <code>placeholderText<\/code>"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nType and size of the Feeder\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Large<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.ux3.FeederType) -> sap.ui.ux3.Feeder","parameters":{"sType":"type: sap.ui.ux3.FeederType, description: New value for property <code>type<\/code>"}},"setThumbnailSrc":{"!description":"Sets a new value for property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumb nail image This property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.Feeder","parameters":{"sThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>thumbnailSrc<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feeder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Feeder.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getThumbnailSrc thumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.ui.ux3.FeederType (default: Large)<\/li>\n<li>{@link #getPlaceholderText placeholderText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/ux3/Feeder","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.FeedInput<\/code> control.<br>This feed control flavor represents a lean common feed, or a comment feed, with a text commit function. The control can be used stand alone or in a multiple way, and generally would be integrated directly into a UIArea.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nType and size of the Feeder\n\nDefault value is <code>Large<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FeederType"},"getPlaceholderText":{"!description":"Gets current value of property {@link #getPlaceholderText placeholderText}.\n\nThis property could be used for costum placeholder. If it is not set, the default text is used.","!static":false,"!category":"function","!type":"fn() -> String"},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:submit submit} event of this <code>sap.ui.ux3.Feeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feeder","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:submit submit} event of this <code>sap.ui.ux3.Feeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Feeder<\/code> itself.\n\nEvent is fired when the entered text is submitted","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Feeder","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Feeder<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSubmit":{"!description":"Fires event {@link #event:submit submit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Feeder","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text for the Feeder. @References are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.ux3.Feeder","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.ux3.NotificationBarStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This entries are used to set the visibility status of a NotificationBar","Min":{"!description":"Bar should be minimized","!category":"enum","!type":"String"},"!module":"sap/ui/ux3/library","Max":{"!description":"Bar should be maximized","!category":"enum","!type":"String"},"!category":"static class","Default":{"!description":"Default height for the bar","!category":"enum","!type":"String"},"None":{"!description":"Bar should not be visible","!category":"enum","!type":"String"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.ux3.ThingInspector":{"setUpdateActionEnabled":{"!description":"Sets a new value for property {@link #getUpdateActionEnabled updateActionEnabled}.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpdateActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bUpdateActionEnabled":"type: boolean, description: New value for property <code>updateActionEnabled<\/code>"}},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction, iIndex: Number) -> sap.ui.ux3.ThingInspector","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.ux3.ThingAction, description: The action to insert; if empty, nothing is inserted"}},"removeFacet":{"!description":"Removes a facet from the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(vFacet: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"vFacet":"type: int|string|sap.ui.ux3.NavigationItem, description: The facet to remove or its index or id"}},"setSelectedFacet":{"!description":"Sets the associated {@link #getSelectedFacet selectedFacet}.","!static":false,"!category":"function","!type":"fn(oSelectedFacet: sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingInspector","parameters":{"oSelectedFacet":"type: sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: ID of an element which becomes the new target of this selectedFacet association; alternatively, an element instance may be given"}},"getSecondTitle":{"!description":"Gets current value of property {@link #getSecondTitle secondTitle}.\n\nSecond Line of the Thing Inspector Title","!static":false,"!category":"function","!type":"fn() -> String"},"setFlagState":{"!description":"Sets a new value for property {@link #getFlagState flagState}.\n\nState of Flag Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFlagState: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bFlagState":"type: boolean, description: New value for property <code>flagState<\/code>"}},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingInspector"},"addFacetContent":{"!description":"Adds some facetContent to the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingInspector","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent to add; if empty, nothing is inserted"}},"insertFacet":{"!description":"Inserts a facet into the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.ThingInspector","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the facet should be inserted at; for a negative value of <code>iIndex<\/code>, the facet is inserted at position 0; for a value greater than the current size of the aggregation, the facet is inserted at the last position"}},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingInspector","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent to add; if empty, nothing is inserted"}},"setFlagActionEnabled":{"!description":"Sets a new value for property {@link #getFlagActionEnabled flagActionEnabled}.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFlagActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bFlagActionEnabled":"type: boolean, description: New value for property <code>flagActionEnabled<\/code>"}},"destroyFacets":{"!description":"Destroys all the facets in the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingInspector"},"removeAllFacets":{"!description":"Removes all the controls from the aggregation {@link #getFacets facets}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingAction<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> Number","parameters":{"oAction":"type: sap.ui.ux3.ThingAction, description: The action whose index is looked for"}},"removeAllFacetContent":{"!description":"Removes all the controls from the aggregation {@link #getFacetContent facetContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingAction]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 There is not an exact replacement.<br>Thing Inspector","detachFacetSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:facetSelected facetSelected} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireFeedSubmit":{"!description":"Fires event {@link #event:feedSubmit feedSubmit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingAction","parameters":{"vAction":"type: int|string|sap.ui.ux3.ThingAction, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingInspector.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFollowState":{"!description":"Sets a new value for property {@link #getFollowState followState}.\n\nFollow State of a Thing\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sFollowState: sap.ui.ux3.FollowActionState) -> sap.ui.ux3.ThingInspector","parameters":{"sFollowState":"type: sap.ui.ux3.FollowActionState, description: New value for property <code>followState<\/code>"}},"setFirstTitle":{"!description":"Sets a new value for property {@link #getFirstTitle firstTitle}.\n\nFirst Line of the Thing Inspector Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFirstTitle: String) -> sap.ui.ux3.ThingInspector","parameters":{"sFirstTitle":"type: string, description: New value for property <code>firstTitle<\/code>"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingInspector"},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"vHeaderContent":"type: int|string|sap.ui.ux3.ThingGroup, description: The headerContent to remove or its index or id"}},"setActionBar":{"!description":"Sets the aggregated {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.ThingInspector","parameters":{"oActionBar":"type: sap.ui.ux3.ActionBar, description: The actionBar to set"}},"setHeaderType":{"!description":"Sets a new value for property {@link #getHeaderType headerType}.\n\nDefines which header type should be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderType: sap.ui.ux3.ThingViewerHeaderType) -> sap.ui.ux3.ThingInspector","parameters":{"sHeaderType":"type: sap.ui.ux3.ThingViewerHeaderType, description: New value for property <code>headerType<\/code>"}},"detachFeedSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.Overlay.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThing Icon Url\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.ThingInspector","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setFavoriteActionEnabled":{"!description":"Sets a new value for property {@link #getFavoriteActionEnabled favoriteActionEnabled}.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFavoriteActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bFavoriteActionEnabled":"type: boolean, description: New value for property <code>favoriteActionEnabled<\/code>"}},"!module":"sap/ui/ux3/ThingInspector","getFavoriteActionEnabled":{"!description":"Gets current value of property {@link #getFavoriteActionEnabled favoriteActionEnabled}.\n\nFavorite action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 There is not an exact replacement.<br>Thing Inspector","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThing type","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation {@link #getHeaderContent headerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"destroyFacetContent":{"!description":"Destroys all the facetContent in the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingInspector"},"getFlagState":{"!description":"Gets current value of property {@link #getFlagState flagState}.\n\nState of Flag Action\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFacets":{"!description":"Gets content of aggregation {@link #getFacets facets}.\n\nThing Inspector facets","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"indexOfFacetContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation {@link #getFacetContent facetContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> Number","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent whose index is looked for"}},"insertFacetContent":{"!description":"Inserts a facetContent into the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingInspector","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the facetContent should be inserted at; for a negative value of <code>iIndex<\/code>, the facetContent is inserted at position 0; for a value greater than the current size of the aggregation, the facetContent is inserted at the last position"}},"detachActionSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getHeaderType":{"!description":"Gets current value of property {@link #getHeaderType headerType}.\n\nDefines which header type should be used.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewerHeaderType"},"!proto":"sap.ui.ux3.Overlay","getHeaderContent":{"!description":"Gets content of aggregation {@link #getHeaderContent headerContent}.\n\nThingGroups for the header content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nActions of a Thing","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingAction]"},"setFollowActionEnabled":{"!description":"Sets a new value for property {@link #getFollowActionEnabled followActionEnabled}.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFollowActionEnabled: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bFollowActionEnabled":"type: boolean, description: New value for property <code>followActionEnabled<\/code>"}},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.ux3.ThingAction) -> sap.ui.ux3.ThingInspector","parameters":{"oAction":"type: sap.ui.ux3.ThingAction, description: The action to add; if empty, nothing is inserted"}},"getFlagActionEnabled":{"!description":"Gets current value of property {@link #getFlagActionEnabled flagActionEnabled}.\n\nFlag action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new ThingInspector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFirstTitle firstTitle} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getSecondTitle secondTitle} : string<\/li>\n<li>{@link #getFollowState followState} : sap.ui.ux3.FollowActionState (default: Default)<\/li>\n<li>{@link #getFlagState flagState} : boolean (default: false)<\/li>\n<li>{@link #getFavoriteState favoriteState} : boolean (default: false)<\/li>\n<li>{@link #getFavoriteActionEnabled favoriteActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUpdateActionEnabled updateActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFollowActionEnabled followActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getFlagActionEnabled flagActionEnabled} : boolean (default: true)<\/li>\n<li>{@link #getHeaderType headerType} : sap.ui.ux3.ThingViewerHeaderType (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActions actions} : sap.ui.ux3.ThingAction[]<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.ux3.ThingGroup[]<\/li>\n<li>{@link #getFacets facets} : sap.ui.ux3.NavigationItem[]<\/li>\n<li>{@link #getFacetContent facetContent} : sap.ui.ux3.ThingGroup[]<\/li>\n<li>{@link #getActionBar actionBar} : sap.ui.ux3.ActionBar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedFacet selectedFacet} : (sap.ui.core.ID | sap.ui.ux3.NavigationItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:actionSelected actionSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:facetSelected facetSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:feedSubmit feedSubmit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.Overlay#constructor sap.ui.ux3.Overlay}\ncan be used as well.","setFavoriteState":{"!description":"Sets a new value for property {@link #getFavoriteState favoriteState}.\n\nState Of favorite Action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFavoriteState: Boolean) -> sap.ui.ux3.ThingInspector","parameters":{"bFavoriteState":"type: boolean, description: New value for property <code>favoriteState<\/code>"}},"removeFacetContent":{"!description":"Removes a facetContent from the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(vFacetContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"vFacetContent":"type: int|string|sap.ui.ux3.ThingGroup, description: The facetContent to remove or its index or id"}},"attachActionSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:actionSelected actionSelected} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nFurther thing related Action selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ThingInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachFacetSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:facetSelected facetSelected} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nEvent for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ThingInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingInspector"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation {@link #getHeaderContent headerContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> Number","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent whose index is looked for"}},"setSecondTitle":{"!description":"Sets a new value for property {@link #getSecondTitle secondTitle}.\n\nSecond Line of the Thing Inspector Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondTitle: String) -> sap.ui.ux3.ThingInspector","parameters":{"sSecondTitle":"type: string, description: New value for property <code>secondTitle<\/code>"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nThing type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.ui.ux3.ThingInspector","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingInspector","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position"}},"getSelectedFacet":{"!description":"ID of the element which is the current target of the association {@link #getSelectedFacet selectedFacet}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThing Icon Url","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"indexOfFacet":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation {@link #getFacets facets}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> Number","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet whose index is looked for"}},"getFavoriteState":{"!description":"Gets current value of property {@link #getFavoriteState favoriteState}.\n\nState Of favorite Action\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFollowActionEnabled":{"!description":"Gets current value of property {@link #getFollowActionEnabled followActionEnabled}.\n\nFollow action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireFacetSelected":{"!description":"Fires event {@link #event:facetSelected facetSelected} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFirstTitle":{"!description":"Gets current value of property {@link #getFirstTitle firstTitle}.\n\nFirst Line of the Thing Inspector Title","!static":false,"!category":"function","!type":"fn() -> String"},"attachFeedSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:feedSubmit feedSubmit} event of this <code>sap.ui.ux3.ThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ThingInspector<\/code> itself.\n\nFired when a new feed entry is submitted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ThingInspector<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getUpdateActionEnabled":{"!description":"Gets current value of property {@link #getUpdateActionEnabled updateActionEnabled}.\n\nUpdate action enabled/disabled. If disabled the action will be invisible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFacetContent":{"!description":"Gets content of aggregation {@link #getFacetContent facetContent}.\n\nThingGroups for content of the selected facet","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"getActionBar":{"!description":"Gets content of aggregation {@link #getActionBar actionBar}.\n\nActionBar. If no actionBar is set a default ActionBar will be created.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ActionBar"},"addFacet":{"!description":"Adds some facet to the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingInspector","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet to add; if empty, nothing is inserted"}},"getFollowState":{"!description":"Gets current value of property {@link #getFollowState followState}.\n\nFollow State of a Thing\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FollowActionState"},"fireActionSelected":{"!description":"Fires event {@link #event:actionSelected actionSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ThingInspector","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"open":{"!description":"Opens this instance of ThingIspector","!static":false,"!category":"function","!type":"fn(initialFocusId?: String)","parameters":{"initialFocusId":"type: string, description: undefined"}}},"sap.ui.ux3.NotificationBar":{"fireDisplay":{"!description":"Fires event {@link #event:display display} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachResize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:resize resize} event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfNotifier":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation {@link #getNotifiers notifiers}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNotifier: sap.ui.core.Element) -> Number","parameters":{"oNotifier":"type: sap.ui.core.Element, description: The notifier whose index is looked for"}},"!proto":"sap.ui.core.Control","setAlwaysShowToggler":{"!static":false,"!category":"function","!type":"fn(bAlwaysShow: Boolean)","parameters":{"bAlwaysShow":"type: boolean, description: if the toggler should be visible all the time set this parameter to <b>true<\/b>"}},"!category":"class","addNotifier":{"!description":"Adds some notifier to the aggregation {@link #getNotifiers notifiers}.","!static":false,"!category":"function","!type":"fn(oNotifier: sap.ui.core.Element) -> sap.ui.ux3.NotificationBar","parameters":{"oNotifier":"type: sap.ui.core.Element, description: The notifier to add; if empty, nothing is inserted"}},"setVisibleStatus":{"!description":"Sets a new value for property {@link #getVisibleStatus visibleStatus}.\n\nThis property displays the bar corresponding to given status\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sVisibleStatus: sap.ui.ux3.NotificationBarStatus) -> sap.ui.ux3.NotificationBar","parameters":{"sVisibleStatus":"type: sap.ui.ux3.NotificationBarStatus, description: New value for property <code>visibleStatus<\/code>"}},"setMessageNotifier":{"!description":"Sets the aggregated {@link #getMessageNotifier messageNotifier}.","!static":false,"!category":"function","!type":"fn(oMessageNotifier: sap.ui.core.Element) -> sap.ui.ux3.NotificationBar","parameters":{"oMessageNotifier":"type: sap.ui.core.Element, description: The messageNotifier to set"}},"getResizeEnabled":{"!description":"Gets current value of property {@link #getResizeEnabled resizeEnabled}.\n\nThis property enables the bar to be resized by the user.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNotifiers":{"!description":"Gets content of aggregation {@link #getNotifiers notifiers}.\n\nNotifiers that monitor something within the application and display the corresponding notifications.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"!constructorDescription":"Constructor for a new NotificationBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleStatus visibleStatus} : sap.ui.ux3.NotificationBarStatus (default: Default)<\/li>\n<li>{@link #getResizeEnabled resizeEnabled} : boolean (default: true)<\/li>\n<li>{@link #getAlwaysShowToggler alwaysShowToggler} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMessageNotifier messageNotifier} : sap.ui.core.Element<\/li>\n<li>{@link #getNotifiers notifiers} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:display display} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resize resize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getMessageNotifier":{"!description":"Gets content of aggregation {@link #getMessageNotifier messageNotifier}.\n\nNotifier that shows messages","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Element"},"removeAllNotifiers":{"!description":"Removes all the controls from the aggregation {@link #getNotifiers notifiers}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"attachDisplay":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:display display} event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.NotificationBar<\/code> itself.\n\nEvent is fired when the bar wants to be displayed depending on given flag. This allows the application to decide what to do.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.NotificationBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setResizeEnabled":{"!description":"Sets a new value for property {@link #getResizeEnabled resizeEnabled}.\n\nThis property enables the bar to be resized by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bResizeEnabled: Boolean) -> sap.ui.ux3.NotificationBar","parameters":{"bResizeEnabled":"type: boolean, description: New value for property <code>resizeEnabled<\/code>"}},"getAlwaysShowToggler":{"!description":"Gets current value of property {@link #getAlwaysShowToggler alwaysShowToggler}.\n\nThis property defines if the toggler should be displayed the whole time when the NotificationBar is shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MessagePopover<\/code> control.<br>A NotificationBar is a \"toolbar\" that can be added to a page to show messages and notifications from the application. Its position, height and width is inherited from the element that the notification bar is added to. The NotificationBar uses position: fixed; to always stay at the bottom of the screen. This CSS may sometimes cause issues when nested deeply inside other controls. To have a proper behavior of the NotificationBar use it as high in the control hierarchy as possible.","destroyNotifiers":{"!description":"Destroys all the notifiers in the aggregation {@link #getNotifiers notifiers}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NotificationBar"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NotificationBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertNotifier":{"!description":"Inserts a notifier into the aggregation {@link #getNotifiers notifiers}.","!static":false,"!category":"function","!type":"fn(oNotifier: sap.ui.core.Element, iIndex: Number) -> sap.ui.ux3.NotificationBar","parameters":{"oNotifier":"type: sap.ui.core.Element, description: The notifier to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the notifier should be inserted at; for a negative value of <code>iIndex<\/code>, the notifier is inserted at position 0; for a value greater than the current size of the aggregation, the notifier is inserted at the last position"}},"detachDisplay":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:display display} event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireResize":{"!description":"Fires event {@link #event:resize resize} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"hasItems":{"!description":"This method checks if the NotificationBar has any items (notifications or messages) to show and returns true if there are any items to show. So the application should decide if the bar should be displayed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachResize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:resize resize} event of this <code>sap.ui.ux3.NotificationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.NotificationBar<\/code> itself.\n\nThis event is thrown when the bar was resized (to the different valid states: Min, Max, Default, None). The event itself can be used from SAPUI5-version 1.12.2 since there was a bug in the previous versions firing this event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NotificationBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.NotificationBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyMessageNotifier":{"!description":"Destroys the messageNotifier in the aggregation {@link #getMessageNotifier messageNotifier}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NotificationBar"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NotificationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/ux3/NotificationBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MessagePopover<\/code> control.<br>A NotificationBar is a \"toolbar\" that can be added to a page to show messages and notifications from the application. Its position, height and width is inherited from the element that the notification bar is added to. The NotificationBar uses position: fixed; to always stay at the bottom of the screen. This CSS may sometimes cause issues when nested deeply inside other controls. To have a proper behavior of the NotificationBar use it as high in the control hierarchy as possible.","getVisibleStatus":{"!description":"Gets current value of property {@link #getVisibleStatus visibleStatus}.\n\nThis property displays the bar corresponding to given status\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NotificationBarStatus"},"removeNotifier":{"!description":"Removes a notifier from the aggregation {@link #getNotifiers notifiers}.","!static":false,"!category":"function","!type":"fn(vNotifier: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","parameters":{"vNotifier":"type: int|string|sap.ui.core.Element, description: The notifier to remove or its index or id"}}},"sap.ui.ux3.ThingViewer":{"removeFacet":{"!description":"Removes a facet from the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(vFacet: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"vFacet":"type: int|string|sap.ui.ux3.NavigationItem, description: The facet to remove or its index or id"}},"setSelectedFacet":{"!description":"Sets the associated {@link #getSelectedFacet selectedFacet}.","!static":false,"!category":"function","!type":"fn(oSelectedFacet: sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingViewer","parameters":{"oSelectedFacet":"type: sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: ID of an element which becomes the new target of this selectedFacet association; alternatively, an element instance may be given"}},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nSubtitle of the Thing Inspector","!static":false,"!category":"function","!type":"fn() -> String"},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewer"},"addFacetContent":{"!description":"Adds some facetContent to the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingViewer","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent to add; if empty, nothing is inserted"}},"insertFacet":{"!description":"Inserts a facet into the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.ThingViewer","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the facet should be inserted at; for a negative value of <code>iIndex<\/code>, the facet is inserted at position 0; for a value greater than the current size of the aggregation, the facet is inserted at the last position"}},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingViewer","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent to add; if empty, nothing is inserted"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the Thing Inspector","!static":false,"!category":"function","!type":"fn() -> String"},"destroyFacets":{"!description":"Destroys all the facets in the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewer"},"removeAllFacets":{"!description":"Removes all the controls from the aggregation {@link #getFacets facets}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"removeAllFacetContent":{"!description":"Removes all the controls from the aggregation {@link #getFacetContent facetContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 There is not an exact replacement.<br>ThingViewer: Same as ThingInspector but decoupled from the Overlay and the ActionBar. The control can be added to a Parent container that has a defined width. The ThingViewer fill the whole container. If the parent container has no width defined the control will not work properly.","detachFacetSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:facetSelected facetSelected} event of this <code>sap.ui.ux3.ThingViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingViewer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingViewer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"vHeaderContent":"type: int|string|sap.ui.ux3.ThingGroup, description: The headerContent to remove or its index or id"}},"setActionBar":{"!description":"Sets the aggregated {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn(oActionBar: sap.ui.ux3.ActionBar) -> sap.ui.ux3.ThingViewer","parameters":{"oActionBar":"type: sap.ui.ux3.ActionBar, description: The actionBar to set"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.ThingViewer","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setHeaderType":{"!description":"Sets a new value for property {@link #getHeaderType headerType}.\n\nDefines which header type should be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderType: sap.ui.ux3.ThingViewerHeaderType) -> sap.ui.ux3.ThingViewer","parameters":{"sHeaderType":"type: sap.ui.ux3.ThingViewerHeaderType, description: New value for property <code>headerType<\/code>"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the ThingViewer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.ThingViewer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThing Icon Url\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.ThingViewer","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/ui/ux3/ThingViewer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 There is not an exact replacement.<br>ThingViewer: Same as ThingInspector but decoupled from the Overlay and the ActionBar. The control can be added to a Parent container that has a defined width. The ThingViewer fill the whole container. If the parent container has no width defined the control will not work properly.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThing type","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation {@link #getHeaderContent headerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"destroyFacetContent":{"!description":"Destroys all the facetContent in the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewer"},"getFacets":{"!description":"Gets content of aggregation {@link #getFacets facets}.\n\nThing Inspector facets","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"indexOfFacetContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation {@link #getFacetContent facetContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup) -> Number","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent whose index is looked for"}},"insertFacetContent":{"!description":"Inserts a facetContent into the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(oFacetContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingViewer","parameters":{"oFacetContent":"type: sap.ui.ux3.ThingGroup, description: The facetContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the facetContent should be inserted at; for a negative value of <code>iIndex<\/code>, the facetContent is inserted at position 0; for a value greater than the current size of the aggregation, the facetContent is inserted at the last position"}},"getHeaderType":{"!description":"Gets current value of property {@link #getHeaderType headerType}.\n\nDefines which header type should be used.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewerHeaderType"},"!proto":"sap.ui.core.Control","getHeaderContent":{"!description":"Gets content of aggregation {@link #getHeaderContent headerContent}.\n\nThingGroups for the header content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the ThingViewer\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the ThingViewer\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ThingViewer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeaderType headerType} : sap.ui.ux3.ThingViewerHeaderType (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeaderContent headerContent} : sap.ui.ux3.ThingGroup[]<\/li>\n<li>{@link #getFacets facets} : sap.ui.ux3.NavigationItem[]<\/li>\n<li>{@link #getFacetContent facetContent} : sap.ui.ux3.ThingGroup[]<\/li>\n<li>{@link #getActionBar actionBar} : sap.ui.ux3.ActionBar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedFacet selectedFacet} : (sap.ui.core.ID | sap.ui.ux3.NavigationItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:facetSelected facetSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeFacetContent":{"!description":"Removes a facetContent from the aggregation {@link #getFacetContent facetContent}.","!static":false,"!category":"function","!type":"fn(vFacetContent: Number | String | sap.ui.ux3.ThingGroup) -> sap.ui.ux3.ThingGroup","parameters":{"vFacetContent":"type: int|string|sap.ui.ux3.ThingGroup, description: The facetContent to remove or its index or id"}},"setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nSubtitle of the Thing Inspector\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubtitle: String) -> sap.ui.ux3.ThingViewer","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"}},"attachFacetSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:facetSelected facetSelected} event of this <code>sap.ui.ux3.ThingViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ThingViewer<\/code> itself.\n\nEvent for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingViewer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ThingViewer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyActionBar":{"!description":"Destroys the actionBar in the aggregation {@link #getActionBar actionBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ThingViewer"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingGroup<\/code> in the aggregation {@link #getHeaderContent headerContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup) -> Number","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent whose index is looked for"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nThing type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.ui.ux3.ThingViewer","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.ux3.ThingGroup, iIndex: Number) -> sap.ui.ux3.ThingViewer","parameters":{"oHeaderContent":"type: sap.ui.ux3.ThingGroup, description: The headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the ThingViewer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.ux3.ThingViewer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getSelectedFacet":{"!description":"ID of the element which is the current target of the association {@link #getSelectedFacet selectedFacet}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThing Icon Url","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"indexOfFacet":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation {@link #getFacets facets}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> Number","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet whose index is looked for"}},"fireFacetSelected":{"!description":"Fires event {@link #event:facetSelected facetSelected} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFacetContent":{"!description":"Gets content of aggregation {@link #getFacetContent facetContent}.\n\nThingGroups for content of the selected facet","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ThingGroup]"},"getActionBar":{"!description":"Gets content of aggregation {@link #getActionBar actionBar}.\n\nAn ActionBar can be given","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ActionBar"},"addFacet":{"!description":"Adds some facet to the aggregation {@link #getFacets facets}.","!static":false,"!category":"function","!type":"fn(oFacet: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.ThingViewer","parameters":{"oFacet":"type: sap.ui.ux3.NavigationItem, description: The facet to add; if empty, nothing is inserted"}}},"sap.ui":{"ux3":"sap.ui.ux3","!category":"namespace"},"sap.ui.ux3.Overlay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Overlay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Overlay"},"sap.ui.ux3.ExactAttribute":{"detachSupplyAttributes":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:supplyAttributes supplyAttributes} event of this <code>sap.ui.ux3.ExactAttribute<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactAttribute","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nSpecifies whether the attribute shall be selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.ux3.ExactAttribute","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getShowSubAttributesIndicator":{"!description":"Gets current value of property {@link #getShowSubAttributesIndicator showSubAttributesIndicator}.\n\nSpecifies whether the attribute shall have sub values for visual purposes. The indicator which is a little arrow beside an attribute in the list is computed automatically (getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute). In the case that a supply function is attached, and the supplyActive attribute has value 'true', then the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is considered then and has to be maintained. If the back-end does not support count-calls, for example, showSubAttributesIndicator should be set to true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Element","attachSupplyAttributes":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:supplyAttributes supplyAttributes} event of this <code>sap.ui.ux3.ExactAttribute<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ExactAttribute<\/code> itself.\n\nA supply function is a handler which is attached to the supplyAttributes event. The event is fired when the corresponding ExactAttribute is selected, it was already selected when a handler is attached or function getAttributes() is called.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ExactAttribute","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ExactAttribute<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","setAdditionalData":{"!description":"Sets a new value for property {@link #getAdditionalData additionalData}.\n\nAn example for additional data are database keys\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAdditionalData: Object) -> sap.ui.ux3.ExactAttribute","parameters":{"oAdditionalData":"type: object, description: New value for property <code>additionalData<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nSpecifies the width of the corresponding list in pixels. The value must be between 70 and 500.\n\nDefault value is <code>168<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setTooltip":{"!static":false,"!category":"function","!type":"fn(oTooltip: String | sap.ui.core.TooltipBase)","parameters":{"oTooltip":"type: string|sap.ui.core.TooltipBase, description: undefined"}},"getListOrder":{"!description":"Gets current value of property {@link #getListOrder listOrder}.\n\nThe order how the sublists of this attribute should be displayed.\n\nDefault value is <code>Select<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactOrder"},"setSupplyActive":{"!description":"Sets a new value for property {@link #getSupplyActive supplyActive}.\n\nThe supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false. The idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSupplyActive: Boolean) -> sap.ui.ux3.ExactAttribute","parameters":{"bSupplyActive":"type: boolean, description: New value for property <code>supplyActive<\/code>"}},"!constructorDescription":"Constructor for a new ExactAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getSelected selected} : boolean<\/li>\n<li>{@link #getWidth width} : int (default: 168)<\/li>\n<li>{@link #getListOrder listOrder} : sap.ui.ux3.ExactOrder (default: Select)<\/li>\n<li>{@link #getShowSubAttributesIndicator showSubAttributesIndicator} : boolean (default: true)<\/li>\n<li>{@link #getAdditionalData additionalData} : object<\/li>\n<li>{@link #getSupplyActive supplyActive} : boolean (default: true)<\/li>\n<li>{@link #getAutoActivateSupply autoActivateSupply} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.ui.ux3.ExactAttribute[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:supplyAttributes supplyAttributes} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getShowSubAttributesIndicator_Computed":{"!description":"See attribute showSubAttributesIndicator","!static":false,"!category":"function","!type":"fn()"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.ux3.ExactAttribute<\/code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> Number","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute whose index is looked for"}},"removeAttribute":{"!description":"Removes a attribute from the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","parameters":{"vAttribute":"type: int|string|sap.ui.ux3.ExactAttribute, description: The attribute to remove or its index or id"}},"setShowSubAttributesIndicator":{"!description":"Sets a new value for property {@link #getShowSubAttributesIndicator showSubAttributesIndicator}.\n\nSpecifies whether the attribute shall have sub values for visual purposes. The indicator which is a little arrow beside an attribute in the list is computed automatically (getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute). In the case that a supply function is attached, and the supplyActive attribute has value 'true', then the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is considered then and has to be maintained. If the back-end does not support count-calls, for example, showSubAttributesIndicator should be set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSubAttributesIndicator: Boolean) -> sap.ui.ux3.ExactAttribute","parameters":{"bShowSubAttributesIndicator":"type: boolean, description: New value for property <code>showSubAttributesIndicator<\/code>"}},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactAttribute"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>An element for defining attributes and sub-attributes used within the Exact pattern.","removeAllAttributes":{"!description":"Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactAttribute.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAttributes":{"!description":"Gets content of aggregation {@link #getAttributes attributes}.\n\nValues (sub attributes) of this attribute","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.ExactAttribute]"},"getAdditionalData":{"!description":"Gets current value of property {@link #getAdditionalData additionalData}.\n\nAn example for additional data are database keys","!static":false,"!category":"function","!type":"fn() -> Object"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe attribute name","!static":false,"!category":"function","!type":"fn() -> String"},"setListOrder":{"!description":"Sets a new value for property {@link #getListOrder listOrder}.\n\nThe order how the sublists of this attribute should be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Select<\/code>.","!static":false,"!category":"function","!type":"fn(sListOrder: sap.ui.ux3.ExactOrder) -> sap.ui.ux3.ExactAttribute","parameters":{"sListOrder":"type: sap.ui.ux3.ExactOrder, description: New value for property <code>listOrder<\/code>"}},"fireSupplyAttributes":{"!description":"Fires event {@link #event:supplyAttributes supplyAttributes} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ExactAttribute","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nSpecifies the width of the corresponding list in pixels. The value must be between 70 and 500.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>168<\/code>.","!static":false,"!category":"function","!type":"fn(iWidth: Number) -> sap.ui.ux3.ExactAttribute","parameters":{"iWidth":"type: int, description: New value for property <code>width<\/code>"}},"scrollTo":{"!description":"Scrolls the corresponding list of this attribute until the given direct child attribute is visible. If the corresponding list is not yet visible the call is buffered until the list is available.","!static":false,"!category":"function","!type":"fn(oOAttribute: sap.ui.ux3.ExactAttribute)","parameters":{"oOAttribute":"type: sap.ui.ux3.ExactAttribute, description: The direct child attribute"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getAutoActivateSupply":{"!description":"Gets current value of property {@link #getAutoActivateSupply autoActivateSupply}.\n\nIf you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically set to true on every unselect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nSpecifies whether the attribute shall be selected","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAutoActivateSupply":{"!description":"Sets a new value for property {@link #getAutoActivateSupply autoActivateSupply}.\n\nIf you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically set to true on every unselect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoActivateSupply: Boolean) -> sap.ui.ux3.ExactAttribute","parameters":{"bAutoActivateSupply":"type: boolean, description: New value for property <code>autoActivateSupply<\/code>"}},"!module":"sap/ui/ux3/ExactAttribute","addAttribute":{"!description":"Adds some attribute to the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute) -> sap.ui.ux3.ExactAttribute","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to add; if empty, nothing is inserted"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>An element for defining attributes and sub-attributes used within the Exact pattern.","insertAttribute":{"!description":"Inserts a attribute into the aggregation {@link #getAttributes attributes}.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.ui.ux3.ExactAttribute, iIndex: Number) -> sap.ui.ux3.ExactAttribute","parameters":{"oAttribute":"type: sap.ui.ux3.ExactAttribute, description: The attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attribute should be inserted at; for a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"}},"getSupplyActive":{"!description":"Gets current value of property {@link #getSupplyActive supplyActive}.\n\nThe supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false. The idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setProperty":{"!static":false,"!category":"function","!type":"fn(sPropertyName: String, oValue: Object, bSuppressRerendering: Boolean)","parameters":{"oValue":"type: object, description: undefined","bSuppressRerendering":"type: boolean, description: undefined","sPropertyName":"type: string, description: undefined"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe attribute name\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.ux3.ExactAttribute","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.ux3.FeedChunk_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FeedChunk with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.FeedChunk"},"sap.ui.ux3.DataSetSimpleView":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nName of the View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Name of this View<\/code>.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.ux3.DataSetSimpleView","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"isItemSelected":{"!description":"Check if Item <code>oItem<\/code> is selected","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.DataSetItem)","parameters":{"oItem":"type: sap.ui.ux3.DataSetItem, description: DataSetItem instance"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nName of the View\n\nDefault value is <code>Name of this View<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","getIconSelected":{"!description":"Gets current value of property {@link #getIconSelected iconSelected}.\n\nicon: selected state","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nIf the pagination feature is used without specifying a scroll area, a height for the dataset must be defined.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new DataSetSimpleView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFloating floating} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: Name of this View)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getResponsive responsive} : boolean (default: false)<\/li>\n<li>{@link #getItemMinWidth itemMinWidth} : int (default: 0)<\/li>\n<li>{@link #getInitialItemCount initialItemCount} : int (default: 0)<\/li>\n<li>{@link #getReloadItemCount reloadItemCount} : int (default: 0)<\/li>\n<li>{@link #getScrollArea scrollArea} : any<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","updateView":{"!description":"View update: Called when pagination adds items","!static":false,"!category":"function","!type":"fn(aDiff: [sap.ui.ux3.DataSetItem])","parameters":{"aDiff":"type: sap.ui.ux3.DataSetItem[], description: Array of DataSetItems added to the parent DataSet"}},"initView":{"!description":"View Initialization: Called when selecting the view","!static":false,"!category":"function","!type":"fn(aItems: Array)","parameters":{"aItems":"type: array, description: Array of DataSetItems added to the parent DataSet"}},"getFloating":{"!description":"Gets current value of property {@link #getFloating floating}.\n\nWhen true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIconHovered":{"!description":"Sets a new value for property {@link #getIconHovered iconHovered}.\n\nicon: hovered state\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","parameters":{"sIconHovered":"type: sap.ui.core.URI, description: New value for property <code>iconHovered<\/code>"}},"setInitialItemCount":{"!description":"Sets a new value for property {@link #getInitialItemCount initialItemCount}.\n\nIf this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iInitialItemCount: Number) -> sap.ui.ux3.DataSetSimpleView","parameters":{"iInitialItemCount":"type: int, description: New value for property <code>initialItemCount<\/code>"}},"exitView":{"!description":"View finalization: Called when leaving the view","!static":false,"!category":"function","!type":"fn(aItems: [sap.ui.ux3.DataSetItem])","parameters":{"aItems":"type: sap.ui.ux3.DataSetItem[], description: undefined"}},"getItemMinWidth":{"!description":"Gets current value of property {@link #getItemMinWidth itemMinWidth}.\n\nWhen itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getScrollArea":{"!description":"Gets current value of property {@link #getScrollArea scrollArea}.\n\nID of the DOM Element or jQuery reference to the dom which holds the scrollbar for the dataset","!static":false,"!category":"function","!type":"fn() -> Object"},"getInitialItemCount":{"!description":"Gets current value of property {@link #getInitialItemCount initialItemCount}.\n\nIf this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setResponsive":{"!description":"Sets a new value for property {@link #getResponsive responsive}.\n\nWhen true and the property floating is true the DatSet items are floating containers filling the whole space of a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bResponsive: Boolean) -> sap.ui.ux3.DataSetSimpleView","parameters":{"bResponsive":"type: boolean, description: New value for property <code>responsive<\/code>"}},"setIconSelected":{"!description":"Sets a new value for property {@link #getIconSelected iconSelected}.\n\nicon: selected state\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","parameters":{"sIconSelected":"type: sap.ui.core.URI, description: New value for property <code>iconSelected<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Use a layout by choice from the {@link sap.m} library, instead.<br>DataSetSimpleView provides a simple view example for DataSet usage.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.DataSetSimpleView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTemplate":{"!description":"Gets content of aggregation {@link #getTemplate template}.\n\ntemplate","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setItemMinWidth":{"!description":"Sets a new value for property {@link #getItemMinWidth itemMinWidth}.\n\nWhen itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iItemMinWidth: Number) -> sap.ui.ux3.DataSetSimpleView","parameters":{"iItemMinWidth":"type: int, description: New value for property <code>itemMinWidth<\/code>"}},"getResponsive":{"!description":"Gets current value of property {@link #getResponsive responsive}.\n\nWhen true and the property floating is true the DatSet items are floating containers filling the whole space of a row.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFloating":{"!description":"Sets a new value for property {@link #getFloating floating}.\n\nWhen true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFloating: Boolean) -> sap.ui.ux3.DataSetSimpleView","parameters":{"bFloating":"type: boolean, description: New value for property <code>floating<\/code>"}},"setScrollArea":{"!static":false,"!category":"function","!type":"fn(aScrollArea: [Object], bSupress: Boolean)","parameters":{"bSupress":"type: boolean, description: undefined","aScrollArea":"type: any[], description: undefined"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nIf the pagination feature is used without specifying a scroll area, a height for the dataset must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.ux3.DataSetSimpleView","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getReloadItemCount":{"!description":"Gets current value of property {@link #getReloadItemCount reloadItemCount}.\n\nThis number defines the item count which is reloaded on scroll if initialItemCount is enabled.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon source for this view","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetSimpleView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon source for this view\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.ux3.DataSetSimpleView","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setTemplate":{"!description":"Sets the aggregated {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.ui.ux3.DataSetSimpleView","parameters":{"oTemplate":"type: sap.ui.core.Control, description: The template to set"}},"!module":"sap/ui/ux3/DataSetSimpleView","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Use a layout by choice from the {@link sap.m} library, instead.<br>DataSetSimpleView provides a simple view example for DataSet usage.","setReloadItemCount":{"!description":"Sets a new value for property {@link #getReloadItemCount reloadItemCount}.\n\nThis number defines the item count which is reloaded on scroll if initialItemCount is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iReloadItemCount: Number) -> sap.ui.ux3.DataSetSimpleView","parameters":{"iReloadItemCount":"type: int, description: New value for property <code>reloadItemCount<\/code>"}},"handleSelection":{"!description":"Eventhandler for the selection of an Item","!static":false,"!category":"function","!type":"fn(oEvent: sap.ui.base.Event)","parameters":{"oEvent":"type: sap.ui.base.Event, description: SelectionChanged event"}},"destroyTemplate":{"!description":"Destroys the template in the aggregation {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.DataSetSimpleView"},"getIconHovered":{"!description":"Gets current value of property {@link #getIconHovered iconHovered}.\n\nicon: hovered state","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"}},"sap.ui.ux3":{"DataSetItem":"sap.ui.ux3.DataSetItem_obj","resultText":{"!description":"A title text which is displayed above the result section","!category":"enum","!type":"String"},"reloadItemCount":{"!description":"This number defines the item count which is reloaded on scroll if initialItemCount is enabled.","!category":"enum","!type":"Number"},"enableComment":{"!description":"If true the comment action is enabled.","!category":"enum","!type":"Boolean"},"feederThumbnailSrc":{"!description":"URL to the thumbnail image for the comment feeder. This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!category":"enum","!type":"sap.ui.core.URI"},"DataSet":"sap.ui.ux3.DataSet_obj","ToolPopup":"sap.ui.ux3.ToolPopup_obj","showCounter":{"!description":"Specifies whether the counter for all entries is shown.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"iconSrc":{"!description":"image","!category":"enum","!type":"sap.ui.core.URI"},"thingIconURI":{"!description":"The thing icon uri. Icon will be displayed in Feeder","!category":"enum","!type":"sap.ui.core.URI"},"ExactAttribute":"sap.ui.ux3.ExactAttribute_obj","autoActivateSupply":{"!description":"If you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically set to true on every unselect.","!category":"enum","!type":"Boolean"},"type":{"!description":"Thing type","!category":"enum","!type":"String"},"appIconTooltip":{"!description":"The tooltip of the application icon in the header","!category":"enum","!type":"String"},"favoriteActionEnabled":{"!description":"Favorite action enabled/disabled. If disabled the action will be invisible.","!category":"enum","!type":"Boolean"},"scrollArea":{"!description":"ID of the DOM Element or jQuery reference to the dom which holds the scrollbar for the dataset","!category":"enum","!type":"Object"},"NavigationItem":"sap.ui.ux3.NavigationItem_obj","ExactOrder":"sap.ui.ux3.ExactOrder","logoutButtonTooltip":{"!description":"The tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed.","!category":"enum","!type":"String"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"showActionBar":{"!description":"Show Action Bar","!category":"enum","!type":"Boolean"},"topListOrder":{"!description":"The order how the sublists of the top level list should be displayed.","!category":"enum","!type":"sap.ui.ux3.ExactOrder"},"openButtonVisible":{"!description":"Defines whether the 'Open' button shall be visible.","!category":"enum","!type":"Boolean"},"fitParent":{"!description":"If set to true, control will fit parents content area","!category":"enum","!type":"Boolean"},"placeholderText":{"!description":"This property could be used for costum placeholder. If it is not set, the default text is used.","!category":"enum","!type":"String"},"showSearchField":{"!description":"Show/hide SearchField in Toolbar","!category":"enum","!type":"Boolean"},"text":{"!description":"text of action","!category":"enum","!type":"String"},"href":{"!description":"Defines the link target URL. This property is optional and should only be set when required! The use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected).","!category":"enum","!type":"sap.ui.core.URI"},"flagActionEnabled":{"!description":"Flag action enabled/disabled. If disabled the action will be invisible.","!category":"enum","!type":"Boolean"},"Overlay":"sap.ui.ux3.Overlay_obj","enableFavorite":{"!description":"If true the favorite action is enabled.","!category":"enum","!type":"Boolean"},"NotificationBar":"sap.ui.ux3.NotificationBar_obj","height":{"!description":"Height of the ThingViewer","!category":"enum","!type":"sap.ui.core.CSSSize"},"supplyActive":{"!description":"The supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false. The idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true.","!category":"enum","!type":"Boolean"},"maxWidth":{"!description":"Forces a maximum width of the ToolPopup in pixels.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Controls that implement the SAP User Experience (UX) Guidelines 3.0","topListWidth":{"!description":"Specifies the width of the top list in pixels. The value must be between 70 and 500.","!category":"enum","!type":"Number"},"ShellDesignType":"sap.ui.ux3.ShellDesignType","designType":{"!description":"Defines which design type is to be used.","!category":"enum","!type":"sap.ui.ux3.ShellDesignType"},"showOpen":{"!description":"Indicates whether social action \u201cOpen\u201d is shown, default is \u2018true\u2019","!category":"enum","!type":"Boolean"},"sidebarVisible":{"!description":"Defines if the list of collection items is visible on the left","!category":"enum","!type":"Boolean"},"showTools":{"!description":"Whether the tool area should be displayed at all or not.","!category":"enum","!type":"Boolean"},"applyContentPadding":{"!description":"Whether the Shell content area should have a theme-dependent padding or not.","!category":"enum","!type":"Boolean"},"!module":"sap/ui/ux3/library","showFeederTool":{"!description":"Whether the \"Feeder\" tool should be displayed or not.","!category":"enum","!type":"Boolean"},"showFilter":{"!description":"show filter","!category":"enum","!type":"Boolean"},"sender":{"!description":"Sender of the chunk","!category":"enum","!type":"String"},"FollowActionState":"sap.ui.ux3.FollowActionState","subtitle":{"!description":"Subtitle of the Thing Inspector","!category":"enum","!type":"String"},"displaySecondaryValues":{"!description":"Specifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.","!category":"enum","!type":"Boolean"},"showFollow":{"!description":"Indicates whether social action \u201cFollow\u201d is shown, default is \u2018true\u2019","!category":"enum","!type":"Boolean"},"enableShare":{"!description":"If true the share action is enabled.","!category":"enum","!type":"Boolean"},"CollectionInspector":"sap.ui.ux3.CollectionInspector_obj","favorite":{"!description":"Defines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.","!category":"enum","!type":"Boolean"},"multiSelect":{"!description":"Specifies whether multiple or single selection is used.","!category":"enum","!type":"Boolean"},"headerTitle":{"!description":"Title text in the header of the Exact Browser.","!category":"enum","!type":"String"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!category":"enum","!type":"sap.ui.core.Dock"},"ThingGroup":"sap.ui.ux3.ThingGroup_obj","dividerWidth":{"!description":"The minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area","!category":"enum","!type":"sap.ui.core.CSSSize"},"listHeight":{"!description":"The height of the list area in px.","!category":"enum","!type":"Number"},"shared":{"!description":"Defines whether the entry shall be shared. This property is not supported for comment chunks.","!category":"enum","!type":"Boolean"},"firstTitle":{"!description":"First Line of the Thing Inspector Title","!category":"enum","!type":"String"},"DataSetSimpleView":"sap.ui.ux3.DataSetSimpleView_obj","selectedKeys":{"!description":"Array of type string containing the selected keys.","!category":"enum","!type":"[String]"},"icon":{"!description":"This property is relevant for Shell use: The URL to the icon displayed in the tool area which is used to open the ToolPopup. The recommended size is 32x32px, including some transparent border. Therefore, the content will cover about 20x20px.","!category":"enum","!type":"sap.ui.core.URI"},"updateActionEnabled":{"!description":"Update action enabled/disabled. If disabled the action will be invisible.","!category":"enum","!type":"Boolean"},"overflowItemsToUpperCase":{"!description":"Sets the appearance of the menu items in the overflow menu to uppercase","!category":"enum","!type":"Boolean"},"appTitle":{"!description":"The application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.","!category":"enum","!type":"String"},"ThingAction":"sap.ui.ux3.ThingAction_obj","enabled":{"!description":"action enabled (true/false)","!category":"enum","!type":"Boolean"},"closeDuration":{"!description":"Time in milliseconds for the close animation.","!category":"enum","!type":"Number"},"NavigationBar":"sap.ui.ux3.NavigationBar_obj","enableListClose":{"!description":"Enables the close icons of the displayed lists.","!category":"enum","!type":"Boolean"},"colspan":{"!description":"If Group is used in a column layout the groups spans the all columns if set to true.","!category":"enum","!type":"Boolean"},"visibleStatus":{"!description":"This property displays the bar corresponding to given status","!category":"enum","!type":"sap.ui.ux3.NotificationBarStatus"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"maxHeight":{"!description":"Forces a maximum height of the ToolPopup in pixels. If the ToolPopup content is higher than the ToolPopup, the content will be scrollable.","!category":"enum","!type":"sap.ui.core.CSSSize"},"iconHovered":{"!description":"icon: hovered state","!category":"enum","!type":"sap.ui.core.URI"},"favoriteState":{"!description":"State Of favorite Action","!category":"enum","!type":"Boolean"},"iconSelected":{"!description":"This property is relevant for Shell use: The URL to the icon in selected state displayed in the tool area which is used to open the popup. If no selected icon is given, the hover icon is used.","!category":"enum","!type":"sap.ui.core.URI"},"toolbarVisible":{"!description":"Specifies whether the tool bar shall be visible","!category":"enum","!type":"Boolean"},"deletionAllowed":{"!description":"Flag if the deletion of the chunk shall be allowed","!category":"enum","!type":"Boolean"},"enableFlag":{"!description":"If true the flag action is enabled.","!category":"enum","!type":"Boolean"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"timestamp":{"!description":"Format is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!category":"enum","!type":"String"},"updateState":{"!description":"Indicates whether \u201cUpdate\u201d is active","!category":"enum","!type":"Boolean"},"showFavorite":{"!description":"Indicates whether social action \u201cFavorite\u201d is shown, default is \u2018true\u2019","!category":"enum","!type":"Boolean"},"FeederType":"sap.ui.ux3.FeederType","openDuration":{"!description":"Time in milliseconds for the open animation.","!category":"enum","!type":"Number"},"OverlayContainer":"sap.ui.ux3.OverlayContainer_obj","toplevelVariant":{"!description":"Defines whether the navigation bar shall have top-level appearance","!category":"enum","!type":"Boolean"},"closeButtonVisible":{"!description":"Defines whether the 'Close' button shall be visible.","!category":"enum","!type":"Boolean"},"secondTitle":{"!description":"Second Line of the Thing Inspector Title","!category":"enum","!type":"String"},"listOrder":{"!description":"The order how the sublists of this attribute should be displayed.","!category":"enum","!type":"sap.ui.ux3.ExactOrder"},"enableSave":{"!description":"Whether the save button should be available in the header area.","!category":"enum","!type":"Boolean"},"enableInspect":{"!description":"If true the inspect action is enabled.","!category":"enum","!type":"Boolean"},"width":{"!description":"Width of the ThingViewer","!category":"enum","!type":"sap.ui.core.CSSSize"},"multiSelection":{"!description":"Allow multi selection of items in collection","!category":"enum","!type":"Boolean"},"FacetFilter":"sap.ui.ux3.FacetFilter_obj","firstTitleHref":{"!description":"URI to Thing Inspector","!category":"enum","!type":"String"},"FacetFilterList":"sap.ui.ux3.FacetFilterList_obj","fullHeightContent":{"!description":"If set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space. However, if content is larger, scrollbars will appear at the content area of the Shell and not on window level.","!category":"enum","!type":"Boolean"},"showSubAttributesIndicator":{"!description":"Specifies whether the attribute shall have sub values for visual purposes. The indicator which is a little arrow beside an attribute in the list is computed automatically (getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute). In the case that a supply function is attached, and the supplyActive attribute has value 'true', then the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is considered then and has to be maintained. If the back-end does not support count-calls, for example, showSubAttributesIndicator should be set to true.","!category":"enum","!type":"Boolean"},"DataSetView":"sap.ui.ux3.DataSetView","ThingViewer":"sap.ui.ux3.ThingViewer_obj","ShellPersonalization":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 This class was never released for productive use and will never be.<br>Experimental implementation of visual Ux3 Shell personalization / branding.\n\nDO NOT USE PRODUCTIVELY!!!\n\nBeing completely non-generic as of now, this is supposed to facilitate discussions with Ux about the personalization capabilities. Once that concept is more final, we can go for a cleaner implementation, considering the number of configurable properties etc.","!module":"sap/ui/ux3/ShellPersonalization","!category":"enum","!type":"String"},"flagState":{"!description":"State of Flag Action","!category":"enum","!type":"Boolean"},"showToolbar":{"!description":"show Toolbar","!category":"enum","!type":"Boolean"},"commentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>This flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments, furthermore it must be assigned to a FeedChunk.","!category":"enum","!type":"Boolean"},"appIcon":{"!description":"The URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first. If the appIcon is set, for accessibility reasons the appIconTooltip must also be set.","!category":"enum","!type":"sap.ui.core.URI"},"enableReset":{"!description":"Whether the reset functionality should be available in the header area.","!category":"enum","!type":"Boolean"},"showSearchTool":{"!description":"Whether the \"Global Search\" tool should be displayed or not.","!category":"enum","!type":"Boolean"},"feederSender":{"!description":"Sender for the comment feeder This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!category":"enum","!type":"String"},"iconHover":{"!description":"This property is relevant for Shell use: The URL to the icon in hover state, displayed in the tool area which is used to open the popup.","!category":"enum","!type":"sap.ui.core.URI"},"ShellHeaderType":"sap.ui.ux3.ShellHeaderType","additionalData":{"!description":"An example for additional data are database keys","!category":"enum","!type":"Object"},"inverted":{"!description":"Specifies whether the ToolPopup has a dark or bright background. If set to true the background and borders will be dark. If false they will be bright. This property only has an effect for the GoldReflection-theme.","!category":"enum","!type":"Boolean"},"alwaysShowToggler":{"!description":"This property defines if the toggler should be displayed the whole time when the NotificationBar is shown.","!category":"enum","!type":"Boolean"},"ActionBar":"sap.ui.ux3.ActionBar_obj","selected":{"!description":"Specifies whether the attribute shall be selected","!category":"enum","!type":"Boolean"},"modal":{"!description":"Specifies whether the popup is modal and blocks any user-interaction with controls in the background. Changing this property while the ToolPopup is open will not have any effect. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.","!category":"enum","!type":"Boolean"},"Feed":"sap.ui.ux3.Feed_obj","Notifier":"sap.ui.ux3.Notifier_obj","ExactArea":"sap.ui.ux3.ExactArea_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"offset":{"!description":"Optional. Offset adds these left-top values to the calculated position. Example: \"10 3\".","!category":"enum","!type":"String"},"alwaysShowMoreMenu":{"!description":"If true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons.","!category":"enum","!type":"Boolean"},"checkable":{"!description":"checkable","!category":"enum","!type":"Boolean"},"FeedChunk":"sap.ui.ux3.FeedChunk_obj","showLogoutButton":{"!description":"Whether the Logoff button in the header should be displayed or not.","!category":"enum","!type":"Boolean"},"showInspectorTool":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.7.2 According to the current Ux designs, the ThingInspector should NOT be opened like this from the Tool Pane. And technically, the ThingInspector is not a ToolPopup. Instead trigger it from the respective elements in the Shell content.<br>Whether the \"Inspector\" tool should be displayed or not.","!category":"enum","!type":"Boolean"},"collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!category":"enum","!type":"sap.ui.core.Collision"},"itemMinWidth":{"!description":"When itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set.","!category":"enum","!type":"Number"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Controls that implement the SAP User Experience (UX) Guidelines 3.0","name":{"!description":"Name of the View","!category":"enum","!type":"String"},"Collection":"sap.ui.ux3.Collection_obj","headerType":{"!description":"Defines which header type should be used.","!category":"enum","!type":"sap.ui.ux3.ThingViewerHeaderType"},"paneWidth":{"!description":"The width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px).","!category":"enum","!type":"Number"},"NotificationBarStatus":"sap.ui.ux3.NotificationBarStatus","allowOverlayHeaderAccess":{"!description":"Whether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open.","!category":"enum","!type":"Boolean"},"openActionEnabled":{"!description":"Open Thing action enabled/disabled. If disabled the action will be invisible.","!category":"enum","!type":"Boolean"},"!category":"namespace","title":{"!description":"Determines the title displayed in the pop up window","!category":"enum","!type":"String"},"showFlag":{"!description":"Indicates whether social action \u201cMark for Follow Up\u201d is shown, default is \u2018true\u2019","!category":"enum","!type":"Boolean"},"showPane":{"!description":"Whether the pane bar should be displayed at all or not.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"Shell":"sap.ui.ux3.Shell_obj","flagged":{"!description":"Defines whether the entry is flagged. This property is not supported for comment chunks.","!category":"enum","!type":"Boolean"},"floating":{"!description":"When true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"ThingViewerHeaderType":"sap.ui.ux3.ThingViewerHeaderType","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"OverlayDialog":"sap.ui.ux3.OverlayDialog_obj","visibleItemCountMode":{"!description":"If the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible.","!category":"enum","!type":"sap.ui.ux3.VisibleItemCountMode"},"Feeder":"sap.ui.ux3.Feeder_obj","Exact":"sap.ui.ux3.Exact_obj","live":{"!description":"Specifies whether the feed shall be in live mode","!category":"enum","!type":"Boolean"},"initialItemCount":{"!description":"If this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\"","!category":"enum","!type":"Number"},"followState":{"!description":"Follow State of a Thing","!category":"enum","!type":"sap.ui.ux3.FollowActionState"},"thumbnailSrc":{"!description":"URL to the thumb nail image This property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control.","!category":"enum","!type":"sap.ui.core.URI"},"editable":{"!description":"If a collection is editable an edit button will be displayed below the list of items","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"Whether the header area of the ExactBrowser should be shown.","!category":"enum","!type":"Boolean"},"ExactBrowser":"sap.ui.ux3.ExactBrowser_obj","QuickView":"sap.ui.ux3.QuickView_obj","resizeEnabled":{"!description":"This property enables the bar to be resized by the user.","!category":"enum","!type":"Boolean"},"closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!category":"enum","!type":"Number"},"openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!category":"enum","!type":"Number"},"ThingInspector":"sap.ui.ux3.ThingInspector_obj","VisibleItemCountMode":"sap.ui.ux3.VisibleItemCountMode","responsive":{"!description":"When true and the property floating is true the DatSet items are floating containers filling the whole space of a row.","!category":"enum","!type":"Boolean"},"ActionBarSocialActions":"sap.ui.ux3.ActionBarSocialActions","showTopList":{"!description":"Whether the top list of the ExactBrowser should be shown. When the property is set to false the application must ensure to select top level attributes appropriately.","!category":"enum","!type":"Boolean"},"followActionEnabled":{"!description":"Follow action enabled/disabled. If disabled the action will be invisible.","!category":"enum","!type":"Boolean"},"showUpdate":{"!description":"Indicates whether social action \u201cUpdate\u201d is shown, default is \u2018true\u2019","!category":"enum","!type":"Boolean"},"autoClose":{"!description":"Determines whether the ToolPopup will auto close when it loses focus. If the user e.g. clicks outside of the ToolPopup it will be closed. Please don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will be prompted to the console and \"autoclose\" won't be used.","!category":"enum","!type":"Boolean"},"myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!category":"enum","!type":"sap.ui.core.Dock"}},"sap.ui.ux3.NotificationBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NotificationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.NotificationBar"},"sap.ui.ux3.Collection":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id"}},"fireSelectionChanged":{"!description":"Fires event {@link #event:selectionChanged selectionChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Collection","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nIf a collection is editable an edit button will be displayed below the list of items\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Element","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.Collection"},"!category":"class","detachPropertyChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:propertyChanged propertyChanged} event of this <code>sap.ui.ux3.Collection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMultiSelection":{"!description":"Gets current value of property {@link #getMultiSelection multiSelection}.\n\nAllow multi selection of items in collection\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.ux3.Collection","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems in the collection","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"detachSelectionChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.ux3.Collection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new Collection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getMultiSelection multiSelection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItems selectedItems} : (sap.ui.core.ID | sap.ui.core.Item)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChanged selectionChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyChanged propertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nName for the collection","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectedItems":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getSelectedItems selectedItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Collection","attachPropertyChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:propertyChanged propertyChanged} event of this <code>sap.ui.ux3.Collection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Collection<\/code> itself.\n\nFires if a property has changed, and the collection inspector needs to do something after that","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Collection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.Collection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectionChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChanged selectionChanged} event of this <code>sap.ui.ux3.Collection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.Collection<\/code> itself.\n\nFired when ever the selected items changer","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.Collection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.Collection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"firePropertyChanged":{"!description":"Fires event {@link #event:propertyChanged propertyChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.Collection","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addSelectedItem":{"!static":false,"!category":"function","!type":"fn(vSelectedItem: String | sap.ui.core.Item) -> sap.ui.ux3.Collection","parameters":{"vSelectedItem":"type: string|sap.ui.core.Item, description: Id of a selectedItem which becomes an additional target of this <code>selectedItems<\/code> association. Alternatively, a selectedItem instance may be given."}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nName for the collection\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.ui.ux3.Collection","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeSelectedItem":{"!static":false,"!category":"function","!type":"fn(vSelectedItem: Number | String | sap.ui.core.Item) -> String","parameters":{"vSelectedItem":"type: int|string|sap.ui.core.Item, description: the selectedItem to remove or its index or id"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setMultiSelection":{"!description":"Sets a new value for property {@link #getMultiSelection multiSelection}.\n\nAllow multi selection of items in collection\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiSelection: Boolean) -> sap.ui.ux3.Collection","parameters":{"bMultiSelection":"type: boolean, description: New value for property <code>multiSelection<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Collection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nIf a collection is editable an edit button will be displayed below the list of items\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.ux3.Collection","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/ui/ux3/Collection","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Collection","insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.ux3.Collection","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Item, description: The item to insert; if empty, nothing is inserted"}},"removeAllSelectedItems":{"!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.ui.ux3.FeedChunk":{"addActionMenuItem":{"!description":"Adds some actionMenuItem to the aggregation {@link #getActionMenuItems actionMenuItems}.","!static":false,"!category":"function","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem) -> sap.ui.ux3.FeedChunk","parameters":{"oActionMenuItem":"type: sap.ui.commons.MenuItem, description: The actionMenuItem to add; if empty, nothing is inserted"}},"destroyComments":{"!description":"Destroys all the comments in the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FeedChunk"},"destroyActionMenuItems":{"!description":"Destroys all the actionMenuItems in the aggregation {@link #getActionMenuItems actionMenuItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FeedChunk"},"getCommentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>Gets current value of property {@link #getCommentChunk commentChunk}.\n\nThis flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments, furthermore it must be assigned to a FeedChunk.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFeederThumbnailSrc":{"!description":"Sets a new value for property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nURL to the thumbnail image for the comment feeder. This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.FeedChunk","parameters":{"sFeederThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>feederThumbnailSrc<\/code>"}},"fireInspect":{"!description":"Fires event {@link #event:inspect inspect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEnableFavorite":{"!description":"Gets current value of property {@link #getEnableFavorite enableFavorite}.\n\nIf true the favorite action is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachInspect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:inspect inspect} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachActionItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:actionItemSelected actionItemSelected} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setEnableComment":{"!description":"Sets a new value for property {@link #getEnableComment enableComment}.\n\nIf true the comment action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableComment: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bEnableComment":"type: boolean, description: New value for property <code>enableComment<\/code>"}},"setShared":{"!description":"Sets a new value for property {@link #getShared shared}.\n\nDefines whether the entry shall be shared. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShared: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bShared":"type: boolean, description: New value for property <code>shared<\/code>"}},"getEnableFlag":{"!description":"Gets current value of property {@link #getEnableFlag enableFlag}.\n\nIf true the flag action is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getComments":{"!description":"Gets content of aggregation {@link #getComments comments}.\n\nComments on this chunk","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FeedChunk]"},"fireToggleFlagged":{"!description":"Fires event {@link #event:toggleFlagged toggleFlagged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEnableComment":{"!description":"Gets current value of property {@link #getEnableComment enableComment}.\n\nIf true the comment action is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachReferenceClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:referenceClicked referenceClicked} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nClick on a @-reference","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSenderClicked":{"!description":"Fires event {@link #event:senderClicked senderClicked} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEnableShare":{"!description":"Gets current value of property {@link #getEnableShare enableShare}.\n\nIf true the share action is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addComment":{"!description":"Adds some comment to the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(oComment: sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","parameters":{"oComment":"type: sap.ui.ux3.FeedChunk, description: The comment to add; if empty, nothing is inserted"}},"getFeederThumbnailSrc":{"!description":"Gets current value of property {@link #getFeederThumbnailSrc feederThumbnailSrc}.\n\nURL to the thumbnail image for the comment feeder. This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getEnableInspect":{"!description":"Gets current value of property {@link #getEnableInspect enableInspect}.\n\nIf true the inspect action is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.FeedListItem<\/code> control.<br>The unit that is embedded - single-wise or in a multiple way - into a Feed control. The control provides a set of properties for text, sender information, time stamp, comments, and functions such as flagging the entry to be favorite, shared, or flagged.","attachToggleFavorite":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggleFavorite toggleFavorite} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to set the entry as favorite. This event is not supported for comment chunks.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.FeedChunk.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireActionItemSelected":{"!description":"Fires event {@link #event:actionItemSelected actionItemSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe FeedChunk text. @References are supported.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnableFlag":{"!description":"Sets a new value for property {@link #getEnableFlag enableFlag}.\n\nIf true the flag action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableFlag: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bEnableFlag":"type: boolean, description: New value for property <code>enableFlag<\/code>"}},"setFavorite":{"!description":"Sets a new value for property {@link #getFavorite favorite}.\n\nDefines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bFavorite: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bFavorite":"type: boolean, description: New value for property <code>favorite<\/code>"}},"fireCommentAdded":{"!description":"Fires event {@link #event:commentAdded commentAdded} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getActionMenuItems":{"!description":"Gets content of aggregation {@link #getActionMenuItems actionMenuItems}.\n\nMenuItems to open when there is a click on the action menu button","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.MenuItem]"},"setThumbnailSrc":{"!description":"Sets a new value for property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumbnail image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThumbnailSrc: sap.ui.core.URI) -> sap.ui.ux3.FeedChunk","parameters":{"sThumbnailSrc":"type: sap.ui.core.URI, description: New value for property <code>thumbnailSrc<\/code>"}},"detachToggleShared":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggleShared toggleShared} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.FeedChunk with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeActionMenuItem":{"!description":"Removes a actionMenuItem from the aggregation {@link #getActionMenuItems actionMenuItems}.","!static":false,"!category":"function","!type":"fn(vActionMenuItem: Number | String | sap.ui.commons.MenuItem) -> sap.ui.commons.MenuItem","parameters":{"vActionMenuItem":"type: int|string|sap.ui.commons.MenuItem, description: The actionMenuItem to remove or its index or id"}},"removeAllComments":{"!description":"Removes all the controls from the aggregation {@link #getComments comments}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.FeedChunk]"},"attachActionItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:actionItemSelected actionItemSelected} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when an item from the action menu button was selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireDeleted":{"!description":"Fires event {@link #event:deleted deleted} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/ux3/FeedChunk","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.FeedListItem<\/code> control.<br>The unit that is embedded - single-wise or in a multiple way - into a Feed control. The control provides a set of properties for text, sender information, time stamp, comments, and functions such as flagging the entry to be favorite, shared, or flagged.","setEnableShare":{"!description":"Sets a new value for property {@link #getEnableShare enableShare}.\n\nIf true the share action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableShare: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bEnableShare":"type: boolean, description: New value for property <code>enableShare<\/code>"}},"attachDeleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:deleted deleted} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the deletion button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFeederSender":{"!description":"Gets current value of property {@link #getFeederSender feederSender}.\n\nSender for the comment feeder This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.","!static":false,"!category":"function","!type":"fn() -> String"},"fireToggleFavorite":{"!description":"Fires event {@link #event:toggleFavorite toggleFavorite} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSender":{"!description":"Gets current value of property {@link #getSender sender}.\n\nSender of the chunk","!static":false,"!category":"function","!type":"fn() -> String"},"bindActionMenuItems":{"!description":"Binds aggregation {@link #getActionMenuItems actionMenuItems} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"attachCommentAdded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:commentAdded commentAdded} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when a comment is added to the entry. This event is not supported for comment chunks.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSenderClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:senderClicked senderClicked} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfActionMenuItem":{"!description":"Checks for the provided <code>sap.ui.commons.MenuItem<\/code> in the aggregation {@link #getActionMenuItems actionMenuItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem) -> Number","parameters":{"oActionMenuItem":"type: sap.ui.commons.MenuItem, description: The actionMenuItem whose index is looked for"}},"attachSenderClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:senderClicked senderClicked} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the thumbnail or the name of the sender is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setCommentChunk":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Not longer used. If a chunk is a comment is determined from hierarchy. If the parent is a chunk it's automatically a comment.<br>Sets a new value for property {@link #getCommentChunk commentChunk}.\n\nThis flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments, furthermore it must be assigned to a FeedChunk.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCommentChunk: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bCommentChunk":"type: boolean, description: New value for property <code>commentChunk<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","detachDeleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:deleted deleted} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachToggleFlagged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggleFlagged toggleFlagged} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachToggleFlagged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggleFlagged toggleFlagged} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to flag the entry. This event is not supported for comment chunks.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDeletionAllowed":{"!description":"Gets current value of property {@link #getDeletionAllowed deletionAllowed}.\n\nFlag if the deletion of the chunk shall be allowed\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertComment":{"!description":"Inserts a comment into the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(oComment: sap.ui.ux3.FeedChunk, iIndex: Number) -> sap.ui.ux3.FeedChunk","parameters":{"oComment":"type: sap.ui.ux3.FeedChunk, description: The comment to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the comment should be inserted at; for a negative value of <code>iIndex<\/code>, the comment is inserted at position 0; for a value greater than the current size of the aggregation, the comment is inserted at the last position"}},"detachCommentAdded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:commentAdded commentAdded} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new FeedChunk.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getThumbnailSrc thumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getSender sender} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getDeletionAllowed deletionAllowed} : boolean (default: false)<\/li>\n<li>{@link #getCommentChunk commentChunk} : boolean (default: false)<\/li>\n<li>{@link #getFeederThumbnailSrc feederThumbnailSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getFeederSender feederSender} : string<\/li>\n<li>{@link #getFlagged flagged} : boolean (default: false)<\/li>\n<li>{@link #getFavorite favorite} : boolean<\/li>\n<li>{@link #getShared shared} : boolean (default: false)<\/li>\n<li>{@link #getEnableFlag enableFlag} : boolean (default: true)<\/li>\n<li>{@link #getEnableShare enableShare} : boolean (default: true)<\/li>\n<li>{@link #getEnableComment enableComment} : boolean (default: true)<\/li>\n<li>{@link #getEnableInspect enableInspect} : boolean (default: true)<\/li>\n<li>{@link #getEnableFavorite enableFavorite} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getComments comments} : sap.ui.ux3.FeedChunk[]<\/li>\n<li>{@link #getActionMenuItems actionMenuItems} : sap.ui.commons.MenuItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:deleted deleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:commentAdded commentAdded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:toggleFlagged toggleFlagged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:senderClicked senderClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:referenceClicked referenceClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:toggleFavorite toggleFavorite} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:inspect inspect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:toggleShared toggleShared} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:actionItemSelected actionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfComment":{"!description":"Checks for the provided <code>sap.ui.ux3.FeedChunk<\/code> in the aggregation {@link #getComments comments}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oComment: sap.ui.ux3.FeedChunk) -> Number","parameters":{"oComment":"type: sap.ui.ux3.FeedChunk, description: The comment whose index is looked for"}},"setEnableInspect":{"!description":"Sets a new value for property {@link #getEnableInspect enableInspect}.\n\nIf true the inspect action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableInspect: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bEnableInspect":"type: boolean, description: New value for property <code>enableInspect<\/code>"}},"setFlagged":{"!description":"Sets a new value for property {@link #getFlagged flagged}.\n\nDefines whether the entry is flagged. This property is not supported for comment chunks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFlagged: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bFlagged":"type: boolean, description: New value for property <code>flagged<\/code>"}},"fireToggleShared":{"!description":"Fires event {@link #event:toggleShared toggleShared} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getTimestamp":{"!description":"Gets current value of property {@link #getTimestamp timestamp}.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone","!static":false,"!category":"function","!type":"fn() -> String"},"setFeederSender":{"!description":"Sets a new value for property {@link #getFeederSender feederSender}.\n\nSender for the comment feeder This property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFeederSender: String) -> sap.ui.ux3.FeedChunk","parameters":{"sFeederSender":"type: string, description: New value for property <code>feederSender<\/code>"}},"fireReferenceClicked":{"!description":"Fires event {@link #event:referenceClicked referenceClicked} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"bindComments":{"!description":"Binds aggregation {@link #getComments comments} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeComment":{"!description":"Removes a comment from the aggregation {@link #getComments comments}.","!static":false,"!category":"function","!type":"fn(vComment: Number | String | sap.ui.ux3.FeedChunk) -> sap.ui.ux3.FeedChunk","parameters":{"vComment":"type: int|string|sap.ui.ux3.FeedChunk, description: The comment to remove or its index or id"}},"setTimestamp":{"!description":"Sets a new value for property {@link #getTimestamp timestamp}.\n\nFormat is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimestamp: String) -> sap.ui.ux3.FeedChunk","parameters":{"sTimestamp":"type: string, description: New value for property <code>timestamp<\/code>"}},"unbindComments":{"!description":"Unbinds aggregation {@link #getComments comments} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FeedChunk"},"attachToggleShared":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggleShared toggleShared} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is raised when the user clicks to share the entry. This event is not supported for comment chunks.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachInspect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:inspect inspect} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.FeedChunk<\/code> itself.\n\nEvent is fired when the inspect button was pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.FeedChunk<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShared":{"!description":"Gets current value of property {@link #getShared shared}.\n\nDefines whether the entry shall be shared. This property is not supported for comment chunks.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getThumbnailSrc":{"!description":"Gets current value of property {@link #getThumbnailSrc thumbnailSrc}.\n\nURL to the thumbnail image.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"insertActionMenuItem":{"!description":"Inserts a actionMenuItem into the aggregation {@link #getActionMenuItems actionMenuItems}.","!static":false,"!category":"function","!type":"fn(oActionMenuItem: sap.ui.commons.MenuItem, iIndex: Number) -> sap.ui.ux3.FeedChunk","parameters":{"oActionMenuItem":"type: sap.ui.commons.MenuItem, description: The actionMenuItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionMenuItem should be inserted at; for a negative value of <code>iIndex<\/code>, the actionMenuItem is inserted at position 0; for a value greater than the current size of the aggregation, the actionMenuItem is inserted at the last position"}},"setDeletionAllowed":{"!description":"Sets a new value for property {@link #getDeletionAllowed deletionAllowed}.\n\nFlag if the deletion of the chunk shall be allowed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDeletionAllowed: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bDeletionAllowed":"type: boolean, description: New value for property <code>deletionAllowed<\/code>"}},"getFavorite":{"!description":"Gets current value of property {@link #getFavorite favorite}.\n\nDefines whether the entry shall be displayed as favorite. This property is not supported for comment chunks.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnableFavorite":{"!description":"Sets a new value for property {@link #getEnableFavorite enableFavorite}.\n\nIf true the favorite action is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableFavorite: Boolean) -> sap.ui.ux3.FeedChunk","parameters":{"bEnableFavorite":"type: boolean, description: New value for property <code>enableFavorite<\/code>"}},"removeAllActionMenuItems":{"!description":"Removes all the controls from the aggregation {@link #getActionMenuItems actionMenuItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.MenuItem]"},"unbindActionMenuItems":{"!description":"Unbinds aggregation {@link #getActionMenuItems actionMenuItems} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.FeedChunk"},"detachReferenceClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:referenceClicked referenceClicked} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setSender":{"!description":"Sets a new value for property {@link #getSender sender}.\n\nSender of the chunk\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSender: String) -> sap.ui.ux3.FeedChunk","parameters":{"sSender":"type: string, description: New value for property <code>sender<\/code>"}},"detachToggleFavorite":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggleFavorite toggleFavorite} event of this <code>sap.ui.ux3.FeedChunk<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.FeedChunk","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFlagged":{"!description":"Gets current value of property {@link #getFlagged flagged}.\n\nDefines whether the entry is flagged. This property is not supported for comment chunks.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe FeedChunk text. @References are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.ux3.FeedChunk","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.ux3.ExactArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Consists of two sections: A tool bar and a content area where arbitrary controls can be added. The ExactArea is intended to be used for the Exact design approach but alternatively also in a stand alone version.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ExactArea.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setToolbarVisible":{"!description":"Sets a new value for property {@link #getToolbarVisible toolbarVisible}.\n\nSpecifies whether the tool bar shall be visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToolbarVisible: Boolean) -> sap.ui.ux3.ExactArea","parameters":{"bToolbarVisible":"type: boolean, description: New value for property <code>toolbarVisible<\/code>"}},"removeAllToolbarItems":{"!description":"Removes all the controls from the aggregation {@link #getToolbarItems toolbarItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nArbitrary child controls of the content area","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getToolbarVisible":{"!description":"Gets current value of property {@link #getToolbarVisible toolbarVisible}.\n\nSpecifies whether the tool bar shall be visible\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfToolbarItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation {@link #getToolbarItems toolbarItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem) -> Number","parameters":{"oToolbarItem":"type: sap.ui.commons.ToolbarItem, description: The toolbarItem whose index is looked for"}},"removeToolbarItem":{"!description":"Removes a toolbarItem from the aggregation {@link #getToolbarItems toolbarItems}.","!static":false,"!category":"function","!type":"fn(vToolbarItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","parameters":{"vToolbarItem":"type: int|string|sap.ui.commons.ToolbarItem, description: The toolbarItem to remove or its index or id"}},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.ux3.ExactArea","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"destroyToolbarItems":{"!description":"Destroys all the toolbarItems in the aggregation {@link #getToolbarItems toolbarItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactArea"},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addToolbarItem":{"!description":"Adds some toolbarItem to the aggregation {@link #getToolbarItems toolbarItems}.","!static":false,"!category":"function","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem) -> sap.ui.ux3.ExactArea","parameters":{"oToolbarItem":"type: sap.ui.commons.ToolbarItem, description: The toolbarItem to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new ExactArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getToolbarVisible toolbarVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getToolbarItems toolbarItems} : sap.ui.commons.ToolbarItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/ux3/ExactArea","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Consists of two sections: A tool bar and a content area where arbitrary controls can be added. The ExactArea is intended to be used for the Exact design approach but alternatively also in a stand alone version.","insertToolbarItem":{"!description":"Inserts a toolbarItem into the aggregation {@link #getToolbarItems toolbarItems}.","!static":false,"!category":"function","!type":"fn(oToolbarItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.ux3.ExactArea","parameters":{"oToolbarItem":"type: sap.ui.commons.ToolbarItem, description: The toolbarItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the toolbarItem should be inserted at; for a negative value of <code>iIndex<\/code>, the toolbarItem is inserted at position 0; for a value greater than the current size of the aggregation, the toolbarItem is inserted at the last position"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.ux3.ExactArea","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.ExactArea"},"getToolbarItems":{"!description":"Gets content of aggregation {@link #getToolbarItems toolbarItems}.\n\nTool bar items which shall be shown in the tool bar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.commons.ToolbarItem]"}},"sap.ui.ux3.Feeder_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.Feeder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.Feeder"},"sap.ui.ux3.ThingAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Thing Action for Swatch, QuickView, Thinginspector","getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.ThingAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.ux3.ThingAction","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\ntext of action","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.ux3.ThingAction<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.ThingAction<\/code> itself.\n\nEvent will be fired when the action was triggered.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingAction","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.ThingAction<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ThingAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\naction enabled (true/false)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.ui.ux3.ThingAction","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new ThingAction.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/ux3/ThingAction","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Thing Action for Swatch, QuickView, Thinginspector","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\naction enabled (true/false)\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.ux3.ThingAction<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.ThingAction","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\ntext of action\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.ux3.ThingAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.ux3.DataSetSimpleView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.DataSetSimpleView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.DataSetSimpleView"},"sap.ui.ux3.NavigationBar":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationItem","parameters":{"vItem":"type: int|string|sap.ui.ux3.NavigationItem, description: The item to remove or its index or id"}},"setAssociatedItems":{"!description":"Replaces the currently associated items with the ones in the given array","!static":false,"!category":"function","!type":"fn(aItems: [sap.ui.ux3.NavigationItem]) -> sap.ui.ux3.NavigationBar","parameters":{"aItems":"type: sap.ui.ux3.NavigationItem[], description: The items to associate"}},"removeAssociatedItem":{"!description":"Removes an associatedItem from the association named {@link #getAssociatedItems associatedItems}.","!static":false,"!category":"function","!type":"fn(vAssociatedItem: Number | sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.core.ID","parameters":{"vAssociatedItem":"type: int|sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: The associatedItem to be removed or its index or ID"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.ux3.NavigationBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.ux3.NavigationBar<\/code> itself.\n\nEvent is fired when an item is selected by the user","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NavigationBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.ux3.NavigationBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.ux3.NavigationBar"},"setToplevelVariant":{"!description":"Sets a new value for property {@link #getToplevelVariant toplevelVariant}.\n\nDefines whether the navigation bar shall have top-level appearance\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bToplevelVariant: Boolean) -> sap.ui.ux3.NavigationBar","parameters":{"bToplevelVariant":"type: boolean, description: New value for property <code>toplevelVariant<\/code>"}},"!category":"class","getOverflowItemsToUpperCase":{"!description":"Gets current value of property {@link #getOverflowItemsToUpperCase overflowItemsToUpperCase}.\n\nSets the appearance of the menu items in the overflow menu to uppercase\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","parameters":{"oItem":"type: sap.ui.ux3.NavigationItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nIf the navigation items need to have a different parent than the NavigationBar, alternatively the associatedItems association can be used. The NavigationBar follows the approach to use the items aggregation. If this aggregation is empty, associatedItems is used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"!constructorDescription":"Constructor for a new NavigationBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getToplevelVariant toplevelVariant} : boolean (default: false)<\/li>\n<li>{@link #getOverflowItemsToUpperCase overflowItemsToUpperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.ux3.NavigationItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.ux3.NavigationItem)<\/li>\n<li>{@link #getAssociatedItems associatedItems} : (sap.ui.core.ID | sap.ui.ux3.NavigationItem)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.ux3.NavigationItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.NavigationItem) -> Number","parameters":{"oItem":"type: sap.ui.ux3.NavigationItem, description: The item whose index is looked for"}},"removeAllAssociatedItems":{"!description":"Removes all the controls in the association named {@link #getAssociatedItems associatedItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSelectedItem":{"!description":"ID of the element which is the current target of the association {@link #getSelectedItem selectedItem}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.IconTabBar<\/code>, <code>sap.m.TabContainer<\/code> or <code>sap.uxap.ObjectPageLayout<\/code> control.<br>Provides enhanced navigation capabilities and is the parent control of NavigationItem. It is displayed in the form of a horizontal line with switching markers depending on the currently selected item. The size of an item which is currently chosen by the user is enlarged. In the case that a large number of items are defined for the bar, this is made transparent to the user by showing symbols for scrolling options (forwards and backwards) to see the next or previous items.","getAssociatedItems":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAssociatedItems associatedItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.ux3.NavigationBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getToplevelVariant":{"!description":"Gets current value of property {@link #getToplevelVariant toplevelVariant}.\n\nDefines whether the navigation bar shall have top-level appearance\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.ux3.NavigationItem]"},"addAssociatedItem":{"!description":"Adds some associatedItem into the association {@link #getAssociatedItems associatedItems}.","!static":false,"!category":"function","!type":"fn(vAssociatedItem: sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","parameters":{"vAssociatedItem":"type: sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: The associatedItems to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.NavigationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setOverflowItemsToUpperCase":{"!description":"Sets a new value for property {@link #getOverflowItemsToUpperCase overflowItemsToUpperCase}.\n\nSets the appearance of the menu items in the overflow menu to uppercase\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOverflowItemsToUpperCase: Boolean) -> sap.ui.ux3.NavigationBar","parameters":{"bOverflowItemsToUpperCase":"type: boolean, description: New value for property <code>overflowItemsToUpperCase<\/code>"}},"setSelectedItem":{"!description":"Sets the associated {@link #getSelectedItem selectedItem}.","!static":false,"!category":"function","!type":"fn(oSelectedItem: sap.ui.core.ID | sap.ui.ux3.NavigationItem) -> sap.ui.ux3.NavigationBar","parameters":{"oSelectedItem":"type: sap.ui.core.ID|sap.ui.ux3.NavigationItem, description: ID of an element which becomes the new target of this selectedItem association; alternatively, an element instance may be given"}},"!module":"sap/ui/ux3/NavigationBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.IconTabBar<\/code>, <code>sap.m.TabContainer<\/code> or <code>sap.uxap.ObjectPageLayout<\/code> control.<br>Provides enhanced navigation capabilities and is the parent control of NavigationItem. It is displayed in the form of a horizontal line with switching markers depending on the currently selected item. The size of an item which is currently chosen by the user is enlarged. In the case that a large number of items are defined for the bar, this is made transparent to the user by showing symbols for scrolling options (forwards and backwards) to see the next or previous items.","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.ux3.NavigationBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.ux3.NavigationBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.ux3.NavigationItem, iIndex: Number) -> sap.ui.ux3.NavigationBar","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.ux3.NavigationItem, description: The item to insert; if empty, nothing is inserted"}},"isSelectedItemValid":{"!description":"Returns whether there is a selectedItem set which is actually present in the items aggregation; or, if the aggregation is empty, in the associatedItems association.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.ux3.ExactBrowser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.ux3.ExactBrowser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.ux3.ExactBrowser"}}}