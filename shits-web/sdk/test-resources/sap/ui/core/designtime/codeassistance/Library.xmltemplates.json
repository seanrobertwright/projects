{"XML_KEYWORDS":["sap.ui.core.CommandExecution","sap.ui.core.ComponentContainer","sap.ui.core.Control","sap.ui.core.CustomData","sap.ui.core.Element","sap.ui.core.HTML","sap.ui.core.Icon","sap.ui.core.InvisibleText","sap.ui.core.Item","sap.ui.core.LayoutData","sap.ui.core.ListItem","sap.ui.core.LocalBusyIndicator","sap.ui.core.Message","sap.ui.core.ScrollBar","sap.ui.core.SeparatorItem","sap.ui.core.Title","sap.ui.core.TooltipBase","sap.ui.core.VariantLayoutData","sap.ui.core.XMLComposite","sap.ui.core.dnd.DragDropBase","sap.ui.core.dnd.DragDropInfo","sap.ui.core.dnd.DragInfo","sap.ui.core.dnd.DropInfo","sap.ui.core.mvc.HTMLView","sap.ui.core.mvc.JSONView","sap.ui.core.mvc.JSView","sap.ui.core.mvc.TemplateView","sap.ui.core.mvc.View","sap.ui.core.mvc.XMLView","sap.ui.core.search.OpenSearchProvider","sap.ui.core.search.SearchProvider","sap.ui.core.tmpl.DOMAttribute","sap.ui.core.tmpl.DOMElement","sap.ui.core.tmpl.TemplateControl","sap.ui.core.util.Export","sap.ui.core.util.ExportCell"],"XML_TEMPLATES":[{"template":"<CommandExecution\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcommand=\"\"\n\tenabled=\"true\"\n\tvisible=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\texecute=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/CommandExecution>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"CommandExecution","Experimental":false,"module":"sap/ui/core/CommandExecution","name":"sap.ui.core.CommandExecution","description":"sap.ui.core.CommandExecution","constructorDescription":"Creates and initializes a new CommandExecution.\n\nThe CommandExecution registers a shortcut when it is added to the dependent\naggregation of a control. The shortcut information is retrieved from the\nowner components manifest (<code>/sap.ui5/commands/&lt;command&gt;<\/code>).\n\nYou can use a CommandExecution instead of an event handler in XMLViews by\nusing <code>cmd:<\/code> plus the command name.\n\nExample for <code>sap.m.Button<\/code>:\n\n<pre>\n&lt;Button press=\"cmd:MyCommand\" /&gt;\n<\/pre>\n\nWhen the press event is fired, the CommandExecution will be triggered and\nthe <code>execute<\/code> event is fired.\n\nWhen using commands, the component will create a model named <code>$cmd<\/code>.\nThe model data provides the enabled state of all CommandExecution.\nWhen binding a button's enabled state to this model, it follows the\nenabled state of the CommandExecution. The binding path must be relative\nlike <code>myCommand/enabled<\/code>:\n\n<pre>\n&lt;Button press=\"cmd:MyCommand\" enabled=\"$cmd&gt;MyCommand/enabled\" /&gt;\n<\/pre>\n\n<b>Note: The usage of the <code>$cmd<\/code> model is restricted to <code>sap.suite.ui.generic<\/code><\/b>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCommand command} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:execute execute} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<ComponentContainer\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tname=\"\"\n\turl=\"\"\n\tasync=\"false\"\n\thandleValidation=\"false\"\n\tsettings=\"\"\n\tpropagateModel=\"false\"\n\twidth=\"\"\n\theight=\"\"\n\tlifecycle=\"Legacy\"\n\tautoPrefixId=\"false\"\n\tusage=\"\"\n\tmanifest=\"\"\n\tcomponent=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tcomponentCreated=\"\"\n\tcomponentFailed=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/ComponentContainer>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"ComponentContainer","Experimental":false,"module":"sap/ui/core/ComponentContainer","name":"sap.ui.core.ComponentContainer","description":"sap.ui.core.ComponentContainer","constructorDescription":"Constructor for a new ComponentContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getUrl url} : sap.ui.core.URI<\/li>\n<li>{@link #getAsync async} : boolean (default: false)<\/li>\n<li>{@link #getHandleValidation handleValidation} : boolean (default: false)<\/li>\n<li>{@link #getSettings settings} : object<\/li>\n<li>{@link #getPropagateModel propagateModel} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLifecycle lifecycle} : sap.ui.core.ComponentLifecycle (default: Legacy)<\/li>\n<li>{@link #getAutoPrefixId autoPrefixId} : boolean (default: false)<\/li>\n<li>{@link #getUsage usage} : string<\/li>\n<li>{@link #getManifest manifest} : any<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getComponent component} : (sap.ui.core.ID | sap.ui.core.UIComponent)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:componentCreated componentCreated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:componentFailed componentFailed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"Container that embeds a <code>sap/ui/core/UIComponent<\/code> in a control tree.\n\n<b>Concerning asynchronous component loading:<\/b>\n\nTo activate a fully asynchronous loading behavior of components and their dependencies, the property <code>async<\/code> needs to be set to <code>true<\/code> and the <code>manifest<\/code> property needs to be set to a 'truthy' value, e.g. <code>true<\/code> or a URL to the manifest location. If both options are correctly set, the component factory will load and evaluate the component manifest first. In this way, the additional dependencies of the Component are already known before the Component preload/controller is loaded. Both the component preload/controller and the additional dependencies can thus be loaded asynchronously and in parallel.\n\nSample usage of the ComponentContainer:\n\n<pre>\n    &lt;!-- inside XML view -->\n    ...\n    &lt;core:ComponentContainer\n        usage=\"someComponent\"\n        manifest=\"true\"\n        async=\"true\"\n    />\n<\/pre>\n\nSee also {@link sap.ui.core.ComponentSupport}.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<Control\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/Control>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"Control","Experimental":false,"module":"sap/ui/core/Control","name":"sap.ui.core.Control","description":"sap.ui.core.Control","constructorDescription":"Creates and initializes a new control with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBlocked blocked} : boolean (default: false)<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getBusyIndicatorDelay busyIndicatorDelay} : int (default: 1000)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.BusyIndicatorSize (default: Medium)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getFieldGroupIds fieldGroupIds} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:validateFieldGroup validateFieldGroup} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"Base Class for Controls.\n\nControls provide the following features: <ul> <li><b>Rendering<\/b>: the <code>RenderManager<\/code> only expects instances of class <code>Control<\/code> in its {@link sap.ui.core.RenderManager#renderControl renderControl} method. By convention, each control class has an associated static class that takes care of rendering the control (its 'Renderer').<\/li> <li><b>show / hide<\/b>: a control can be hidden, although it is still part of the control tree, see property {@link #getVisible visible}<\/li> <li><b>local busy indicator<\/b>: marks a control visually as 'busy', see properties {@link #getBusy busy} and {@link #getBusyIndicatorDelay busyIndicatorDelay}<\/li> <li><b>field groups<\/b>: by assigning the same group ID to a set of editable controls, they form a group which can be validated together. See property {@link #getFieldGroupIds fieldGroupIds} and event {@link #event:validateFieldGroup validateFieldGroup}. The term <i>field<\/i> was chosen as most often this feature will be used to group editable fields in a form.<\/li> See the documentation for {@link topic:5b0775397e394b1fb973fa207554003e Field Groups} for more details. <li><b>custom style classes<\/b>: all controls allow to add custom CSS classes to their rendered DOM without modifying their renderer code. See methods {@link #addStyleClass addStyleClass}, {@link #removeStyleClass removeStyleClass}, {@link #toggleStyleClass toggleStyleClass} and {@link #hasStyleClass hasStyleClass}.<\/br> The necessary implementation is encapsulated in {@link sap.ui.core.CustomStyleClassSupport CustomStyleClassSupport} and can be applied to selected element classes as well.<\/li> <li><b>browser events<\/b>: by calling the methods {@link #attachBrowserEvent attachBrowserEvent} and {@link #detachBrowserEvent detachBrowserEvent}, consumers can let the control class take care of registering / de-registering a given set of event listeners to the control's root DOM node. The framework will adapt the registration whenever the DOM node changes (e.g. before or after rendering or when the control is destroyed).<\/li> <\/ul>\n\nSee section \"{@link topic:8dcab0011d274051808f959800cabf9f Developing Controls}\" in the documentation for an introduction to control development.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<CustomData\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tkey=\"\"\n\tvalue=\"\"\n\twriteToDom=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/CustomData>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"CustomData","Experimental":false,"module":"sap/ui/core/CustomData","name":"sap.ui.core.CustomData","description":"sap.ui.core.CustomData","constructorDescription":"Constructor for a new <code>CustomData<\/code> element.","helpDescription":"Contains a single key/value pair of custom data attached to an <code>Element<\/code>.\n\nSee method {@link sap.ui.core.Element#data Element.prototype.data} and the chapter {@link topic:91f0c3ee6f4d1014b6dd926db0e91070 Custom Data - Attaching Data Objects to Controls} in the documentation.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<Element\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/Element>\n","extends":"sap.ui.base.ManagedObject","Deprecated":false,"prefix":"Element","Experimental":false,"module":"sap/ui/core/Element","name":"sap.ui.core.Element","description":"sap.ui.core.Element","constructorDescription":"Constructs and initializes a UI Element with the given <code>sId<\/code> and settings.\n\n\n<h3>Uniqueness of IDs<\/h3>\n\nEach <code>Element<\/code> must have an ID. If no <code>sId<\/code> or <code>mSettings.id<\/code> is\ngiven at construction time, a new ID will be created automatically. The IDs of all elements that exist\nat the same time in the same window must be different. Providing an ID which is already used by another\nelement throws an error.\n\nWhen an element is created from a declarative source (e.g. XMLView), then an ID defined in that\ndeclarative source needs to be unique only within the declarative source. Declarative views will\nprefix that ID with their own ID (and some separator) before constructing the element.\nProgrammatically created views (JSViews) can do the same with the {@link sap.ui.core.mvc.View#createId} API.\nSimilarly, UIComponents can prefix the IDs of elements created in their context with their own ID.\nAlso see {@link sap.ui.core.UIComponent#getAutoPrefixId UIComponent#getAutoPrefixId}.\n\n\n<h3>Settings<\/h3>\nIf the optional <code>mSettings<\/code> are given, they must be a JSON-like object (object literal)\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names:<\/b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the control and its base classes. Note that for  0..n aggregations and associations this\nusually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nIf a key name is ambiguous for a specific control class (e.g. a property has the same\nname as an event), then this method prefers property, aggregation, association and\nevent in that order. To resolve such ambiguities, the keys can be prefixed with\n<code>aggregation:<\/code>, <code>association:<\/code> or <code>event:<\/code>.\nIn that case the keys must be quoted due to the ':'.\n\nEach subclass should document the set of supported names in its constructor documentation.\n\n<b>Valid Values:<\/b>\n\n<ul>\n<li>for normal properties, the value has to be of the correct simple type (no type conversion occurs)<\/li>\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated control or element type<\/li>\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type<\/li>\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted<\/li>\n<li>0..n associations are not supported yet<\/li>\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.<\/li>\n<\/ul>\n\nSpecial aggregation <code>dependents<\/code> is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls or elements.\nThis allows the definition of popup controls in declarative views and enables propagation of model\nand context information to them.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTooltip tooltip} : sap.ui.core.TooltipBase|string<\/li>\n<li>{@link #getCustomData customData} : sap.ui.core.CustomData[]<\/li>\n<li>{@link #getLayoutData layoutData} : sap.ui.core.LayoutData<\/li>\n<li>{@link #getDependents dependents} : sap.ui.core.Element[]<\/li>\n<li>{@link #getDragDropConfig dragDropConfig} : sap.ui.core.dnd.DragDropBase[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","helpDescription":"Base Class for Elements.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<HTML\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tcontent=\"\"\n\tpreferDOM=\"true\"\n\tsanitizeContent=\"false\"\n\tvisible=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/HTML>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"HTML","Experimental":false,"module":"sap/ui/core/HTML","name":"sap.ui.core.HTML","description":"sap.ui.core.HTML","constructorDescription":"Constructor for a new HTML.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<li>{@link #getPreferDOM preferDOM} : boolean (default: true)<\/li>\n<li>{@link #getSanitizeContent sanitizeContent} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"Embeds standard HTML in an SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore open to XSS attacks. Applications that want to show user defined input in an HTML control, should either sanitize the content on their own or activate automatic sanitizing through the {@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip<\/code> aggregation/property and the <code>hasStyleClass<\/code>, <code>addStyleClass<\/code>, <code>removeStyleClass<\/code> and <code>toggleStyleClass<\/code> methods from its base class, it doesn't support them. Instead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the <code>content<\/code> property.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<Icon\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tsrc=\"\"\n\tsize=\"\"\n\tcolor=\"\"\n\thoverColor=\"\"\n\tactiveColor=\"\"\n\twidth=\"\"\n\theight=\"\"\n\tbackgroundColor=\"\"\n\thoverBackgroundColor=\"\"\n\tactiveBackgroundColor=\"\"\n\tdecorative=\"true\"\n\tuseIconTooltip=\"true\"\n\talt=\"\"\n\tnoTabStop=\"false\"\n\tariaLabelledBy=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tpress=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<_invisibleText><\/_invisibleText><!-- sap.ui.core.InvisibleText -->\n<\/Icon>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"Icon","Experimental":false,"module":"sap/ui/core/Icon","name":"sap.ui.core.Icon","description":"sap.ui.core.Icon","constructorDescription":"Constructor for a new Icon.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColor color} : string<\/li>\n<li>{@link #getHoverColor hoverColor} : string<\/li>\n<li>{@link #getActiveColor activeColor} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getHoverBackgroundColor hoverBackgroundColor} : string<\/li>\n<li>{@link #getActiveBackgroundColor activeBackgroundColor} : string<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getUseIconTooltip useIconTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getNoTabStop noTabStop} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<InvisibleText\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\ttext=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/InvisibleText>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"InvisibleText","Experimental":false,"module":"sap/ui/core/InvisibleText","name":"sap.ui.core.InvisibleText","description":"sap.ui.core.InvisibleText","constructorDescription":"Constructor for a new InvisibleText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced in the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<Item\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ttext=\"\"\n\tenabled=\"true\"\n\ttextDirection=\"Inherit\"\n\tkey=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/Item>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"Item","Experimental":false,"module":"sap/ui/core/Item","name":"sap.ui.core.Item","description":"sap.ui.core.Item","constructorDescription":"Constructor for a new Item.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"A control base type.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<LayoutData\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/LayoutData>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"LayoutData","Experimental":false,"module":"sap/ui/core/LayoutData","name":"sap.ui.core.LayoutData","description":"sap.ui.core.LayoutData","constructorDescription":"Constructor for a new LayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","helpDescription":"A layout data base type.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<ListItem\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ttext=\"\"\n\tenabled=\"true\"\n\ttextDirection=\"Inherit\"\n\tkey=\"\"\n\ticon=\"\"\n\tadditionalText=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/ListItem>\n","extends":"sap.ui.core.Item","Deprecated":false,"prefix":"ListItem","Experimental":false,"module":"sap/ui/core/ListItem","name":"sap.ui.core.ListItem","description":"sap.ui.core.ListItem","constructorDescription":"Constructor for a new ListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","helpDescription":"An item that is used in list controls, such as <code>DropdownBox<\/code>.\n\nThe element foresees the usage of additional texts displayed in a second column.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<LocalBusyIndicator\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100px\"\n\theight=\"100px\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/LocalBusyIndicator>\n","extends":"sap.ui.core.Control","Deprecated":true,"prefix":"LocalBusyIndicator","Experimental":false,"module":"sap/ui/core/LocalBusyIndicator","name":"sap.ui.core.LocalBusyIndicator","description":"sap.ui.core.LocalBusyIndicator","constructorDescription":"Constructor for a new LocalBusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14.2 The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.<br>The LocalBusyIndicator is a special version of the BusyIndicator. This one doesn't block the whole screen - it just blocks the corresponding control and puts a local animation over the control. To use the functionality of this control the corresponding control needs to be enabled via the 'LocalBusyIndicatorSupport' accordingly to the ListBox control (see the init-function of the ListBox).","DeprecatedInfo":{"isDeprecated":true,"description":"The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.","since":"1.14.2"}},{"template":"<Message\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ttext=\"\"\n\ttimestamp=\"\"\n\ticon=\"\"\n\tlevel=\"None\"\n\treadOnly=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/Message>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"Message","Experimental":false,"module":"sap/ui/core/Message","name":"sap.ui.core.Message","description":"sap.ui.core.Message","constructorDescription":"Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.MessageType (default: None)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"This element is used to provide messages.\n\nRendering must be done within the control that uses this kind of element. Its default level is none.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<ScrollBar\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tvertical=\"true\"\n\tscrollPosition=\"\"\n\tsize=\"\"\n\tcontentSize=\"\"\n\tsteps=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tscroll=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/ScrollBar>\n","extends":"sap.ui.core.Control","Deprecated":true,"prefix":"ScrollBar","Experimental":false,"module":"sap/ui/core/ScrollBar","name":"sap.ui.core.ScrollBar","description":"sap.ui.core.ScrollBar","constructorDescription":"Constructor for a new ScrollBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVertical vertical} : boolean (default: true)<\/li>\n<li>{@link #getScrollPosition scrollPosition} : int<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentSize contentSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSteps steps} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scroll scroll} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 undefined<br>The ScrollBar control can be used for virtual scrolling of a certain area. This means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list.","DeprecatedInfo":{"isDeprecated":true,"since":"1.56"}},{"template":"<SeparatorItem\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ttext=\"\"\n\tenabled=\"true\"\n\ttextDirection=\"Inherit\"\n\tkey=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/SeparatorItem>\n","extends":"sap.ui.core.Item","Deprecated":false,"prefix":"SeparatorItem","Experimental":false,"module":"sap/ui/core/SeparatorItem","name":"sap.ui.core.SeparatorItem","description":"sap.ui.core.SeparatorItem","constructorDescription":"Constructor for a new SeparatorItem.","helpDescription":"An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element, sap.ui.base.EventProvider, and sap.ui.base.Object.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<Title\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ttext=\"\"\n\ticon=\"\"\n\tlevel=\"Auto\"\n\temphasized=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/Title>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"Title","Experimental":false,"module":"sap/ui/core/Title","name":"sap.ui.core.Title","description":"sap.ui.core.Title","constructorDescription":"Constructor for a new Title.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"Represents a title element that can be used for aggregation with other controls.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<TooltipBase\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\ttext=\"\"\n\topenDuration=\"200\"\n\tcloseDuration=\"200\"\n\tmyPosition=\"begin top\"\n\tatPosition=\"begin bottom\"\n\toffset=\"10 3\"\n\tcollision=\"flip\"\n\topenDelay=\"500\"\n\tcloseDelay=\"100\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tclosed=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/TooltipBase>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"TooltipBase","Experimental":false,"module":"sap/ui/core/TooltipBase","name":"sap.ui.core.TooltipBase","description":"sap.ui.core.TooltipBase","constructorDescription":"Constructor for a new TooltipBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getOpenDuration openDuration} : int (default: 200)<\/li>\n<li>{@link #getCloseDuration closeDuration} : int (default: 200)<\/li>\n<li>{@link #getMyPosition myPosition} : sap.ui.core.Dock (default: begin top)<\/li>\n<li>{@link #getAtPosition atPosition} : sap.ui.core.Dock (default: begin bottom)<\/li>\n<li>{@link #getOffset offset} : string (default: 10 3)<\/li>\n<li>{@link #getCollision collision} : sap.ui.core.Collision (default: flip)<\/li>\n<li>{@link #getOpenDelay openDelay} : int (default: 500)<\/li>\n<li>{@link #getCloseDelay closeDelay} : int (default: 100)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<VariantLayoutData\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<multipleLayoutData><\/multipleLayoutData><!-- sap.ui.core.LayoutData -->\n<\/VariantLayoutData>\n","extends":"sap.ui.core.LayoutData","Deprecated":false,"prefix":"VariantLayoutData","Experimental":false,"module":"sap/ui/core/VariantLayoutData","name":"sap.ui.core.VariantLayoutData","description":"sap.ui.core.VariantLayoutData","constructorDescription":"Constructor for a new VariantLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getMultipleLayoutData multipleLayoutData} : sap.ui.core.LayoutData[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","helpDescription":"Allows to add multiple LayoutData to one control in case that an easy switch of layouts (e.g. in a Form) is needed.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<XMLComposite\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tdisplayBlock=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<_content><\/_content><!-- sap.ui.core.Control -->\n<\/XMLComposite>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"XMLComposite","Experimental":false,"module":"sap/ui/core/XMLComposite","name":"sap.ui.core.XMLComposite","description":"sap.ui.core.XMLComposite","constructorDescription":"XMLComposite is the base class for composite controls that use a XML fragment representation\nfor their visual parts. From a user perspective such controls appear as any other control, but internally the\nrendering part is added as a fragment.\nThe fragment that is used should appear in the same folder as the control's JS implementation with the file extension\n<code>.control.xml<\/code>.\nThe fragment's content can access the interface data from the XMLComposite control via bindings. Currently only aggregations and properties\ncan be used with bindings inside a fragment.\nThe exposed model that is used for internal bindings in the fragment has the default name <code>$this<\/code>. The name will always start\nwith an <code>$<\/code>. The metadata of the derived control can define the alias with its metadata. A code example can be found below.\n\nAs XMLComposites compose other controls, they are only invalidated and re-rendered if explicitly defined. Additional metadata\nfor invalidation can be given for properties and aggregation. The default invalidation is <code>\"none\"<\/code>.\nSetting invalidate to <code>true<\/code> for properties and aggregations sets the complete XMLComposite\nto invalidate and rerender.<\/code>\n\nExample:\n<pre>\nXMLComposite.extend(\"sap.mylib.MyXMLComposite\", {\n  metadata : {\n    library: \"sap.mylib\",\n    properties : {\n      text: { //changing this property will not re-render the XMLComposite\n         type: \"string\",\n         defaultValue: \"\"\n      },\n      title: { //changing this property will re-render the XMLComposite as it defines invalidate: true\n         type: \"string\",\n         defaultValue: \"\",\n         invalidate: true\n      },\n      value: { //changing this property will re-render the XMLComposite as it defines invalidate: true\n         type: \"string\",\n         defaultValue: \"\",\n         invalidate: true\n      }\n    },\n    defaultProperty : \"text\",\n    aggregations : {\n      items : {\n         type: \"sap.ui.core.Control\",\n         invalidate: true\n      },\n      header : {\n         type: \"sap.mylib.FancyHeader\",\n         multiple : false\n      }\n    },\n    defaultAggregation : \"items\"\n    events: {\n      outerEvent : {\n        parameters : {\n          opener : \"sap.ui.core.Control\"\n        }\n      }\n    }\n  },\n  //alias defaults to \"this\"\n  alias: \"mycontrolroot\" //inner bindings will use model name $mycontrolroot\n  //fragment defaults to {control name}.control.xml in this case sap.mylib.MyXMLComposite.control.xml\n  fragment: \"sap.mylib.MyXMLCompositeOther.control.xml\" //the name of the fragment\n});\n<\/pre>\n\nInternally the XMLComposite instantiates and initializes the given fragment and stores the resulting control in a hidden\naggregation named <code>_content<\/code>. The fragment should only include one root element.\n\nBindings of inner controls to the interface of the XMLComposite can be done with normal binding syntax.\nHere properties are used as property bindings and aggregations are used as list bindings.\nCurrently it is not possible to bind associations in a fragment.\n\nExample:\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:Text text=\"{$this&gt;text}\" visible=\"{= ${$this&gt;text} !== \"\"}\" /&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:VBox items=\"{path:\"$this&gt;texts\", filters:{path:\"text\", operator:\"Contains\", value1:\"Text\"}, sorter:{path:\"text\", descending:true}}\"&gt;\n          &lt;m:Text text=\"{$this&gt;text}\" /&gt;\n      &lt;/m:VBox&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:Button text=\"Press Me\" press=\"handlePress\"/&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n\nAll events handled within the fragment will be dispatched to the XMLComposite control. It is recommended to follow this paradigm to allow\nreuse of a XMLComposite without any dependency to controller code of the current embedding view.\n\n<pre>\n   MyXMLComposite.prototype.handlePress = function() {\n       this.fireOuterEvent(); // passing on the event to the outer view\n   }\n<\/pre>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDisplayBlock displayBlock} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"Base Class for XMLComposite controls.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<DragDropBase\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tgroupName=\"\"\n\tenabled=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/DragDropBase>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"DragDropBase","Experimental":false,"module":"sap/ui/core/dnd/DragDropBase","name":"sap.ui.core.dnd.DragDropBase","description":"sap.ui.core.dnd.DragDropBase","constructorDescription":"Constructor for a new DragDropBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupName groupName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"Provides the base class for all drag-and-drop configurations. This feature enables a native HTML5 drag-and-drop API for the controls, therefore it is limited to browser support. <h3>Limitations<\/h3> <ul> <li>There is no mobile device that supports drag and drop.<\/li> <li>There is no accessible alternative for drag and drop. Applications which use the drag-and-drop functionality must provide an accessible alternative UI (for example, action buttons or menus) to perform the same operations.<\/li> <li>A custom dragging ghost element is not possible in Internet Explorer.<\/li> <li>Transparency of the drag ghost element and the cursor during drag-and-drop operations depends on the browser implementation.<\/li> <li>Internet Explorer does only support plain text MIME type for the DataTransfer Object.<\/li> <li>In Internet Explorer, default visual drop effect is <code>copy<\/code> and <code>dropEffect<\/code> property of the <code>DropInfo<\/code> has no effect. <li>Constraining a drag position is not possible, therefore there is no snap-to-grid or snap-to-element feature possible.<\/li> <li>Texts in draggable controls cannot be selected.<\/li> <li>The text of input fields in draggable controls can be selected, but not dragged.<\/li> <\/ul>","DeprecatedInfo":{"isDeprecated":false}},{"template":"<DragDropInfo\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tgroupName=\"\"\n\tenabled=\"true\"\n\ttargetAggregation=\"\"\n\tdropEffect=\"Move\"\n\tdropPosition=\"On\"\n\tdropLayout=\"Default\"\n\tsourceAggregation=\"\"\n\ttargetElement=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tdragEnter=\"\"\n\tdragOver=\"\"\n\tdrop=\"\"\n\tdragStart=\"\"\n\tdragEnd=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/DragDropInfo>\n","extends":"sap.ui.core.dnd.DropInfo","Deprecated":false,"prefix":"DragDropInfo","Experimental":false,"module":"sap/ui/core/dnd/DragDropInfo","name":"sap.ui.core.dnd.DragDropInfo","description":"sap.ui.core.dnd.DragDropInfo","constructorDescription":"Constructor for a new DragDropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSourceAggregation sourceAggregation} : string<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTargetElement targetElement} : (sap.ui.core.ID | sap.ui.core.Element)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnd dragEnd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DropInfo#constructor sap.ui.core.dnd.DropInfo}\ncan be used as well.","helpDescription":"Provides the configuration for drag-and-drop operations.\n\n<b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<DragInfo\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tgroupName=\"\"\n\tenabled=\"true\"\n\tsourceAggregation=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tdragStart=\"\"\n\tdragEnd=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/DragInfo>\n","extends":"sap.ui.core.dnd.DragDropBase","Deprecated":false,"prefix":"DragInfo","Experimental":false,"module":"sap/ui/core/dnd/DragInfo","name":"sap.ui.core.dnd.DragInfo","description":"sap.ui.core.dnd.DragInfo","constructorDescription":"Constructor for a new DragInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSourceAggregation sourceAggregation} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnd dragEnd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","helpDescription":"Provides the configuration for drag operations.\n\n<b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<DropInfo\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tgroupName=\"\"\n\tenabled=\"true\"\n\ttargetAggregation=\"\"\n\tdropEffect=\"Move\"\n\tdropPosition=\"On\"\n\tdropLayout=\"Default\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tdragEnter=\"\"\n\tdragOver=\"\"\n\tdrop=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/DropInfo>\n","extends":"sap.ui.core.dnd.DragDropBase","Deprecated":false,"prefix":"DropInfo","Experimental":false,"module":"sap/ui/core/dnd/DropInfo","name":"sap.ui.core.dnd.DropInfo","description":"sap.ui.core.dnd.DropInfo","constructorDescription":"Constructor for a new DropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTargetAggregation targetAggregation} : string<\/li>\n<li>{@link #getDropEffect dropEffect} : sap.ui.core.dnd.DropEffect (default: Move)<\/li>\n<li>{@link #getDropPosition dropPosition} : sap.ui.core.dnd.DropPosition (default: On)<\/li>\n<li>{@link #getDropLayout dropLayout} : sap.ui.core.dnd.DropLayout (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragEnter dragEnter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragOver dragOver} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drop drop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","helpDescription":"Provides the configuration for drop operations. <b>Note:<\/b> This configuration might be ignored due to control {@link sap.ui.core.Element.extend metadata} restrictions.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<HTMLView\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/HTMLView>\n","extends":"sap.ui.core.mvc.View","Deprecated":false,"prefix":"HTMLView","Experimental":false,"module":"sap/ui/core/mvc/HTMLView","name":"sap.ui.core.mvc.HTMLView","description":"sap.ui.core.mvc.HTMLView","constructorDescription":"Constructor for a new mvc/HTMLView.","helpDescription":"A view defined/constructed by declarative HTML.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<JSONView\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/JSONView>\n","extends":"sap.ui.core.mvc.View","Deprecated":false,"prefix":"JSONView","Experimental":false,"module":"sap/ui/core/mvc/JSONView","name":"sap.ui.core.mvc.JSONView","description":"sap.ui.core.mvc.JSONView","constructorDescription":"Constructor for a new mvc/JSONView.","helpDescription":"A View defined using JSON.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<JSView\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/JSView>\n","extends":"sap.ui.core.mvc.View","Deprecated":false,"prefix":"JSView","Experimental":false,"module":"sap/ui/core/mvc/JSView","name":"sap.ui.core.mvc.JSView","description":"sap.ui.core.mvc.JSView","constructorDescription":"Constructor for a new mvc/JSView.","helpDescription":"A View defined/constructed by JavaScript code.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<TemplateView\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/TemplateView>\n","extends":"sap.ui.core.mvc.View","Deprecated":true,"prefix":"TemplateView","Experimental":false,"module":"sap/ui/core/mvc/TemplateView","name":"sap.ui.core.mvc.TemplateView","description":"sap.ui.core.mvc.TemplateView","constructorDescription":"Constructor for a new mvc/TemplateView.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56.0 use {@link sap.ui.core.mvc.XMLView} in combination with {@link topic:5ee619fc1370463ea674ee04b65ed83b XML Templating} instead.<br>A view defined in a template.","DeprecatedInfo":{"isDeprecated":true,"description":"use {@link sap.ui.core.mvc.XMLView} in combination with {@link topic:5ee619fc1370463ea674ee04b65ed83b XML Templating} instead.","since":"1.56.0"}},{"template":"<View\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/View>\n","extends":"sap.ui.core.Control","Deprecated":false,"prefix":"View","Experimental":false,"module":"sap/ui/core/mvc/View","name":"sap.ui.core.mvc.View","description":"sap.ui.core.mvc.View","constructorDescription":"Constructor for a new View.\n\nApplications should not call the constructor directly, but use one of the view factories instead,\ne.g. {@link #.create View.create}.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getViewName viewName} : string<\/li>\n<li>{@link #getDisplayBlock displayBlock} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterInit afterInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExit beforeExit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height, and provides lifecycle events.\n\nViews form an ID scope for the elements and controls in their content. They can prefix the IDs of elements either automatically (e.g. XMLView) or programmatically (using {@link #createId}). With method {@link #byId}, elements or controls can be found with their view-local ID. Also see {@link topic:91f28be26f4d1014b6dd926db0e91070 \"Support for Unique IDs\"} in the documentation.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<XMLView\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontroller=\"\"\n\tcontrollerName=\"\"\n\tpreprocessors=\"\"\n\tresourceBundleName=\"\"\n\tresourceBundleUrl=\"\"\n\tresourceBundleLocale=\"\"\n\tresourceBundleAlias=\"\"\n\ttype=\"\"\n\tdefinition=\"\"\n\tviewContent=\"\"\n\tviewData=\"\"\n\tasync=\"\"\n\tcontainingView=\"\"\n\txmlNode=\"\"\n\tcache=\"\"\n\tprocessingMode=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"\"\n\tviewName=\"\"\n\tdisplayBlock=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterInit=\"\"\n\tbeforeExit=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/XMLView>\n","extends":"sap.ui.core.mvc.View","Deprecated":false,"prefix":"XMLView","Experimental":false,"module":"sap/ui/core/mvc/XMLView","name":"sap.ui.core.mvc.XMLView","description":"sap.ui.core.mvc.XMLView","constructorDescription":"Constructor for a new mvc/XMLView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","helpDescription":"A View defined using (P)XML and HTML markup.\n\n<strong>Note:<\/strong><br> Be aware that modifications of the content aggregation of this control are not supported due to technical reasons. This includes calls to all content modifying methods like <code>addContent><\/code> etc., but also the implicit removal of controls contained by the content aggregation. For example the destruction of a Control via the <code> destroy<\/code> method. All functions can be called but may not work properly or lead to unexpected side effects.\n\n<strong>Note:<\/strong><br> On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's dependents aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<OpenSearchProvider\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ticon=\"\"\n\tsuggestUrl=\"\"\n\tsuggestType=\"json\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/OpenSearchProvider>\n","extends":"sap.ui.core.search.SearchProvider","Deprecated":false,"prefix":"OpenSearchProvider","Experimental":false,"module":"sap/ui/core/search/OpenSearchProvider","name":"sap.ui.core.search.OpenSearchProvider","description":"sap.ui.core.search.OpenSearchProvider","constructorDescription":"Constructor for a new search/OpenSearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSuggestUrl suggestUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getSuggestType suggestType} : string (default: json)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.search.SearchProvider#constructor sap.ui.core.search.SearchProvider}\ncan be used as well.","helpDescription":"A SearchProvider which uses the OpenSearch protocol (either JSON or XML).","DeprecatedInfo":{"isDeprecated":false}},{"template":"<SearchProvider\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\ticon=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/SearchProvider>\n","extends":"sap.ui.core.Element","Deprecated":false,"prefix":"SearchProvider","Experimental":false,"module":"sap/ui/core/search/SearchProvider","name":"sap.ui.core.search.SearchProvider","description":"sap.ui.core.search.SearchProvider","constructorDescription":"Constructor for a new search/SearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"Abstract base class for all SearchProviders which can be e.g. attached to a SearchField.\n\nDo not create instances of this class, but use a concrete subclass instead.","DeprecatedInfo":{"isDeprecated":false}},{"template":"<DOMAttribute\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tname=\"\"\n\tvalue=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/DOMAttribute>\n","extends":"sap.ui.core.Element","Deprecated":true,"prefix":"DOMAttribute","Experimental":false,"module":"sap/ui/core/tmpl/DOMAttribute","name":"sap.ui.core.tmpl.DOMAttribute","description":"sap.ui.core.tmpl.DOMAttribute","constructorDescription":"Constructor for a new tmpl/DOMAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 undefined<br>Represents a DOM attribute of a DOM element.","DeprecatedInfo":{"isDeprecated":true,"since":"1.56"}},{"template":"<DOMElement\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\ttext=\"\"\n\ttag=\"span\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<attributes><\/attributes><!-- sap.ui.core.tmpl.DOMAttribute -->\n\t<elements><\/elements><!-- sap.ui.core.tmpl.DOMElement -->\n<\/DOMElement>\n","extends":"sap.ui.core.Control","Deprecated":true,"prefix":"DOMElement","Experimental":false,"module":"sap/ui/core/tmpl/DOMElement","name":"sap.ui.core.tmpl.DOMElement","description":"sap.ui.core.tmpl.DOMElement","constructorDescription":"Constructor for a new tmpl/DOMElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTag tag} : string (default: span)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.ui.core.tmpl.DOMAttribute[] (default)<\/li>\n<li>{@link #getElements elements} : sap.ui.core.tmpl.DOMElement[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 undefined<br>Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes.","DeprecatedInfo":{"isDeprecated":true,"since":"1.56"}},{"template":"<TemplateControl\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tcontext=\"\"\n\ttemplate=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tafterRendering=\"\"\n\tbeforeRendering=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<controls><\/controls><!-- sap.ui.core.Control -->\n<\/TemplateControl>\n","extends":"sap.ui.core.Control","Deprecated":true,"prefix":"TemplateControl","Experimental":false,"module":"sap/ui/core/tmpl/TemplateControl","name":"sap.ui.core.tmpl.TemplateControl","description":"sap.ui.core.tmpl.TemplateControl","constructorDescription":"Constructor for a new tmpl/TemplateControl.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContext context} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTemplate template} : (sap.ui.core.ID | sap.ui.core.tmpl.Template)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.56 undefined<br>This is the base class for all template controls. Template controls are declared based on templates.","DeprecatedInfo":{"isDeprecated":true,"since":"1.56"}},{"template":"<Export\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tblocked=\"false\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tbusyIndicatorSize=\"Medium\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n\t<exportType><\/exportType><!-- sap.ui.core.util.ExportType -->\n\t<columns><\/columns><!-- sap.ui.core.util.ExportColumn -->\n\t<rows><\/rows><!-- sap.ui.core.util.ExportRow -->\n\t<_template><\/_template><!-- sap.ui.core.util.ExportRow -->\n<\/Export>\n","extends":"sap.ui.core.Control","Deprecated":true,"prefix":"Export","Experimental":false,"module":"sap/ui/core/util/Export","name":"sap.ui.core.util.Export","description":"sap.ui.core.util.Export","constructorDescription":"Constructor for a new Export.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getExportType exportType} : sap.ui.core.util.ExportType<\/li>\n<li>{@link #getColumns columns} : sap.ui.core.util.ExportColumn[]<\/li>\n<li>{@link #getRows rows} : sap.ui.core.util.ExportRow[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 undefined<br>Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.","DeprecatedInfo":{"isDeprecated":true,"since":"1.73"}},{"template":"<ExportCell\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tmetadataContexts=\"\"\n\tType=\"\"\n\tcontent=\"\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Element -->\n\t<dragDropConfig><\/dragDropConfig><!-- sap.ui.core.dnd.DragDropBase -->\n<\/ExportCell>\n","extends":"sap.ui.core.Element","Deprecated":true,"prefix":"ExportCell","Experimental":false,"module":"sap/ui/core/util/ExportCell","name":"sap.ui.core.util.ExportCell","description":"sap.ui.core.util.ExportCell","constructorDescription":"Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.73 undefined<br>Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}.","DeprecatedInfo":{"isDeprecated":true,"since":"1.73"}}],"!version":"1.20.0"}