{"Templates":[{"template":"new sap.tnt.InfoLabel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\trenderMode: ${sap.tnt.RenderMode.Loose}, // sap.tnt.RenderMode\n\t\tcolorScheme: ${7}, // int\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tdisplayOnly: ${bDisplayOnly}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ticon: ${\"\"} // sap.ui.core.URI\n\t}\n)\n","static":"true","prefix":"InfoLabel","Experimental":false,"module":"sap/tnt/InfoLabel","description":"InfoLabel(sId?, mSettings?) : sap.tnt.InfoLabel","constructorDescription":"Constructor for a new <code>InfoLabel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getRenderMode renderMode} : sap.tnt.RenderMode (default: Loose)<\/li>\n<li>{@link #getColorScheme colorScheme} : int (default: 7)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDisplayOnly displayOnly} : boolean (default: false)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.tnt.InfoLabel","helpDescription":"The <code>InfoLabel<\/code> is a small non-interactive control which contains text information and non-semantic color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.).\n\n<h3>Overview<\/h3>\n\nThe control visualizes text information without user interaction. The text inside the control is always in upper case. It can have smaller or larger side paddings which can be specified by the <code>renderMode<\/code> property. The text-background color pair can be changed by setting a number between 1 and 10 that corresponds to the 10 predefined color combinations of the <code>colorScheme<\/code> property. The control is designed to be vertically aligned with UI5 Input and Button control families. When using <code>InfoLabel<\/code> in non-editable <code>Forms<\/code>, <code>Tables<\/code>, etc., set <code>displayOnly=true<\/code> for best visual results.\n\n<h3>Usage Guidelines<\/h3> <ul> <li>If the text is longer than the width of the control, it doesn\u2019t wrap. Instead, it\u2019s represented as ellipsis. <\/li> <li>When truncated, the full text in the control is not visible. Therefore, it\u2019s recommended to make more space for longer items to be fully displayed.<\/li> <li>Colors are not semantic and have no visual representation in sap_belize_hcb and sap_belize_hcw themes.<\/li> <li>The control shows plain text only, formatting is not visualized.<\/li> <\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.NavigationList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\texpanded: ${bExpanded}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\titems: [${items}], // sap.tnt.NavigationListItem[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectedItem: ${selectedItem}, // (sap.tnt.NavigationListItem|string)\n\t\titemSelect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NavigationList","Experimental":false,"module":"sap/tnt/NavigationList","description":"NavigationList(sId?, mSettings?) : sap.tnt.NavigationList","constructorDescription":"Constructor for a new NavigationList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.tnt.NavigationList","helpDescription":"The NavigationList control is an interactive control, which provides a choice of different items, ordered as a list.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.tnt.NavigationList.fireItemSelect","description":"fireItemSelect(mParameters?) : sap.tnt.NavigationList","helpDescription":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.NavigationListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\texpanded: ${bExpanded}, // boolean\n\t\thasExpander: ${bHasExpander}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\titems: [${items}], // sap.tnt.NavigationListItem[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NavigationListItem","Experimental":false,"module":"sap/tnt/NavigationListItem","description":"NavigationListItem(sId?, mSettings?) : sap.tnt.NavigationListItem","constructorDescription":"Constructor for a new NavigationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getHasExpander hasExpander} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.tnt.NavigationListItem","helpDescription":"The NavigationListItem control represents an action, which can be selected by the user. It can provide sub items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\titem: ${item} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.tnt.NavigationListItem.fireSelect","description":"fireSelect(mParameters?) : sap.tnt.NavigationListItem","helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.SideNavigation(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\texpanded: ${bExpanded}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\titem: ${item}, // sap.tnt.NavigationList\n\t\tfixedItem: ${fixedItem}, // sap.tnt.NavigationList\n\t\tfooter: ${footer}, // sap.tnt.NavigationList\n\t\tselectedItem: ${selectedItem}, // (sap.tnt.NavigationListItem|string)\n\t\titemSelect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SideNavigation","Experimental":false,"module":"sap/tnt/SideNavigation","description":"SideNavigation(sId?, mSettings?) : sap.tnt.SideNavigation","constructorDescription":"Constructor for a new SideNavigation.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItem item} : sap.tnt.NavigationList (default)<\/li>\n<li>{@link #getFixedItem fixedItem} : sap.tnt.NavigationList<\/li>\n<li>{@link #getFooter footer} : sap.tnt.NavigationList<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.tnt.SideNavigation","helpDescription":"The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other. <h4>Responsive Behavior<\/h4> <ul> <li>The flexible part adapts its size to the fixed one.<\/li> <li>The flexible part has a scrollbar when the content is larger than the available space.<\/li> <\/ul> <b>Note:<\/b> In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.tnt.SideNavigation.fireItemSelect","description":"fireItemSelect(mParameters?) : sap.tnt.SideNavigation","helpDescription":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.ToolHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tactive: ${bActive}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${sap.m.ToolbarDesign.Auto}, // sap.m.ToolbarDesign\n\t\tstyle: ${sap.m.ToolbarStyle.Standard}, // sap.m.ToolbarStyle\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tasyncMode: ${bAsyncMode} // boolean\n\t}\n)\n","static":"true","prefix":"ToolHeader","Experimental":false,"module":"sap/tnt/ToolHeader","description":"ToolHeader(sId?, mSettings?) : sap.tnt.ToolHeader","constructorDescription":"Constructor for a new ToolHeader.","extends":"sap.m.OverflowToolbar","Deprecated":false,"name":"sap.tnt.ToolHeader","helpDescription":"The ToolHeader control is a horizontal container that is most commonly used to display buttons, labels, and other various input controls. <h3>Overview<\/h3> The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout. <h3>Usage<\/h3> <ul> <li>If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.<\/li> <li>The app menu and the side navigation must not have any dependencies and must work independently.<\/li> <\/ul> <h4>Fiori 3 theme specifics<\/h4> In Fiori 3 Default theme the ToolHeader is with dark design unlike most of the other controls. This defines the usage of limited controls inside it, which will result in good design combination.<br/> The ToolHeader stylizes the contained controls with the Shell color parameters, to match the dark design requirement. However, that's not a dark theme.<br/><br/> Only the following controls are supported: <div> <table>\n\n<tr> <th style=\"text-align: left;\">Control name<\/th> <th style=\"text-align: left;\">Supported<\/th> <th style=\"text-align: left;\">Not supported<\/th> <\/tr> <tr> <td>sap.m.Text<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Title<\/td> <td>Single line text, text truncation. Consider using title headings of H4, H5, H6.<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Label<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.ObjectStatus<\/td> <td>Labels, semantic colors<\/td> <td>Indication colors<\/td> <\/tr> <tr> <td>sap.ui.core.Icon<\/td> <td>sap.ui.core.IconColor enumeration for both icons and backgrounds.<\/td> <td>Interaction state colors<\/td> <\/tr> <tr> <td>sap.m.Button<\/td> <td>Buttons in their Back, Default, Transparent and Up types. All four types are over-styled to look as transparent buttons.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.MenuButton<\/td> <td>Emphasized button type. Should be used for triggering Mega menu. If there is no Mega menu, use Title (H6) instead. <\/br> Default (over-styled as Transparent) and Transparent types are used for standard menu representation.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Select<\/td> <td>Default and IconOnly types. IconOnly looks like a button while Default looks is like an input.<\/td> <td>Semantic states<\/td> <\/tr> <tr> <td>sap.m.SearchField<\/td> <td>Support for the regular state of the control.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.IconTabHeader<\/td> <td>All background design variations (all are transparent). Text tab filters or text and count tab filters in Inline mode only.<\/td> <td>Semantic colors, icons and separators.<\/td> <\/tr> <tr> <td>sap.f.Avatar/sap.m.Avatar<\/td> <td>Support for default (Accent 6) color. Image avatar.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Image<\/td> <td>Primarily used for displaying the company logo.<\/td> <td>Interaction states<\/td> <\/tr> <\/table> <\/div>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.ToolHeaderUtilitySeparator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ToolHeaderUtilitySeparator","Experimental":false,"module":"sap/tnt/ToolHeaderUtilitySeparator","description":"ToolHeaderUtilitySeparator(sId?, mSettings?) : sap.tnt.ToolHeaderUtilitySeparator","constructorDescription":"Constructor for a new ToolHeaderUtilitySeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.tnt.ToolHeaderUtilitySeparator","helpDescription":"The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control to specify where the overflow button is placed.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.tnt.ToolPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tdragDropConfig: [${dragDropConfig}], // sap.ui.core.dnd.DragDropBase[]\n\t\tblocked: ${bBlocked}, // boolean\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tbusyIndicatorSize: ${sap.ui.core.BusyIndicatorSize.Medium}, // sap.ui.core.BusyIndicatorSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsideExpanded: ${bSideExpanded}, // boolean\n\t\theader: ${header}, // sap.tnt.IToolHeader\n\t\tsideContent: ${sideContent}, // sap.tnt.SideNavigation\n\t\tmainContents: [${mainContents}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"ToolPage","Experimental":false,"module":"sap/tnt/ToolPage","description":"ToolPage(sId?, mSettings?) : sap.tnt.ToolPage","constructorDescription":"Constructor for a new ToolPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSideExpanded sideExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.tnt.IToolHeader<\/li>\n<li>{@link #getSideContent sideContent} : sap.tnt.SideNavigation<\/li>\n<li>{@link #getMainContents mainContents} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.tnt.ToolPage","helpDescription":"The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area. <h4>Overview<\/h4> The control has three main areas - a header on top, navigation to the side and a content area that can hold any control. The header and side navigation use custom controls - {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}. <h4>Usage<\/h4> The main usage of the sap.tnt controls is for scenarios in the tooling or administration space.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}}],"!version":"1.20.0"}