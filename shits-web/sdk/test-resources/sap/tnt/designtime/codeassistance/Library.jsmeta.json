{"!name":"sap.tnt","!version":"1.20.0","!define":{"sap.tnt.InfoLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.InfoLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.InfoLabel"},"sap.tnt.ToolHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolHeader"},"sap":{"sap":"sap","!category":"namespace","tnt":"sap.tnt"},"sap.tnt.NavigationListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.NavigationListItem"},"sap.tnt.SideNavigation":{"setExpanded":{"!description":"Sets if the control is in expanded or collapsed mode.","!static":false,"!category":"function","!type":"fn(isExpanded: Boolean) -> sap.tnt.SideNavigation","parameters":{"isExpanded":"type: boolean, description: Indication if the SideNavigation is expanded."}},"getFixedItem":{"!description":"Gets content of aggregation {@link #getFixedItem fixedItem}.\n\nDefines the content inside the fixed part.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationList"},"!proto":"sap.ui.core.Control","getItem":{"!description":"Gets content of aggregation {@link #getItem item}.\n\nDefines the content inside the flexible part.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationList"},"!category":"class","bindItem":{"!description":"Binds aggregation {@link #getItem item} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.tnt.SideNavigation","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"destroyFooter":{"!description":"Destroys the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.SideNavigation"},"destroyFixedItem":{"!description":"Destroys the fixedItem in the aggregation {@link #getFixedItem fixedItem}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.SideNavigation"},"!constructorDescription":"Constructor for a new SideNavigation.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItem item} : sap.tnt.NavigationList (default)<\/li>\n<li>{@link #getFixedItem fixedItem} : sap.tnt.NavigationList<\/li>\n<li>{@link #getFooter footer} : sap.tnt.NavigationList<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSelectedItem":{"!description":"ID of the element which is the current target of the association {@link #getSelectedItem selectedItem}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"setItem":{"!description":"Sets the aggregated {@link #getItem item}.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","parameters":{"oItem":"type: sap.tnt.NavigationList, description: The item to set"}},"!description":"The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other. <h4>Responsive Behavior<\/h4> <ul> <li>The flexible part adapts its size to the fixed one.<\/li> <li>The flexible part has a scrollbar when the content is larger than the available space.<\/li> <\/ul> <b>Note:<\/b> In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.","fireItemSelect":{"!description":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.tnt.SideNavigation","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.SideNavigation.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets the selected item based on a key.","!static":false,"!category":"function","!type":"fn(selectedKey: String) -> sap.tnt.SideNavigation","parameters":{"selectedKey":"type: string, description: The key of the item to be selected"}},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.SideNavigation<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.tnt.SideNavigation","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nDefines the content inside the footer.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationList"},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the control is expanded.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFixedItem":{"!description":"Sets the aggregated {@link #getFixedItem fixedItem}.","!static":false,"!category":"function","!type":"fn(oFixedItem: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","parameters":{"oFixedItem":"type: sap.tnt.NavigationList, description: The fixedItem to set"}},"extend":{"!description":"Creates a new subclass of class sap.tnt.SideNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.SideNavigation<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.SideNavigation<\/code> itself.\n\nFired when an item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.SideNavigation","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.SideNavigation<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectedItem":{"!description":"Sets the association for selectedItem","!static":false,"!category":"function","!type":"fn(selectedItem: String | sap.tnt.NavigationListItem) -> sap.tnt.SideNavigation | null","parameters":{"selectedItem":"type: string|sap.tnt.NavigationListItem, description: The control to be set as selected"}},"!module":"sap/tnt/SideNavigation","getSelectedKey":{"!description":"Gets current value of property {@link #getSelectedKey selectedKey}.\n\nSpecifies the currently selected key.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other. <h4>Responsive Behavior<\/h4> <ul> <li>The flexible part adapts its size to the fixed one.<\/li> <li>The flexible part has a scrollbar when the content is larger than the available space.<\/li> <\/ul> <b>Note:<\/b> In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.","setFooter":{"!description":"Sets the aggregated {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","parameters":{"oFooter":"type: sap.tnt.NavigationList, description: The footer to set"}},"unbindItem":{"!description":"Unbinds aggregation {@link #getItem item} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.SideNavigation"},"destroyItem":{"!description":"Destroys the item in the aggregation {@link #getItem item}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.SideNavigation"}},"sap.tnt.ToolHeaderUtilitySeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeaderUtilitySeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolHeaderUtilitySeparator"},"sap.tnt.ToolHeaderUtilitySeparator":{"!description":"The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control to specify where the overflow button is placed.","extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeaderUtilitySeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolHeaderUtilitySeparator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToolHeaderUtilitySeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/tnt/ToolHeaderUtilitySeparator","!helpDescription":"The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control to specify where the overflow button is placed.","!proto":"sap.ui.core.Control","!category":"class"},"sap.tnt.NavigationListItem":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","parameters":{"vItem":"type: int|string|sap.tnt.NavigationListItem, description: The item to remove or its index or id"}},"setHasExpander":{"!description":"Sets a new value for property {@link #getHasExpander hasExpander}.\n\nSpecifies if the item has an expander.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHasExpander: Boolean) -> sap.tnt.NavigationListItem","parameters":{"bHasExpander":"type: boolean, description: New value for property <code>hasExpander<\/code>"}},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nSpecifies if the item is expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.tnt.NavigationListItem","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.tnt.NavigationListItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.tnt.NavigationListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.NavigationListItem<\/code> itself.\n\nFired when this item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationListItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.NavigationListItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Item","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationListItem"},"!category":"class","addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe sub items.","!static":false,"!category":"function","!type":"fn() -> [sap.tnt.NavigationListItem]"},"!constructorDescription":"Constructor for a new NavigationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getHasExpander hasExpander} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.tnt.NavigationListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem) -> Number","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item whose index is looked for"}},"getHasExpander":{"!description":"Gets current value of property {@link #getHasExpander hasExpander}.\n\nSpecifies if the item has an expander.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The NavigationListItem control represents an action, which can be selected by the user. It can provide sub items.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nSpecifies if the item should be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.tnt.NavigationListItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.NavigationListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nSpecifies if the item should be shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the item is expanded.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.tnt.NavigationListItem]"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nSpecifies the icon for the item.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nSpecifies the icon for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.tnt.NavigationListItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/tnt/NavigationListItem","!helpDescription":"The NavigationListItem control represents an action, which can be selected by the user. It can provide sub items.","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.tnt.NavigationListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationListItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem, iIndex: Number) -> sap.tnt.NavigationListItem","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.tnt.NavigationListItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.tnt.ToolPage":{"!description":"The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area. <h4>Overview<\/h4> The control has three main areas - a header on top, navigation to the side and a content area that can hold any control. The header and side navigation use custom controls - {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}. <h4>Usage<\/h4> The main usage of the sap.tnt controls is for scenarios in the tooling or administration space.","removeAllMainContents":{"!description":"Removes all the controls from the aggregation {@link #getMainContents mainContents}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addMainContent":{"!description":"Adds some mainContent to the aggregation {@link #getMainContents mainContents}.","!static":false,"!category":"function","!type":"fn(oMainContent: sap.ui.core.Control) -> sap.tnt.ToolPage","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent to add; if empty, nothing is inserted"}},"getSideExpanded":{"!description":"Gets current value of property {@link #getSideExpanded sideExpanded}.\n\nIndicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertMainContent":{"!description":"Inserts a mainContent into the aggregation {@link #getMainContents mainContents}.","!static":false,"!category":"function","!type":"fn(oMainContent: sap.ui.core.Control, iIndex: Number) -> sap.tnt.ToolPage","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the mainContent should be inserted at; for a negative value of <code>iIndex<\/code>, the mainContent is inserted at position 0; for a value greater than the current size of the aggregation, the mainContent is inserted at the last position"}},"getMainContents":{"!description":"Gets content of aggregation {@link #getMainContents mainContents}.\n\nThe content section.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","destroySideContent":{"!description":"Destroys the sideContent in the aggregation {@link #getSideContent sideContent}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.ToolPage"},"setHeader":{"!description":"Sets the aggregated {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.tnt.IToolHeader) -> sap.tnt.ToolPage","parameters":{"oHeader":"type: sap.tnt.IToolHeader, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nThe control to appear in the header area.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.IToolHeader"},"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ToolPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSideExpanded sideExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.tnt.IToolHeader<\/li>\n<li>{@link #getSideContent sideContent} : sap.tnt.SideNavigation<\/li>\n<li>{@link #getMainContents mainContents} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/tnt/ToolPage","toggleSideContentMode":{"!description":"Toggles the expand/collapse state of the SideContent.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.ToolPage"},"!helpDescription":"The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area. <h4>Overview<\/h4> The control has three main areas - a header on top, navigation to the side and a content area that can hold any control. The header and side navigation use custom controls - {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}. <h4>Usage<\/h4> The main usage of the sap.tnt controls is for scenarios in the tooling or administration space.","destroyMainContents":{"!description":"Destroys all the mainContents in the aggregation {@link #getMainContents mainContents}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.ToolPage"},"destroyHeader":{"!description":"Destroys the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.ToolPage"},"setSideContent":{"!description":"Sets the aggregated {@link #getSideContent sideContent}.","!static":false,"!category":"function","!type":"fn(oSideContent: sap.tnt.SideNavigation) -> sap.tnt.ToolPage","parameters":{"oSideContent":"type: sap.tnt.SideNavigation, description: The sideContent to set"}},"indexOfMainContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getMainContents mainContents}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMainContent: sap.ui.core.Control) -> Number","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent whose index is looked for"}},"setSideExpanded":{"!description":"Sets the expand/collapse state of the SideContent.","!static":false,"!category":"function","!type":"fn(isSideExpanded: Boolean) -> sap.tnt.ToolPage","parameters":{"isSideExpanded":"type: boolean, description: defines whether the SideNavigation is expanded."}},"getSideContent":{"!description":"Gets content of aggregation {@link #getSideContent sideContent}.\n\nThe side menu of the layout.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.SideNavigation"},"removeMainContent":{"!description":"Removes a mainContent from the aggregation {@link #getMainContents mainContents}.","!static":false,"!category":"function","!type":"fn(vMainContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMainContent":"type: int|string|sap.ui.core.Control, description: The mainContent to remove or its index or id"}}},"sap.tnt.ToolHeader":{"!description":"The ToolHeader control is a horizontal container that is most commonly used to display buttons, labels, and other various input controls. <h3>Overview<\/h3> The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout. <h3>Usage<\/h3> <ul> <li>If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.<\/li> <li>The app menu and the side navigation must not have any dependencies and must work independently.<\/li> <\/ul> <h4>Fiori 3 theme specifics<\/h4> In Fiori 3 Default theme the ToolHeader is with dark design unlike most of the other controls. This defines the usage of limited controls inside it, which will result in good design combination.<br/> The ToolHeader stylizes the contained controls with the Shell color parameters, to match the dark design requirement. However, that's not a dark theme.<br/><br/> Only the following controls are supported: <div> <table>\n\n<tr> <th style=\"text-align: left;\">Control name<\/th> <th style=\"text-align: left;\">Supported<\/th> <th style=\"text-align: left;\">Not supported<\/th> <\/tr> <tr> <td>sap.m.Text<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Title<\/td> <td>Single line text, text truncation. Consider using title headings of H4, H5, H6.<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Label<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.ObjectStatus<\/td> <td>Labels, semantic colors<\/td> <td>Indication colors<\/td> <\/tr> <tr> <td>sap.ui.core.Icon<\/td> <td>sap.ui.core.IconColor enumeration for both icons and backgrounds.<\/td> <td>Interaction state colors<\/td> <\/tr> <tr> <td>sap.m.Button<\/td> <td>Buttons in their Back, Default, Transparent and Up types. All four types are over-styled to look as transparent buttons.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.MenuButton<\/td> <td>Emphasized button type. Should be used for triggering Mega menu. If there is no Mega menu, use Title (H6) instead. <\/br> Default (over-styled as Transparent) and Transparent types are used for standard menu representation.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Select<\/td> <td>Default and IconOnly types. IconOnly looks like a button while Default looks is like an input.<\/td> <td>Semantic states<\/td> <\/tr> <tr> <td>sap.m.SearchField<\/td> <td>Support for the regular state of the control.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.IconTabHeader<\/td> <td>All background design variations (all are transparent). Text tab filters or text and count tab filters in Inline mode only.<\/td> <td>Semantic colors, icons and separators.<\/td> <\/tr> <tr> <td>sap.f.Avatar/sap.m.Avatar<\/td> <td>Support for default (Accent 6) color. Image avatar.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Image<\/td> <td>Primarily used for displaying the company logo.<\/td> <td>Interaction states<\/td> <\/tr> <\/table> <\/div>","extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToolHeader.","!module":"sap/tnt/ToolHeader","!helpDescription":"The ToolHeader control is a horizontal container that is most commonly used to display buttons, labels, and other various input controls. <h3>Overview<\/h3> The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout. <h3>Usage<\/h3> <ul> <li>If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.<\/li> <li>The app menu and the side navigation must not have any dependencies and must work independently.<\/li> <\/ul> <h4>Fiori 3 theme specifics<\/h4> In Fiori 3 Default theme the ToolHeader is with dark design unlike most of the other controls. This defines the usage of limited controls inside it, which will result in good design combination.<br/> The ToolHeader stylizes the contained controls with the Shell color parameters, to match the dark design requirement. However, that's not a dark theme.<br/><br/> Only the following controls are supported: <div> <table>\n\n<tr> <th style=\"text-align: left;\">Control name<\/th> <th style=\"text-align: left;\">Supported<\/th> <th style=\"text-align: left;\">Not supported<\/th> <\/tr> <tr> <td>sap.m.Text<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Title<\/td> <td>Single line text, text truncation. Consider using title headings of H4, H5, H6.<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.Label<\/td> <td>Single line text, text truncation<\/td> <td>Wrapping<\/td> <\/tr> <tr> <td>sap.m.ObjectStatus<\/td> <td>Labels, semantic colors<\/td> <td>Indication colors<\/td> <\/tr> <tr> <td>sap.ui.core.Icon<\/td> <td>sap.ui.core.IconColor enumeration for both icons and backgrounds.<\/td> <td>Interaction state colors<\/td> <\/tr> <tr> <td>sap.m.Button<\/td> <td>Buttons in their Back, Default, Transparent and Up types. All four types are over-styled to look as transparent buttons.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.MenuButton<\/td> <td>Emphasized button type. Should be used for triggering Mega menu. If there is no Mega menu, use Title (H6) instead. <\/br> Default (over-styled as Transparent) and Transparent types are used for standard menu representation.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Select<\/td> <td>Default and IconOnly types. IconOnly looks like a button while Default looks is like an input.<\/td> <td>Semantic states<\/td> <\/tr> <tr> <td>sap.m.SearchField<\/td> <td>Support for the regular state of the control.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.IconTabHeader<\/td> <td>All background design variations (all are transparent). Text tab filters or text and count tab filters in Inline mode only.<\/td> <td>Semantic colors, icons and separators.<\/td> <\/tr> <tr> <td>sap.f.Avatar/sap.m.Avatar<\/td> <td>Support for default (Accent 6) color. Image avatar.<\/td> <td>-<\/td> <\/tr> <tr> <td>sap.m.Image<\/td> <td>Primarily used for displaying the company logo.<\/td> <td>Interaction states<\/td> <\/tr> <\/table> <\/div>","!proto":"sap.m.OverflowToolbar","!category":"class"},"sap.tnt.SideNavigation_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.SideNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.SideNavigation"},"sap.tnt.NavigationList":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","parameters":{"vItem":"type: int|string|sap.tnt.NavigationListItem, description: The item to remove or its index or id"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nSpecifies if the control is in expanded or collapsed mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.tnt.NavigationList","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationList"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nSpecifies the width of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem) -> sap.tnt.NavigationList","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe items displayed in the list.","!static":false,"!category":"function","!type":"fn() -> [sap.tnt.NavigationListItem]"},"!constructorDescription":"Constructor for a new NavigationList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.tnt.NavigationList","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.tnt.NavigationListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem) -> Number","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item whose index is looked for"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSelectedItem":{"!description":"Gets the currently selected <code>NavigationListItem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.NavigationListItem | null"},"!description":"The NavigationList control is an interactive control, which provides a choice of different items, ordered as a list.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"fireItemSelect":{"!description":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.tnt.NavigationList","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.NavigationList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets the selected item based on a key.","!static":false,"!category":"function","!type":"fn(selectedKey: String) -> sap.tnt.NavigationList","parameters":{"selectedKey":"type: string, description: The key of the item to be selected"}},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.NavigationList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the control is in expanded or collapsed mode.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.tnt.NavigationListItem]"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nSpecifies the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.tnt.NavigationList","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.tnt.NavigationList","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.NavigationList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.NavigationList<\/code> itself.\n\nFired when an item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.NavigationList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectedItem":{"!description":"Sets the association for selectedItem. Set <code>null<\/code> to deselect.","!static":false,"!category":"function","!type":"fn(selectedItem: String | sap.tnt.NavigationListItem) -> sap.tnt.NavigationList | null","parameters":{"selectedItem":"type: string|sap.tnt.NavigationListItem, description: The control to be set as selected"}},"!module":"sap/tnt/NavigationList","getSelectedKey":{"!description":"Gets current value of property {@link #getSelectedKey selectedKey}.\n\nSpecifies the currently selected key.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The NavigationList control is an interactive control, which provides a choice of different items, ordered as a list.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.tnt.NavigationListItem, iIndex: Number) -> sap.tnt.NavigationList","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.tnt.NavigationListItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.tnt.ToolPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolPage"},"sap.tnt.IToolHeader":{"!description":"Interface for controls suitable for the <code>header<\/code> aggregation of {@link sap.tnt.ToolPage}.","!module":"sap/tnt/library","!category":"static class"},"sap.tnt.RenderMode":{"!description":"Predefined types of <code>InfoLabel<\/code>","!module":"sap/tnt/library","!category":"static class","Loose":{"!description":"When type of the content of <code>InfoLabel<\/code> is text padding are loose","!category":"enum","!type":"String"},"Narrow":{"!description":"When type of the content of <code>InfoLabel<\/code> is numeric paddings are narrow","!category":"enum","!type":"String"}},"sap.tnt.InfoLabel":{"!description":"The <code>InfoLabel<\/code> is a small non-interactive control which contains text information and non-semantic color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.).\n\n<h3>Overview<\/h3>\n\nThe control visualizes text information without user interaction. The text inside the control is always in upper case. It can have smaller or larger side paddings which can be specified by the <code>renderMode<\/code> property. The text-background color pair can be changed by setting a number between 1 and 10 that corresponds to the 10 predefined color combinations of the <code>colorScheme<\/code> property. The control is designed to be vertically aligned with UI5 Input and Button control families. When using <code>InfoLabel<\/code> in non-editable <code>Forms<\/code>, <code>Tables<\/code>, etc., set <code>displayOnly=true<\/code> for best visual results.\n\n<h3>Usage Guidelines<\/h3> <ul> <li>If the text is longer than the width of the control, it doesn\u2019t wrap. Instead, it\u2019s represented as ellipsis. <\/li> <li>When truncated, the full text in the control is not visible. Therefore, it\u2019s recommended to make more space for longer items to be fully displayed.<\/li> <li>Colors are not semantic and have no visual representation in sap_belize_hcb and sap_belize_hcw themes.<\/li> <li>The control shows plain text only, formatting is not visualized.<\/li> <\/ul>","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.InfoLabel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setDisplayOnly":{"!description":"Sets a new value for property {@link #getDisplayOnly displayOnly}.\n\nDetermines if the <code>InfoLabel<\/code> is in <code>displayOnly<\/code> mode. When set to <code>true<\/code> the control size adjusts to fit other controls, for example non-editable <code>Forms<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayOnly: Boolean) -> sap.tnt.InfoLabel","parameters":{"bDisplayOnly":"type: boolean, description: New value for property <code>displayOnly<\/code>"}},"getRenderMode":{"!description":"Gets current value of property {@link #getRenderMode renderMode}.\n\nSpecifies the type of the <code>InfoLabel<\/code> paddings - loose or narrow. <b>Note:<\/b> By default the padding is loose. It is recommended to use narrow (smaller) paddings for numeric texts.\n\nDefault value is <code>Loose<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.RenderMode"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nSpecifies the text inside the <code>InfoLabel<\/code> control.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nAvailable options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.tnt.InfoLabel","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nSpecifies the width of the <code>InfoLabel<\/code> control. By default, the <code>InfoLabel<\/code> control has the width of the content. Set this property to restrict the width to a custom value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nSpecifies the width of the <code>InfoLabel<\/code> control. By default, the <code>InfoLabel<\/code> control has the width of the content. Set this property to restrict the width to a custom value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.tnt.InfoLabel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the <code>InfoLabel<\/code>. It can be an icon from the icon font.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.tnt.InfoLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the <code>InfoLabel<\/code>. It can be an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.tnt.InfoLabel","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new <code>InfoLabel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getRenderMode renderMode} : sap.tnt.RenderMode (default: Loose)<\/li>\n<li>{@link #getColorScheme colorScheme} : int (default: 7)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDisplayOnly displayOnly} : boolean (default: false)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/tnt/InfoLabel","setColorScheme":{"!description":"Sets a new value for property {@link #getColorScheme colorScheme}.\n\nSpecifies the fill and text color of the control. Accepts a number between 1 and 10 as a value. You can choose from 10 predefined background and text color combinations. The color schemes are non-semantic, you can select them according to your own preferences. <b>Note:<\/b> ColorScheme 10 is available only in Fiori 3 theme. The default <code>colorScheme<\/code> is 7.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn(iColorScheme: Number) -> sap.tnt.InfoLabel","parameters":{"iColorScheme":"type: int, description: New value for property <code>colorScheme<\/code>"}},"unbindText":{"!description":"Unbinds property {@link #getText text} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.tnt.InfoLabel"},"!helpDescription":"The <code>InfoLabel<\/code> is a small non-interactive control which contains text information and non-semantic color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.).\n\n<h3>Overview<\/h3>\n\nThe control visualizes text information without user interaction. The text inside the control is always in upper case. It can have smaller or larger side paddings which can be specified by the <code>renderMode<\/code> property. The text-background color pair can be changed by setting a number between 1 and 10 that corresponds to the 10 predefined color combinations of the <code>colorScheme<\/code> property. The control is designed to be vertically aligned with UI5 Input and Button control families. When using <code>InfoLabel<\/code> in non-editable <code>Forms<\/code>, <code>Tables<\/code>, etc., set <code>displayOnly=true<\/code> for best visual results.\n\n<h3>Usage Guidelines<\/h3> <ul> <li>If the text is longer than the width of the control, it doesn\u2019t wrap. Instead, it\u2019s represented as ellipsis. <\/li> <li>When truncated, the full text in the control is not visible. Therefore, it\u2019s recommended to make more space for longer items to be fully displayed.<\/li> <li>Colors are not semantic and have no visual representation in sap_belize_hcb and sap_belize_hcw themes.<\/li> <li>The control shows plain text only, formatting is not visualized.<\/li> <\/ul>","bindText":{"!description":"Binds property {@link #getText text} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a detailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.tnt.InfoLabel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setRenderMode":{"!description":"Sets a new value for property {@link #getRenderMode renderMode}.\n\nSpecifies the type of the <code>InfoLabel<\/code> paddings - loose or narrow. <b>Note:<\/b> By default the padding is loose. It is recommended to use narrow (smaller) paddings for numeric texts.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loose<\/code>.","!static":false,"!category":"function","!type":"fn(sRenderMode: sap.tnt.RenderMode) -> sap.tnt.InfoLabel","parameters":{"sRenderMode":"type: sap.tnt.RenderMode, description: New value for property <code>renderMode<\/code>"}},"getDisplayOnly":{"!description":"Gets current value of property {@link #getDisplayOnly displayOnly}.\n\nDetermines if the <code>InfoLabel<\/code> is in <code>displayOnly<\/code> mode. When set to <code>true<\/code> the control size adjusts to fit other controls, for example non-editable <code>Forms<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nAvailable options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getColorScheme":{"!description":"Gets current value of property {@link #getColorScheme colorScheme}.\n\nSpecifies the fill and text color of the control. Accepts a number between 1 and 10 as a value. You can choose from 10 predefined background and text color combinations. The color schemes are non-semantic, you can select them according to your own preferences. <b>Note:<\/b> ColorScheme 10 is available only in Fiori 3 theme. The default <code>colorScheme<\/code> is 7.\n\nDefault value is <code>7<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nSpecifies the text inside the <code>InfoLabel<\/code> control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.tnt.InfoLabel","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.tnt":{"InfoLabel":"sap.tnt.InfoLabel_obj","hasExpander":{"!description":"Specifies if the item has an expander.","!category":"enum","!type":"Boolean"},"RenderMode":"sap.tnt.RenderMode","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"NavigationList":"sap.tnt.NavigationList_obj","ToolHeader":"sap.tnt.ToolHeader_obj","icon":{"!description":"Specifies the icon for the item.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","asyncMode":{"!description":"Defines whether the <code>OverflowToolbar<\/code> works in async mode.\n\n<b>Note:<\/b> When this property is set to <code>true<\/code>, the <code>OverflowToolbar<\/code> makes its layout recalculations asynchronously. This way it is not blocking the thread immediately after re-rendering or resizing.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Sets the enabled property of all controls defined in the content aggregation. Note: This property does not apply to the toolbar itself, but rather to its items.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"expanded":{"!description":"Specifies if the control is expanded.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the toolbar design.\n\n<b>Note:<\/b> Design settings are theme-dependent. They also determine the default height of the toolbar.","!category":"enum","!type":"sap.m.ToolbarDesign"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"ToolPage":"sap.tnt.ToolPage_obj","height":{"!description":"Defines the height of the control. By default, the <code>height<\/code> property depends on the used theme and the <code>design<\/code> property.\n\n<b>Note:<\/b> It is not recommended to use this property if the <code>sapMTBHeader-CTX<\/code> class is used","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"SAPUI5 library with controls specialized for administrative applications.","selectedKey":{"!description":"Specifies the currently selected key.","!category":"enum","!type":"String"},"sideExpanded":{"!description":"Indicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation.","!category":"enum","!type":"Boolean"},"displayOnly":{"!description":"Determines if the <code>InfoLabel<\/code> is in <code>displayOnly<\/code> mode. When set to <code>true<\/code> the control size adjusts to fit other controls, for example non-editable <code>Forms<\/code>.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"NavigationListItem":"sap.tnt.NavigationListItem_obj","active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true. Note: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!category":"enum","!type":"Boolean"},"renderMode":{"!description":"Specifies the type of the <code>InfoLabel<\/code> paddings - loose or narrow. <b>Note:<\/b> By default the padding is loose. It is recommended to use narrow (smaller) paddings for numeric texts.","!category":"enum","!type":"sap.tnt.RenderMode"},"!module":"sap/tnt/library","ToolHeaderUtilitySeparator":"sap.tnt.ToolHeaderUtilitySeparator_obj","!helpDescription":"SAPUI5 library with controls specialized for administrative applications.","SideNavigation":"sap.tnt.SideNavigation_obj","IToolHeader":"sap.tnt.IToolHeader","width":{"!description":"Defines the width of the control. By default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"style":{"!description":"Defines the visual style of the <code>Toolbar<\/code>.\n\n<b>Note:<\/b> The visual styles are theme-dependent.","!category":"enum","!type":"sap.m.ToolbarStyle"},"colorScheme":{"!description":"Specifies the fill and text color of the control. Accepts a number between 1 and 10 as a value. You can choose from 10 predefined background and text color combinations. The color schemes are non-semantic, you can select them according to your own preferences. <b>Note:<\/b> ColorScheme 10 is available only in Fiori 3 theme. The default <code>colorScheme<\/code> is 7.","!category":"enum","!type":"Number"}},"sap.tnt.NavigationList_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.NavigationList"}}}